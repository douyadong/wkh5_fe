'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：悟空找房h5
 2. 页面名称：rent/list(租房-列表)
 3. 作者：liyang@lifang.com
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

var ListController = function (_Controller) {
    _inherits(ListController, _Controller);

    function ListController() {
        _classCallCheck(this, ListController);

        var _this = _possibleConstructorReturn(this, (ListController.__proto__ || Object.getPrototypeOf(ListController)).call(this));

        _this.readyFun();
        var that = _this;
        var cityid = 43;
        $.cookie('cityId') ? cityid = $.cookie('cityId') : cityid = 43;
        var url = location.href.slice(0, location.href.lastIndexOf('/') + 1);
        var conditionQuery = location.href.slice(location.href.lastIndexOf('/') + 1, location.href.length);
        var condition = '';
        if (conditionQuery == "rent") {
            conditionQuery = "ta-0-ta-0-ta-0-ta-0-la-0";
            url = url + "rent/";
        }
        if (conditionQuery.indexOf('?') == -1) {
            condition = conditionQuery;
        } else {
            console.log(conditionQuery.indexOf('?'));
            condition = conditionQuery.slice(0, conditionQuery.indexOf('?'));
        }
        console.log("conditionQuery" + conditionQuery);
        console.log(condition);
        var conditionObject = _this.parseCondition({ condition: condition }); // 转成对象
        _this.choseFun(conditionObject, url);
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        请求接口 获取城市区域
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        _this.request(_this.apiUrl.rent.list.cityAreas, { houseType: 3, cityId: cityid }, {
            successCallback: function successCallback(data) {
                if (data.status == 1) {
                    var dataRes = data;
                    var dataDic = dataRes.data;
                    /*        console.log(dataDic);*/
                    var dicAreas = '';
                    var townList = '';
                    var dataAreasName = '';
                    var dataAreasDi = '';
                    if (conditionObject["di"]) {
                        // 有区域的渲染
                        $('.dic-content').show();
                        dicAreas = "<li>不限</li>";
                        dataDic.forEach(function (item) {
                            // 循环渲染城市
                            if (item.id == conditionObject["di"]) {
                                dicAreas += '<li class="areas-subway" data-id ="' + item.id + '" data-di="di-' + item.id + '">' + item.name + '</li>';
                                if (conditionObject["to"]) {
                                    // 是选择了town
                                    townList = "<li>不限</li>";
                                    item.townList.forEach(function (item) {
                                        if (item.id == conditionObject["to"]) {
                                            townList += '<li class="chosed" data-id ="' + item.id + '" data-to="to-' + item.id + '">' + item.name + '</li>';
                                            $('#dic>p').html(item.name);
                                        } else {
                                            townList += '<li  data-id ="' + item.id + '" data-to="to-' + item.id + '">' + item.name + '</li>';
                                        }
                                    });
                                } else {
                                    // 否选择了town
                                    townList = "<li class='chosed'>不限</li>";
                                    item.townList.forEach(function (item) {
                                        townList += '<li  data-id ="' + item.id + '" data-to="to-' + item.id + '">' + item.name + '</li>';
                                    });
                                    dataAreasName = item.name;
                                    $('#dic>p').html(item.name);
                                }
                                dataAreasDi = "di-" + item.id;
                            } else {
                                dicAreas += '<li data-id ="' + item.id + '" data-di="di-' + item.id + '">' + item.name + '</li>';
                            }
                        });
                        $('#dic').find('i').addClass('bacchosed');
                        $('#dic').addClass('chosed');
                    } else {
                        dicAreas = "<li class='areas-subway'>不限</li>";
                        dataDic.forEach(function (item) {
                            // 循环渲染城市
                            dicAreas += '<li data-id ="' + item.id + '" data-di="di-' + item.id + '">' + item.name + '</li>';
                        });
                    }
                    $('#dicAreas').append(dicAreas);
                    $('#town').append(townList);

                    $('#dicAreas>li').click(function () {
                        // 点击areas更换相应的town
                        var dataAreasId = $(this).attr("data-id"); // areas的id 后面循环对比需要
                        dataAreasDi = $(this).attr("data-di"); // 需要传给后台pinURL的参数  areas
                        dataAreasName = $(this).html(); // 获取中文地铁线路名称
                        $(this).siblings().removeClass('areas-subway');
                        $(this).addClass('areas-subway');
                        if (dataAreasName == "不限") {
                            $('#dic>p').html("区域");
                            $('.bac').hide();
                            $('#dic').children('span').removeClass('direction');
                            $('#dic').find('i').removeClass('bacchosed');
                            $('#dic').removeClass('active-color-top');
                            $('#dic').removeClass('chosed');
                            $('.dic').slideToggle();
                            delete conditionObject['di']; // 删除areas的对象
                            delete conditionObject['to']; // 删除town的对象
                            delete conditionObject['li']; // 删除地铁线路的对象
                            delete conditionObject['st']; // 删除地铁线路的对象
                            var conditionString = that.objectToString(conditionObject);
                            window.location = url + conditionString;
                        } else {
                            dataDic.forEach(function (item) {
                                //
                                if (conditionObject["di"]) {
                                    if (conditionObject["di"] == item.id && dataAreasId == item.id) {
                                        if (conditionObject["to"]) {
                                            townList = "<li>不限</li>";
                                            item.townList.forEach(function (item) {
                                                // 循环渲染town
                                                if (conditionObject["to"] == item.id) {
                                                    townList += '<li class="chosed" data-id ="' + item.id + '" data-to="to-' + item.id + '">' + item.name + '</li>';
                                                } else {
                                                    townList += '<li data-id ="' + item.id + '" data-to="to-' + item.id + '">' + item.name + '</li>';
                                                }
                                            });
                                            $('#town').empty();
                                            $('#town').append(townList);
                                        } else {
                                            townList = "<li class='chosed'>不限</li>";
                                            item.townList.forEach(function (item) {
                                                // 循环渲染town
                                                townList += '<li data-id ="' + item.id + '" data-to="to-' + item.id + '">' + item.name + '</li>';
                                            });
                                            $('#town').empty();
                                            $('#town').append(townList);
                                        }
                                    } else {
                                        if (dataAreasId == item.id && item.townList) {
                                            townList = "<li>不限</li>";
                                            item.townList.forEach(function (item) {
                                                // 循环渲染town
                                                townList += '<li data-id ="' + item.id + '" data-to="to-' + item.id + '">' + item.name + '</li>';
                                            });
                                            $('#town').empty();
                                            $('#town').append(townList);
                                        }
                                    }
                                } else {
                                    if (dataAreasId == item.id && item.townList) {
                                        townList = "<li>不限</li>";
                                        item.townList.forEach(function (item) {
                                            // 循环渲染town
                                            townList += '<li data-id ="' + item.id + '" data-to="to-' + item.id + '">' + item.name + '</li>';
                                        });
                                        $('#town').empty();
                                        $('#town').append(townList);
                                    }
                                }
                            });
                            $('#town >li').click(function () {
                                // town的点击获取
                                $(this).siblings().removeClass('chosed');
                                $(this).addClass('chosed');
                                var dataTownId = $(this).attr("data-id"); // 站点的id
                                var dataTownTo = $(this).attr("data-to"); // 需要传给后台pinURL的参数  town
                                var dataTownName = $(this).html(); // 获取中文town名称
                                delete conditionObject['li']; // 删除地铁线的对象
                                delete conditionObject['st']; // 删除地铁站点的对象
                                if (dataTownName == "不限") {
                                    $('#dic > p').html(dataAreasName);
                                    var dataAreasDiObj = that.parseCondition({ condition: dataAreasDi }); // 转换成对象
                                    Object.assign(conditionObject, dataAreasDiObj); // 合并对象
                                    delete conditionObject['to']; // 删除town的对象
                                    var _conditionString = that.objectToString(conditionObject); // 转换成字符串
                                    console.log(_conditionString);
                                    window.location = url + _conditionString; // 跳转的URL
                                } else {
                                    $('#dic > p').html(dataTownName);
                                    var areasTownString = dataAreasDi + '-' + dataTownTo; // 字符串链接
                                    var areasTownObj = that.parseCondition({ condition: areasTownString }); // 转换成对象
                                    Object.assign(conditionObject, areasTownObj); // 合并对象
                                    var _conditionString2 = that.objectToString(conditionObject); // 转换成字符串
                                    console.log(_conditionString2);
                                    window.location = url + _conditionString2; // 跳转的URL
                                }
                                $('.bac').hide();
                                $('#dic').children('span').removeClass('direction');
                                $('#dic').find('i').addClass('bacchosed');
                                $('#dic').addClass('chosed');
                                $('.dic').slideToggle();
                            });
                        }
                    });
                    // 再次渲染时用到的点击事件
                    $('#town >li').click(function () {
                        // town的点击获取
                        $(this).siblings().removeClass('chosed');
                        $(this).addClass('chosed');
                        var dataTownId = $(this).attr("data-id"); // 站点的id
                        var dataTownTo = $(this).attr("data-to"); // 需要传给后台pinURL的参数  town
                        var dataTownName = $(this).html(); // 获取中文town名称
                        delete conditionObject['li']; // 删除地铁线的对象
                        delete conditionObject['st']; // 删除地铁站点的对象
                        if (dataTownName == "不限") {
                            $('#dic > p').html(dataAreasName);
                            var dataAreasDiObj = that.parseCondition({ condition: dataAreasDi }); // 转换成对象
                            Object.assign(conditionObject, dataAreasDiObj); // 合并对象
                            delete conditionObject['to']; // 删除town的对象
                            var conditionString = that.objectToString(conditionObject); // 转换成字符串
                            console.log(conditionString);
                            window.location = url + conditionString; // 跳转的URL
                        } else {
                            $('#dic > p').html(dataTownName);
                            var areasTownString = dataAreasDi + '-' + dataTownTo; // 字符串链接
                            var areasTownObj = that.parseCondition({ condition: areasTownString }); // 转换成对象
                            Object.assign(conditionObject, areasTownObj); // 合并对象
                            var _conditionString3 = that.objectToString(conditionObject); // 转换成字符串
                            console.log(_conditionString3);
                            window.location = url + _conditionString3; // 跳转的URL
                        }
                        $('.bac').hide();
                        $('#dic').children('span').removeClass('direction');
                        $('#dic').find('i').addClass('bacchosed');
                        $('#dic').addClass('chosed');
                        $('.dic').slideToggle();
                    });
                }
            }
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        请求接口 获取地铁
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        _this.request(_this.apiUrl.rent.list.citySubway, { cityId: cityid }, {
            successCallback: function successCallback(data) {
                if (data.status == 1) {
                    var dataRes = data;
                    var subwayLine = dataRes.data;
                    console.log(subwayLine);
                    var metroLine = '';
                    var metroStation = '';
                    var dataLineName = '';
                    var dataLineLi = '';
                    subwayLine.forEach(function (item) {
                        // 循环渲染地铁线路
                        if (conditionObject['li'] && conditionObject['li'] == item.id) {
                            $('.dic-content').hide();
                            $('.metro-content').show();
                            $('.tabs > ul > li:eq(0)').removeClass('active-color-dic');
                            $('.tabs > ul > li:eq(1)').addClass('active-color-dic');
                            metroLine += '<li class="areas-subway" data-id ="' + item.id + '" data-li="li-' + item.id + '">' + item.name + '</li>';
                            if (conditionObject['st']) {
                                metroStation = "<li>不限</li>";
                                item.subList.forEach(function (item) {
                                    if (conditionObject['st'] == item.id) {
                                        metroStation += '<li  class=\'chosed\' data-id ="' + item.id + '" data-st="st-' + item.id + '">' + item.name + '</li>';
                                        $('#dic > p').html(item.name);
                                    } else {
                                        metroStation += '<li data-id ="' + item.id + '" data-st="st-' + item.id + '">' + item.name + '</li>';
                                    }
                                });
                            } else {
                                metroStation = "<li class='chosed'>不限</li>";
                                item.subList.forEach(function (item) {
                                    metroStation += '<li data-id ="' + item.id + '" data-st="st-' + item.id + '">' + item.name + '</li>';
                                });
                                dataLineName = item.name;
                                $('#dic > p').html(item.name);
                                dataLineLi = 'li-' + item.id;
                            }
                            $('#dic').find('i').addClass('bacchosed');
                            $('#dic').addClass('chosed');
                        } else {
                            metroLine += '<li data-id ="' + item.id + '" data-li="li-' + item.id + '">' + item.name + '</li>';
                        }
                    });
                    $('#metroStation').append(metroStation);
                    $('#metroLine').append(metroLine);
                    $('#metroLine > li').click(function () {
                        // 点击地铁线路更换相应的站点
                        var dataLineId = $(this).attr("data-id"); // 地铁线路的id 后面循环对比需要
                        dataLineLi = $(this).attr("data-li"); // 需要传给后台pinURL的参数  地铁线路
                        dataLineName = $(this).html(); // 获取中文地铁线路名称
                        $(this).siblings().removeClass('areas-subway');
                        $(this).addClass('areas-subway');
                        subwayLine.forEach(function (item) {
                            if (conditionObject['li']) {
                                if (conditionObject['li'] == item.id && dataLineId == item.id) {
                                    if (conditionObject['st']) {
                                        metroStation = "<li>不限</li>";
                                        item.subList.forEach(function (item) {
                                            // 循环渲染地铁站点
                                            if (conditionObject['st'] == item.id) {
                                                metroStation += '<li class="chosed"  data-id ="' + item.id + '" data-st="st-' + item.id + '">' + item.name + '</li>';
                                            } else {
                                                metroStation += '<li data-id ="' + item.id + '" data-st="st-' + item.id + '">' + item.name + '</li>';
                                            }
                                        });
                                        $('#metroStation').empty();
                                        $('#metroStation').append(metroStation);
                                    } else {
                                        metroStation = "<li class='chosed'>不限</li>";
                                        item.subList.forEach(function (item) {
                                            // 循环渲染地铁站点
                                            metroStation += '<li data-id ="' + item.id + '" data-st="st-' + item.id + '">' + item.name + '</li>';
                                        });
                                        $('#metroStation').empty();
                                        $('#metroStation').append(metroStation);
                                    }
                                } else {
                                    if (dataLineId == item.id && item.subList) {
                                        metroStation = "<li>不限</li>";
                                        item.subList.forEach(function (item) {
                                            // 循环渲染地铁站点
                                            metroStation += '<li data-id ="' + item.id + '" data-st="st-' + item.id + '">' + item.name + '</li>';
                                        });
                                        $('#metroStation').empty();
                                        $('#metroStation').append(metroStation);
                                    }
                                }
                            } else {
                                if (dataLineId == item.id && item.subList) {
                                    metroStation = "<li>不限</li>";
                                    item.subList.forEach(function (item) {
                                        // 循环渲染地铁站点
                                        metroStation += '<li data-id ="' + item.id + '" data-st="st-' + item.id + '">' + item.name + '</li>';
                                    });
                                    $('#metroStation').empty();
                                    $('#metroStation').append(metroStation);
                                }
                            }
                        });

                        $('#metroStation > li').click(function () {
                            // 站点的点击
                            $(this).siblings().removeClass('chosed');
                            $(this).addClass('chosed');
                            var dataStationId = $(this).attr("data-id"); // 站点的id
                            var dataStationSt = $(this).attr("data-st"); // 需要传给后台pinURL的参数  站点
                            var dataStationName = $(this).html(); // 获取中文地铁站点名称
                            delete conditionObject['di']; // 删除areas的对象
                            delete conditionObject['to']; // 删除town的对象
                            if ($(this).html() == "不限") {
                                $('#dic > p').html(dataLineName); // 判断赋值给检索title
                                var dataLineLiObj = that.parseCondition({ condition: dataLineLi }); // 转换成对象
                                Object.assign(conditionObject, dataLineLiObj); // 合并对象
                                delete conditionObject['st']; // 删除站点的对象
                                var conditionString = that.objectToString(conditionObject); // 转换成字符串
                                console.log(conditionString);
                                window.location = url + conditionString; // 跳转的URL
                            } else {
                                $('#dic > p').html(dataStationName); // 判断赋值给检索title
                                var lineStationString = dataLineLi + '-' + dataStationSt; // 合并字符串
                                var lineStationObj = that.parseCondition({ condition: lineStationString }); // 转换成对象
                                Object.assign(conditionObject, lineStationObj); // 合并对象
                                var _conditionString4 = that.objectToString(conditionObject); // 转换成字符串
                                console.log(_conditionString4);
                                window.location = url + _conditionString4; // 跳转的URL
                            }
                            $('.bac').hide();
                            $('#dic').children('span').removeClass('direction');
                            $('#dic').find('i').addClass('bacchosed');
                            $('#dic').addClass('chosed');
                            $('.dic').slideToggle();
                        });
                    });

                    $('#metroStation > li').click(function () {
                        // 站点的点击
                        /*  $(this).siblings().removeClass('chosed');
                          $(this).addClass('chosed');*/
                        var dataStationId = $(this).attr("data-id"); // 站点的id
                        var dataStationSt = $(this).attr("data-st"); // 需要传给后台pinURL的参数  站点
                        var dataStationName = $(this).html(); // 获取中文地铁站点名称
                        delete conditionObject['di']; // 删除areas的对象
                        delete conditionObject['to']; // 删除town的对象
                        if ($(this).html() == "不限") {
                            $('#dic > p').html(dataLineName); // 判断赋值给检索title
                            var dataLineLiObj = that.parseCondition({ condition: dataLineLi }); // 转换成对象
                            Object.assign(conditionObject, dataLineLiObj); // 合并对象
                            delete conditionObject['st']; // 删除站点的对象
                            var conditionString = that.objectToString(conditionObject); // 转换成字符串
                            console.log(conditionString);
                            window.location = url + conditionString; // 跳转的URL
                        } else {
                            $('#dic > p').html(dataStationName); // 判断赋值给检索title
                            var lineStationString = dataLineLi + '-' + dataStationSt; // 合并字符串
                            var lineStationObj = that.parseCondition({ condition: lineStationString }); // 转换成对象
                            Object.assign(conditionObject, lineStationObj); // 合并对象
                            var _conditionString5 = that.objectToString(conditionObject); // 转换成字符串
                            console.log(_conditionString5);
                            window.location = url + _conditionString5; // 跳转的URL
                        }
                        $('.bac').hide();
                        $('#dic').children('span').removeClass('direction');
                        $('#dic').find('i').addClass('bacchosed');
                        $('#dic').addClass('chosed');
                        $('.dic').slideToggle();
                    });
                }
            }
        });

        _this.firstGivePage(conditionObject, _this);

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        租房价格点击选择函数
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $('.price-list > ul >li').click(function () {
            $(this).siblings().removeClass('chosed');
            $(this).addClass('chosed');
            $('.bac').hide();
            $('#price').children('span').removeClass('direction');
            delete conditionObject['cp']; // 删除价格参数的对象
            if ($(this).html() == '不限') {
                $('#price>p').html("租金");
                $('#price').find('i').removeClass('bacchosed');
                $('#price').removeClass('active-color-top');
                $('#price').removeClass('chosed');
                delete conditionObject['pr']; // 删除价格参数的对象
                var conditionString = that.objectToString(conditionObject); // 对象转换成字符串
                console.log(conditionString);
                window.location = url + conditionString; // 跳转的URL
            } else {
                $('#price>p').html($(this).html().replace(/\s|\xA0/g, ""));
                $('#price').find('i').addClass('bacchosed');
                $('#price').addClass('active-color-top');
                var dataPrice = $(this).attr("data-pr");
                var dataPriceObj = that.parseCondition({ condition: dataPrice }); // 转换成对象
                Object.assign(conditionObject, dataPriceObj); // 合并对象
                var _conditionString6 = that.objectToString(conditionObject); // 转换成字符串
                console.log(_conditionString6);
                window.location = url + _conditionString6; // 跳转的URL
            }
            $('.price-total').slideToggle();
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        租房价格自定义函数
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $('#selfPrConf').click(function () {
            var lowPr = $('#lowPr').val();
            var topPr = $('#topPr').val();
            if (lowPr > topPr) {
                $('.wrong').show();
                setTimeout(function () {
                    $('.wrong').hide();
                }, 2000);
            } else {
                $('.wrong').hide();
                if (lowPr && topPr) {
                    $('#price>p').html(lowPr + '-' + topPr);
                    $('#price').find('i').addClass('bacchosed');
                    $('#price').addClass('active-color-top');
                    delete conditionObject['pr']; // 删除价格选择的参数的对象
                    var cp = { "cp": lowPr + "to" + topPr };
                    Object.assign(conditionObject, cp); // 合并对象
                    var conditionString = that.objectToString(conditionObject); // 转换成字符串
                    console.log(conditionString);
                    window.location = url + conditionString; // 跳转的URL
                } else if (lowPr == '' && topPr) {
                    $('#price>p').html(topPr + '以下');
                    $('#price').find('i').addClass('bacchosed');
                    $('#price').addClass('active-color-top');
                    delete conditionObject['pr']; // 删除价格选择的参数的对象
                    var _cp = { "cp": "0" + "to" + topPr };
                    Object.assign(conditionObject, _cp); // 合并对象
                    var _conditionString7 = that.objectToString(conditionObject); // 转换成字符串
                    console.log(_conditionString7);
                    window.location = url + _conditionString7; // 跳转的URL
                } else if (topPr == '' && lowPr) {
                    $('#price>p').html(lowPr + '以上');
                    $('#price').find('i').addClass('bacchosed');
                    $('#price').addClass('active-color-top');
                    delete conditionObject['pr']; // 删除价格选择的参数的对象
                    var _cp2 = { "cp": lowPr + "to" + "0" };
                    Object.assign(conditionObject, _cp2); // 合并对象
                    var _conditionString8 = that.objectToString(conditionObject); // 转换成字符串
                    console.log(_conditionString8);
                    window.location = url + _conditionString8; // 跳转的URL
                } else {
                    $('#price>p').html("租金");
                    $('#price').find('i').removeClass('bacchosed');
                    $('#price').removeClass('active-color-top');
                    $('#price').removeClass('chosed');
                    delete conditionObject['pr']; // 删除价格选择的参数的对象
                    delete conditionObject['cp']; // 删除价格自定义参数的对象
                    var _conditionString9 = that.objectToString(conditionObject); // 转换成字符串
                    console.log(_conditionString9);
                    window.location = url + _conditionString9; // 跳转的URL
                }
                $('.bac').hide();
                $('#price').children('span').removeClass('direction');
                $('.price-total').slideToggle();
            }
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        房型传参
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $('#houseCmfir').click(function () {
            var houseList = $('.house-list  > ul > li '); // 获取房型标签
            var houseListString = '';
            var houseListArray = [];
            var noHouseListArray = [];
            houseList.each(function (index, item) {
                // 判断是否房型被选中
                if (item.classList.length == 1) {
                    houseListArray.push(index);
                } else {
                    noHouseListArray.push(index);
                }
            });
            if (houseListArray.length > 0) {
                houseListArray.forEach(function (item, index) {
                    if (index == 0) {
                        houseListString = $('.house-list  > ul > li:eq(' + item + ')').attr('data-la');
                    } else {
                        houseListString = houseListString + '-' + $('.house-list  > ul > li:eq(' + item + ')').attr('data-la');
                    }
                });
                if (houseListArray.length == 1) {
                    // 判断单选的情况下是不限 还是有具体房型
                    if ($('.house-list  > ul > li:eq(' + houseListArray[0] + ')').html() == '不限') {
                        $('#type >p').html('户型');
                    } else {
                        var houseTitle = $('.house-list  > ul > li:eq(' + houseListArray[0] + ')').html();
                        $('#type >p').html(houseTitle);
                        $('#type').find('i').addClass('bacchosed');
                    }
                } else {
                    $('#type >p').html('多选');
                    $('#type').find('i').addClass('bacchosed');
                }
                var houseListObj = that.parseCondition({ condition: houseListString }); // 转换成对象
                Object.assign(conditionObject, houseListObj); // 合并对象
                var conditionString = that.objectToString(conditionObject); // 转换成字符串
                console.log(conditionString);
                window.location = url + conditionString; // 跳转的URL
            }if (noHouseListArray.length == 5 && houseListArray[0] == 0) {
                $('#type').find('i').removeClass('bacchosed');
                $('#type').removeClass('active-color-top');
                $('#type').removeClass('chosed');
            }
            $('.bac').hide();
            $('#type').children('span').removeClass('direction');
            $('.house-type').slideToggle();
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        更多选择
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $('#moreComf').click(function () {
            var tag = $('.more-spec > ul >li');
            var area = $('.area > ul >li');
            var decoration = $('.decoration > ul >li');
            var tagString = '';
            var areaString = '';
            var decorationString = '';
            var decorationArray = [];
            var moreDta = {};
            var tagObj = {};
            var areaObj = {};
            var decorationObj = {};
            tag.each(function (index, item) {
                if (item.classList.length == 1) {
                    // 根据标签样式判断是否有选择
                    if (index == 0) {
                        tagString = "ta-1";
                    } else {
                        tagString = tagString + '-' + "ta-1";
                    }
                } else {
                    if (index == 0) {
                        tagString = "ta-0";
                    } else {
                        tagString = tagString + '-' + "ta-0";
                    }
                }
            });
            area.each(function (index, item) {
                if (item.classList.length == 1) {
                    areaString = $('.area > ul >li:eq(' + index + ')').attr('data-ar');
                }
            });
            decoration.each(function (index, item) {
                if (item.classList.length == 1) {
                    // 判断哪些有样式 建立数组
                    decorationArray.push(index);
                }
            });
            if (decorationArray.length > 1) {
                decorationArray.forEach(function (item, index) {
                    if (index == 0) {
                        decorationString = $('.decoration > ul >li:eq(' + item + ')').attr('data-dt');
                    } else {
                        decorationString = decorationString + '-' + $('.decoration > ul >li:eq(' + item + ')').attr('data-dt');
                    }
                });
            } else {
                decorationString = $('.decoration > ul >li:eq(' + decorationArray[0] + ')').attr('data-dt');
            }
            if (tagString) {
                tagObj = that.parseCondition({ condition: tagString });
            } else {
                delete conditionObject['ta'];
            }
            if (areaString) {
                areaObj = that.parseCondition({ condition: areaString });
            } else {
                delete conditionObject['ar'];
            }
            if (decorationString) {
                decorationObj = that.parseCondition({ condition: decorationString });
            } else {
                delete conditionObject['dt'];
            }
            Object.assign(moreDta, tagObj, areaObj, decorationObj); // 合并对象
            if (areaObj['ar'] || decorationObj['dt'] || tagString != "ta-0-ta-0-ta-0-ta-0") {
                $('#more').find('i').addClass('bacchosed');
                $("#more").removeClass('active-color-top');
                $("#more").addClass('chosed');
            } else {
                $('#more').find('i').removeClass('bacchosed');
                $("#more").removeClass('active-color-top');
                $("#more").removeClass('chosed');
            }
            $('.bac').hide();
            $('#more').children('span').removeClass('direction');
            $('.more').slideToggle();
            Object.assign(conditionObject, tagObj, areaObj, decorationObj); // 合并对象
            var conditionString = that.objectToString(conditionObject); // 转换成字符串
            window.location = url + conditionString; // 跳转的URL
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        排序
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        if (conditionObject['so']) {
            var sortChose = $('.sort-chose>ul>li');
            var soSting = that.objectToString({ 'so': conditionObject['so'] }); // 转换成字符串
            sortChose.each(function (index, item) {
                if (soSting == $('.sort-chose>ul>li:eq(' + index + ')').attr('data-so')) {
                    $('.sort-chose>ul>li:eq(' + index + ')').removeClass('chosed');
                    $('.sort-chose>ul>li:eq(' + index + ')').addClass('chosed');
                }
            });
            if (soSting != 'so-0') {
                $('.sort').addClass('sort-change');
            } else {
                $('.sort').removeClass('sort-change');
            }
        }
        $('.sort-chose>ul>li').click(function () {
            $('.bac').css({ 'z-index': '10', 'top': '4.5rem' });
            $('.bac').hide();
            $(this).siblings().removeClass('chosed');
            $(this).addClass('chosed');
            $('.sort-chose').slideToggle();
            var soString = $(this).attr('data-so');
            var soObj = that.parseCondition({ condition: soString });
            console.log(soObj);
            Object.assign(conditionObject, soObj); // 合并对象
            var conditionString = that.objectToString(conditionObject); // 转换成字符串
            console.log(conditionString);
            window.location = url + conditionString; // 跳转的URL
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        搜索
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

        $('#searchInput').keyup(function (event) {
            if ($(this).val()) {
                $('.icon-close').show();
                $('.have-result').hide();
                $('.icon-close').click(function () {
                    $('#searchInput').val('');
                    $('.icon-close').hide();
                    $('#showResult').empty();
                    $('.have-result').show();
                    $('.no-result').hide();
                    if (JSON.parse(localStorage.getItem('searchHistory'))) {
                        // Storage取值渲染
                        var searchHistory = JSON.parse(localStorage.getItem('searchHistory')).reverse();
                        var listSearchHistory = '';
                        searchHistory.forEach(function (item, index) {
                            if (index == 0) {
                                listSearchHistory = '<li><p>' + item.key + '</p><span>\u4E71\u4E03\u516B\u7CDF</span></li>';
                            } else {
                                listSearchHistory = listSearchHistory + ('<li><p>' + item.key + '</p><span>\u4E71\u4E03\u516B\u7CDF</span></li>');
                            }
                        });
                        $('#resultHistory').empty();
                        $('#resultHistory').append(listSearchHistory);
                    } else {
                        $('.have-result').hide();
                    }
                });
                var saveLocalStorage = [];

                var sendData = {
                    key: $(this).val(),
                    cityId: cityid,
                    pageName: "renthouselist"
                };
                /*setTimeout(function () {*/
                that.request(that.apiUrl.rent.list.acWord, sendData, {
                    successCallback: function successCallback(data) {
                        var renthouselistData = data.data;
                        if (renthouselistData.secondHouseList) {
                            $('.show-result').show();
                            $('.no-result').hide();
                            var titleName = '';
                            var addreName = '';
                            var searchaAcWord = '';
                            renthouselistData.secondHouseList.forEach(function (item, index) {
                                // 循环出搜索结果
                                titleName = item.displayname.replace(item.markname, '<span>' + item.markname + '</span>');
                                addreName = item.address.replace(item.markname, '<span>' + item.markname + '</span>');
                                if (index == 0) {
                                    searchaAcWord = '<li data-subEstateid="' + item.subEstateId + '" data-name="' + item.displayname + '" data-address="' + item.address + '"><p>' + titleName + '</p><span>' + addreName + '</span></li>';
                                } else {
                                    searchaAcWord = searchaAcWord + ('<li data-subEstateid="' + item.subEstateId + '" data-name="' + item.displayname + '" data-address="' + item.address + '"><p>' + titleName + '</p><span>' + addreName + '</span></li>');
                                }
                            });
                            $('#showResult').empty();
                            $('#showResult').append(searchaAcWord);
                        } else {
                            $('.no-result').show();
                            $('.show-result').hide();
                        }
                        // 搜索条目点击跳转 和储存
                        $('#showResult >li').click(function () {
                            JSON.parse(localStorage.getItem('searchHistory')) ? saveLocalStorage = JSON.parse(localStorage.getItem('searchHistory')) : saveLocalStorage = [];
                            var singleData = {
                                "key": $(this).attr('data-name'),
                                "id": $(this).attr('data-subEstateid'),
                                "address": $(this).attr('data-address')
                            };
                            saveLocalStorage.push(singleData);
                            localStorage.setItem("searchHistory", JSON.stringify(saveLocalStorage));
                            var subEstateid = $(this).attr('data-subEstateid');
                            var conditionString = "ta-0-ta-0-ta-0-ta-0-la-0";
                            window.location = url + conditionString + "?subEstateId=" + subEstateid;
                        });
                    }
                });
                if (event.keyCode == 13) {
                    //enter存值  ta-0-ta-0-ta-0-ta-0-la-0
                    JSON.parse(localStorage.getItem('searchHistory')) ? saveLocalStorage = JSON.parse(localStorage.getItem('searchHistory')) : saveLocalStorage = [];
                    var singleData = {
                        "key": $('#showResult>li:eq(0)').attr('data-name'),
                        "id": $('#showResult>li:eq(0)').attr('data-subEstateid'),
                        "address": $('#showResult>li:eq(0)').attr('data-address')
                    };
                    saveLocalStorage.push(singleData);
                    localStorage.setItem("searchHistory", JSON.stringify(saveLocalStorage));
                    var conditionString = "ta-0-ta-0-ta-0-ta-0-la-0";
                    var subEstateId = $('#showResult>li:eq(0)').attr('data-subEstateid');
                    window.location = url + conditionString + '?subEstateId=' + subEstateId;
                }

                /*     },1000);*/
            }
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        搜索初步渲染
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        if (JSON.parse(localStorage.getItem('searchHistory')) && conditionQuery.indexOf('?') > 0) {
            var firtName = JSON.parse(localStorage.getItem('searchHistory'))[0].key;
            $('#searchInput').val(firtName);
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        清除搜索
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

        $('#clearOption').click(function () {
            var conditionString = "ta-0-ta-0-ta-0-ta-0-la-0";
            window.location = url + conditionString;
        });

        return _this;
    }

    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    条件选择的初始化函数
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


    _createClass(ListController, [{
        key: 'readyFun',
        value: function readyFun() {
            setTimeout(function () {
                $('.total-num').hide();
                $('.all-control').css("margin-top", "10rem");
            }, 1500);
            $('.content-hight').height($(window).height() * 0.7 - $('.tabs').height());
        }

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        条件选择的区域选择的点击效果函数
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: 'choseFun',
        value: function choseFun(conditionObject, url) {
            var self = this;
            /* 条件选择点击事件*/
            $('.rent-list > ul > li').click(function () {
                self.firstGivePage(conditionObject, self);
                $(this).siblings().removeClass('active-color-top');
                $(this).toggleClass('active-color-top');
                var listI = $('.rent-list > ul > li > span >i'); // 获取检索箭头的  i标签
                listI.each(function (index, item) {
                    // 循环i标签（下箭头）是否有样式为蓝色，是代表用户选取了数据，否代表没有选取
                    if (item.classList.length == 1) {
                        $('.rent-list > ul > li:eq(' + index + ')').addClass('chosed');
                    } else {
                        $('.rent-list > ul > li:eq(' + index + ')').removeClass('chosed');
                    }
                });
                $(this).siblings().children('span').removeClass('direction');
                /*点击li标签事件改变子标签span箭头的样式（后面会选中条件查询之后恢复指向）*/
                $(this).children('span').toggleClass('direction');
                var list = $('.rent-list > ul > li > span'); // 获取检索当中的span标签   后面判断指向 （根据class判断指向）
                $('.bac').hide();
                list.each(function (index, item) {
                    //根据span标签的样式指向判断底部罩层是否显示
                    if (item.classList.length == 1) {
                        $('.bac').show();
                    }
                });
                var indexP = $(this).index();
                /*根据点击li标签的位置判断相应的模块响应出现*/
                if (indexP == 0) {
                    /*判断区域模块的显示*/
                    $('.dic').stop();
                    $('.price-total').hide();
                    $('.house-type').hide();
                    $('.more').hide();
                    $('.dic').slideToggle();
                } else if (indexP == 1) {
                    /*判断价格模块的显示*/
                    $('.bac').stop();
                    $('.dic').hide();
                    $('.house-type').hide();
                    $('.more').hide();
                    $('.price-total').slideToggle();
                } else if (indexP == 2) {
                    /* 判断户型模块显示*/
                    $('.bac').stop();
                    $('.dic').hide();
                    $('.price-total').hide();
                    $('.more').hide();
                    $('.house-type').slideToggle();
                } else if (indexP == 3) {
                    /* 判断更多模块显示*/
                    $('.bac').stop();
                    $('.dic').hide();
                    $('.price-total').hide();
                    $('.house-type').slideUp();
                    $('.more').slideToggle();
                }
            });
            /*区域与地铁选择点击事件*/
            $('.tabs > ul > li').click(function () {
                $(this).siblings().removeClass('active-color-dic');
                $(this).addClass('active-color-dic');
                var indexP = $(this).index();
                if (indexP == 0) {
                    /*判断区域模块显示或隐藏*/
                    $('.metro-content').hide();
                    $('.dic-content').slideDown();
                } else if (indexP == 1) {
                    /*判断地铁模块显示或隐藏*/
                    $('.dic-content').hide();
                    $('.metro-content').slideDown();
                }
            });
            /*更多 标签的点击*/
            $('.more-spec > ul >li').click(function () {
                $(this).toggleClass('active-house');
            });
            /*更多 面积的点击*/
            $('.area > ul >li').click(function () {
                $(this).siblings().removeClass('active-house');
                $(this).toggleClass('active-house');
            });
            /*更多 装修的点击*/
            $('.decoration > ul >li').click(function () {
                $(this).toggleClass('active-house');
            });
            /* 房型选择点击事件*/
            $('.house-list > ul > li').click(function () {
                var indexP = $(this).index();
                if (indexP == 0) {
                    $(this).siblings().removeClass('active-house');
                    $(this).addClass('active-house');
                } else {
                    $(this).toggleClass('active-house');
                    var houseList = $('.house-list > ul > li');
                    var houseListArray = [];
                    houseList.each(function (index, item) {
                        if (item.classList.length == 1) {
                            if (index == 0) {
                                $('.house-list > ul > li:eq(0)').removeClass('active-house');
                            }
                        } else {
                            houseListArray.push(index);
                        }
                    });
                    if (houseListArray.length > 5) {
                        $('.house-list > ul > li:eq(0)').addClass('active-house');
                    }
                }
            });
            /*排序点击弹出*/
            $('#sort').click(function () {
                $('.bac').css({ 'z-index': '13', 'top': '0' });
                $('.bac').show();
                $('.sort-chose').slideToggle();
            });
            /*排序点击选择*/

            /*搜索框的点击*/
            $('#searchInput').click(function () {
                $('.rent-search').addClass('active-search');
                $('.rent-search').siblings('ul').addClass('on-hide');
                $('.all-control').addClass('on-hide');
                $('body').css('background-color', '#F0F0F0');
                if (JSON.parse(localStorage.getItem('searchHistory'))) {
                    // Storage取值渲染
                    $('.have-result').show();
                    var searchHistory = JSON.parse(localStorage.getItem('searchHistory')).reverse();
                    var listSearchHistory = '';
                    searchHistory.forEach(function (item, index) {
                        if (index == 0) {
                            listSearchHistory = '<li data-subEstateid="' + item.id + '"><p>' + item.key + '</p><span>' + item.address + '</span></li>';
                        } else {
                            listSearchHistory = listSearchHistory + ('<li data-subEstateid="' + item.id + '"><p>' + item.key + '</p><span>' + item.address + '</span></li>');
                        }
                    });
                    $('#resultHistory').empty();
                    $('#resultHistory').append(listSearchHistory);
                    // 历史搜索点击
                    $('#resultHistory >li').click(function () {
                        var subEstateid = $(this).attr('data-subEstateid');
                        var conditionString = "ta-0-ta-0-ta-0-ta-0-la-0";
                        window.location = url + conditionString + "?subEstateId=" + subEstateid;
                    });
                } else {
                    $('.have-result').hide();
                }
            });
            /*清楚历史*/
            $('#clearHistory').click(function () {
                localStorage.removeItem('searchHistory');
                $('.have-result').hide();
            });
            /*更多的清楚搜索*/
            $('#cancelMore').click(function () {
                /*let conditionPr = $('.house-list>ul>li');*/
                $('.more-spec > ul >li').removeClass('active-house');
                $('.area > ul >li').removeClass('active-house');
                $('.decoration > ul >li').removeClass('active-house');
            });
        }

        /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        首次渲染 所选择的条件
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/

    }, {
        key: 'firstGivePage',
        value: function firstGivePage(conditionObject, self) {
            // 租房房型初次选中渲染
            if (conditionObject['la']) {
                var conditionPr = $('.house-list>ul>li');
                var laString = '';
                var numberD = [0, 1, 2, 3, 4, 5];
                if (conditionObject['la'].length > 1) {
                    console.log(conditionObject['la']);
                    conditionObject['la'].forEach(function (item) {
                        $('.house-list>ul>li:eq(' + item + ')').addClass('active-house');
                        numberD.forEach(function (itemN, indexN) {
                            if (item == itemN) {
                                numberD.splice(indexN, 1);
                            }
                        });
                    });
                    numberD.forEach(function (item) {
                        $('.house-list>ul>li:eq(' + item + ')').removeClass('active-house');
                    });
                    $('#type >p').html('多选');
                    $('#type').find('i').addClass('bacchosed');
                    $('#type').addClass('chosed');
                } else {
                    if (conditionObject['la'] == 0) {
                        $('#type >p').html('不限');
                        $('#type').find('i').removeClass('bacchosed');
                        $('#type').removeClass('chosed');
                    } else {
                        $('#type >p').html($('.house-list>ul>li:eq(' + conditionObject['la'] + ')').html());
                        $('#type').find('i').addClass('bacchosed');
                        $('#type').addClass('chosed');
                    }
                    $('.house-list>ul>li:eq(' + conditionObject['la'] + ')').addClass('active-house');
                    $('.house-list>ul>li:eq(' + conditionObject['la'] + ')').siblings().removeClass('active-house');
                }
            } else {
                $('.house-list>ul>li:eq(0)').addClass('active-house');
            }

            //租房价格初次选中渲染
            if (conditionObject['pr']) {
                var _conditionPr = $('.price-list>ul>li');
                var conditionString = self.objectToString({ "pr": conditionObject['pr'] }); // 对象转换成字符串
                _conditionPr.each(function (index, item) {
                    if (conditionString == $('.price-list>ul>li:eq(' + index + ')').attr('data-pr')) {
                        $('.price-list>ul>li:eq(' + index + ')').addClass('chosed');
                        $('#price>p').html($('.price-list>ul>li:eq(' + index + ')').html().replace(' - ', '-'));
                        $('#price').find('i').addClass('bacchosed');
                        $('#price').addClass('chosed');
                    }
                });
            } else if (conditionObject['cp']) {
                var cityArray = conditionObject['cp'].split('to');
                if (cityArray[0] != 0 && cityArray[1] != 0) {
                    $('#lowPr').val(cityArray[0]);
                    $('#topPr').val(cityArray[1]);
                    $('#price>p').html(cityArray[0] + '-' + cityArray[1]);
                } else if (cityArray[0] == 0 && cityArray[1] != 0) {
                    $('#topPr').val(cityArray[1]);
                    $('#price>p').html(cityArray[1] + '以下');
                } else if (cityArray[0] != 0 && cityArray[1] == 0) {
                    $('#lowPr').val(cityArray[0]);
                    $('#price>p').html(cityArray[0] + '以上');
                }
                $('#price').find('i').addClass('bacchosed');
                $('#price').addClass('chosed');
            } else {
                $('.price-list>ul>li:eq(0)').addClass('chosed');
            }
            var taString = self.objectToString({ 'ta': conditionObject['ta'] }); // 对象转换成字符串
            if (taString != "ta-0-ta-0-ta-0-ta-0" || conditionObject['ar'] || conditionObject['dt']) {
                $('#more').find('i').addClass('bacchosed');
                $('#more').addClass('chosed');
            } else {
                $('#more').find('i').removeClass('bacchosed');
                $('#more').removeClass('chosed');
            }
            // 租房更多的tag 初次选中渲染
            if (conditionObject['ta']) {
                conditionObject['ta'].forEach(function (item, index) {
                    if (item == 1) {
                        $('.more-spec > ul >li:eq(' + index + ')').addClass('active-house');
                    } else {
                        $('.more-spec > ul >li:eq(' + index + ')').removeClass('active-house');
                    }
                });
            }
            //面积 初次选中渲染
            if (conditionObject['ar']) {
                var conditionAr = $('.area >ul>li');
                var _conditionString10 = self.objectToString({ "ar": conditionObject['ar'] }); // 对象转换成字符串
                conditionAr.each(function (index, item) {
                    if (_conditionString10 == $('.area>ul>li:eq(' + index + ')').attr('data-ar')) {
                        $('.area>ul>li:eq(' + index + ')').addClass('active-house');
                    } else {
                        $('.area>ul>li:eq(' + index + ')').removeClass('active-house');
                    }
                });
            }
            //装修 初次选中渲染
            if (conditionObject['dt']) {
                var _numberD = [1, 2, 3, 4, 5];
                if (conditionObject['dt'].length > 1) {
                    conditionObject['dt'].forEach(function (item, index) {
                        $('.decoration> ul >li:eq(' + (item - 1) + ')').addClass('active-house');
                        _numberD.forEach(function (itemD, indexD) {
                            if (item == itemD) {
                                _numberD.splice(indexD, 1);
                            }
                        });
                    });
                } else {
                    $('.decoration> ul >li:eq(' + (conditionObject['dt'] - 1) + ')').addClass('active-house');
                    _numberD.forEach(function (itemD, indexD) {
                        if (conditionObject['dt'] == itemD) {
                            _numberD.splice(indexD, 1);
                        }
                    });
                }
                _numberD.forEach(function (item) {
                    $('.decoration> ul >li:eq(' + (item - 1) + ')').removeClass('active-house');
                });
            }
        }
        /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        获取并解析路由中(:condition)部分成一个Object
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/

    }, {
        key: 'parseCondition',
        value: function parseCondition(_ref) {
            var condition = _ref.condition,
                _ref$separator = _ref.separator,
                separator = _ref$separator === undefined ? "-" : _ref$separator;

            var result = {};
            if (!condition) return result;
            var partArray = condition.split(separator);
            if (partArray.length === 1) return partArray[0];
            partArray.forEach(function (part, index) {
                var val = partArray.length < index + 2 ? "" : partArray[index + 1];
                if (index % 2 == 0) {
                    if (!result.hasOwnProperty(part)) result[part] = val;else {
                        if (result[part].constructor != Array) result[part] = [result[part]];
                        result[part].push(val);
                    }
                }
            });
            return result;
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        把对象处理成字符串
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: 'objectToString',
        value: function objectToString(obj) {
            var conditionKeyArray = Object.keys(obj);
            var conditionValueArray = Object.values(obj);
            var conditionString = '';
            conditionKeyArray.forEach(function (item, index) {
                var itemUp = item;
                if (index == 0) {
                    if (conditionValueArray[index].constructor == Array) {
                        conditionValueArray[index].forEach(function (item, index) {
                            if (index == 0) {
                                conditionString = itemUp + '-' + item;
                            } else {
                                conditionString = conditionString + '-' + itemUp + '-' + item;
                            }
                        });
                    } else {
                        conditionString = item + '-' + conditionValueArray[index];
                    }
                } else {
                    if (conditionValueArray[index].constructor == Array) {
                        conditionValueArray[index].forEach(function (item, index) {
                            conditionString = conditionString + '-' + itemUp + '-' + item;
                        });
                    } else {
                        conditionString = conditionString + '-' + item + '-' + conditionValueArray[index];
                    }
                }
            });
            return conditionString;
        }
    }]);

    return ListController;
}(Controller);

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
类的初始化
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


$(document).ready(function () {
    new ListController();
});
//# sourceMappingURL=list.min.js.map
