'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：悟空找房h5
 2. 页面名称：xf/list(新房-列表)
 3. 作者：tangxuyang@lifang.com
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
var ListController = function (_Controller) {
    _inherits(ListController, _Controller);

    function ListController() {
        _classCallCheck(this, ListController);

        var _this = _possibleConstructorReturn(this, (ListController.__proto__ || Object.getPrototypeOf(ListController)).call(this));

        var self = _this;
        _this.paramGenerator = new ParamGenerator();
        setTimeout(function () {
            $('.total').slideDown(function () {
                setTimeout(function () {
                    $('.total').slideUp();
                }, 2000);
            }); // 隐藏查询总条数   
        }, 100);

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        图片懒加载实例化
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $(".lazy").lazyload({
            "placeholder": _this.staticDomain + "/wkh5_fe/images/common/loading.jpg"
        });
        require(['../components/filter.min', '../components/bigdata.min', "../components/conning-tower.min"], function (Filter, BigData) {
            BigData.init(self);
            new ConningTower({
                "bigDataUtil": BigData,
                "moduleType": "xf",
                "cityClick": function cityClick(data) {},
                "searchResultItemClick": function searchResultItemClick(data) {
                    // 与filter中的区域地铁互斥
                    delete self.param.di; // 区域id
                    delete self.param.to; // 板块id
                    delete self.param.li; // 地铁线id
                    delete self.param.st; // 地铁站id
                    delete self.param.id; // 小区id
                    delete self.param.sdi; // 区域id
                    delete self.param.sto; // 板块id
                    delete self.param.sli; // 地铁线id
                    delete self.param.sst; // 地铁站id
                    delete self.param.sid; // 小区id
                    delete self.param.lat;
                    delete self.param.lon;
                    delete self.param.m;
                    var mapping = ["", "sdi", "sto", "sli", "sst", "sid"];
                    var key = mapping[data.type];
                    if (key) {
                        self.param[key] = data.value;
                        self.goto();
                    }
                }
            });

            // 城市不同总价选项不同，XFDEFAULT中prices是北京、上海、广州、深圳、杭州、苏州、廊坊、南京的价格选项，比较高，
            // 因此需要区分
            /*
            *   北京	3
                上海	43
                广州	1873
                深圳	1950
                杭州	873
                苏州	771
                廊坊	221
                南京	741
            */

            var visitedCityId = $('#visitedCityId').val();
            var highPriceCityIds = [3, 43, 1873, 1950, 873, 771, 221, 741];
            var prices = highPriceCityIds.filter(function (cityId) {
                return cityId == visitedCityId;
            }).length == 0 ? Filter.LOWPRICES : null;

            self.filter = new Filter($.extend({}, Filter.XFDEFAULT, {
                el: ".filter",
                cityId: visitedCityId,
                near: false,
                controller: self,
                BigData: BigData,
                filterChanged: function filterChanged(result) {
                    var param = self.paramGenerator.generateParamObj(result);
                    if (param.di || param.to || param.li || param.st || param.lat || param.lon) {
                        // do nothing
                    } else {
                        // 判断是否有sid,sli,sst,sdi,sto
                        var mapping = ["sdi", "sto", "sli", "sst", "sid"];
                        mapping.forEach(function (item) {
                            if (self.param[item]) {
                                param[item] = self.param[item];
                            }
                        });
                    }

                    self.param = param;
                    // 跳转
                    self.goto();
                }
            }, prices));

            self.BigData = BigData;
            BigData.bigData({
                "pageName": "1050",
                "type": 1
            });
        });

        // 从url中解析参数
        //var pageUrl = location.href;
        var pageUrl = location.origin + location.pathname;
        pageUrl = pageUrl.replace('//', '');
        var tmpArr = pageUrl.split('/');
        self.param = {};
        if (tmpArr[3]) {
            // 有查询条件
            var obj = ParamGenerator.queryString2Object(tmpArr[3]);
            if (obj) {
                self.param = obj;
            }
        }

        window.filter = self.filter;

        _this.bindEvent();
        _this.pullload();
        _this.insertTrendAndOldHouse();
        return _this;
    }

    // 根据查询条件进行相应的跳转


    _createClass(ListController, [{
        key: 'goto',
        value: function goto() {
            var cityPinyin = $('#visitedCityPinyin').val();
            var url = location.origin + "/" + cityPinyin + "/xflist/" + ParamGenerator.object2QueryString(this.param);
            location.href = url + location.search;
        }
    }, {
        key: 'bindEvent',
        value: function bindEvent() {
            var self = this;
            // 清空查询条件
            $('.no-data button').click(function () {
                // 跳转            
                location.href = "./";
            });
        }
    }, {
        key: 'createHouseItems',
        value: function createHouseItems(data) {
            var str = "";
            var cityPinyin = $('#visitedCityPinyin').val();
            var channel = $('#channel').val();
            data.forEach(function (item) {
                str += '<a class="xf-item" href="/' + cityPinyin + '/xf/' + item.encryptSubEstateId + '.html' + (channel ? '?channel=' + channel : "") + '" data-bigdata="' + encodeURIComponent('{"eventName": "1050025", "eventParam": {"new_house_id":"' + item.subEstateId + '"}}') + '">\
                <div class="img">\
                    <img src="' + item.imageUrl + '">' + (item.hasVideo == '1' && '<span class="play"><i></i></span>' || '') + '\
                    <div class="yh">' + (item.activitys && item.activitys[0] && item.activitys[0].title || '') + '</div>\
                </div>\
                <div class="info">\
                    <h3>' + item.estateName + '</h3>\
                    <p class="district-town-area">\
                        <span>' + item.districtName + ' ' + item.townName + '</span><span>' + item.startSpace + 'm²-' + item.endSpace + 'm²</span>\
                    </p>\
                    <ul class="tags">' + (item.hasActivity == '1' && '<li class="yh">有优惠</li>' || "") + (item.isSubwayEstate == '1' && '<li class="dt">近地铁</li>' || '') + (item.isOnSale == '1' && item.isSoonOpen != '2' && '<li>在售楼盘</li>' || '<li>即将开盘</li>') + (item.hasVideo == '1' && '<li>有视频</li>' || '') + '</ul>\
                    <p class="unit-price"><span>' + (item.avgPriceWou != '0' ? item.avgPriceWou : '价格待定') + '</span> ' + (item.avgPriceWou != '0' && '<span>元/m²</span>' || '') + '</p>\
                </div>\
            </a>';
            });

            return str;
        }
    }, {
        key: 'createHouseList',
        value: function createHouseList(data, count) {
            // 生成房源列表
            this.hideNoData();
            if (data && data.length) {
                $('.no-data').hide();
                var str = this.createHouseItems(data);

                $('#list').html(str);
                $('.total .count').text(count);
                $('.total').slideDown();
                setTimeout(function () {
                    $('.total').slideUp();
                }, 1500);

                this.insertTrendAndOldHouse();
            } else {
                // 没数据
                this.showNoData();
            }
        }
    }, {
        key: 'appendHouseList',
        value: function appendHouseList(data) {
            // 上拉滚动时加载数据
            if (data && data.length) {
                var str = this.createHouseItems(data);
                $('#list').append(str);
                this.insertTrendAndOldHouse();
            } else {// 没有更多数据了
                //this.showNoMore();
            }
        }
    }, {
        key: 'showNoData',
        value: function showNoData() {
            // 显示没有数据，并显示新房楼盘推荐
            $('.no-data').show();
            $('.total + div').html('');
        }
    }, {
        key: 'hideNoData',
        value: function hideNoData() {
            $('.no-data').hide();
        }
    }, {
        key: 'hideNoMore',
        value: function hideNoMore() {
            $('.reach-bottom').hide();
        }
    }, {
        key: 'insertTrendAndOldHouse',
        value: function insertTrendAndOldHouse() {
            // 场景连篇        
            var cityName = $('#visitedCityName').val();
            var cityPinyin = $('#visitedCityPinyin').val();
            var cityId = $('#visitedCityId').val();
            var channel = $('#channel').val();
            var $list = $('#list .xf-item');
            var oldBusiness = $('#oldBusiness').val();
            if ($('#list .scene.house-price').length == 0 && $list.length > 9) {
                $('<a data-bigdata="' + encodeURIComponent(JSON.stringify({ eventName: "1050056", eventParam: { city_id: cityId } })) + '" href="/' + cityPinyin + '/trend/new' + (channel ? "?channel=" + channel : "") + '" class="scene house-price">\
                <div class="img"></div>\
                <div class="info">\
                    <h3>' + cityName + '房价涨了还是跌了？</h3>\
                    <span class="detail">去看看</span>\
                </div>\
            </a>').insertAfter($($list[9]));
            }
            if (oldBusiness && $('#list .scene.house').length == 0 && $list.length > 19) {
                $('<a data-bigdata="' + encodeURIComponent(JSON.stringify({ eventName: "1050057", eventParam: { city_id: cityId } })) + '" href="/' + cityPinyin + '/esf/' + (channel ? "?channel=" + channel : "") + '" class="scene house">\
                <div class="img"></div>\
                <div class="info">\
                    <h3>火爆高性价比二手房</h3>\
                    <span class="detail">去看看</span>\
                </div>\
            </a>').insertAfter($list[19]);
            }
        }
    }, {
        key: 'showError',
        value: function showError() {} // 接口报错，分为两种，1. 筛选条件变更刷新 2. 上拉加载

        // 上拉加载

    }, {
        key: 'pullload',
        value: function pullload() {
            var self = this;

            //二手房
            $("#list").pullload({
                apiUrl: self.apiUrl.xf.list,
                itemClass: ".xf-item",
                queryStringObject: function queryStringObject() {
                    self.param && delete self.param.pa;
                    if (!self.param) {
                        self.param = {};
                    }
                    return $.extend({}, self.param, { cityId: $('#visitedCityId').val() });
                },
                requestType: "POST",
                threshold: 50,
                pageSize: 10,
                pageIndexKey: "of",
                pageSizeKey: "ps",
                callback: function callback(data) {

                    if (!data.data || !data.data.newHouseDataListModelList || !data.data.newHouseDataListModelList.length) {
                        data.count = 1;
                        return;
                    }

                    self.appendHouseList(data.data.newHouseDataListModelList);
                }
            });
        }
    }]);

    return ListController;
}(Controller);

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
类的初始化
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


$(document).ready(function () {
    new ListController();
});
//# sourceMappingURL=list.min.js.map
