{"version":3,"sources":["components/conning-tower.min.js"],"names":["ConningTower","moduleType","cityClick","$","noop","searchResultItemClick","searchApiUrl","businessCityApiUrl","getCityLolaApiUrl","addEventListener","location","click","popCitySelector","addClass","removeClass","document","body","css","fadeIn","animate","right","fadeOut","history","back","show","hide","val","empty","nativeSchema","loadSchema","schema","protocal","loadWaiting","failUrl","apkInfo","PKG","CATEGORY","ACTION","$input","keyup","currentValue","trim","data","paramsMapper","request","apiUrl","requestData","parseInt","success","result","append","forEach","source","$li","createElement","key","attr","estateDesc","address","event","$item","currentTarget","hasClass","ajax","url","dataType","error","e","tips","status","toString","message","name","frameMarginTop","is","eq","$tabsHandles","cookie","target","text","window","href","combineUrl","typeMapper","typeValue","domesticCityList","city","has","businessList","business","businessId","shoupin","pinyin","charAt","toUpperCase","domestic","hasOwnProperty","push","cityId","cityName","cityType","overseaCityList","overseas","setVisitedCityCache","navigator","geolocation","geoOpts","enableHighAccuracy","maximumAge","timeout","getCurrentPosition","position","latitude","coords","longitude","path","expires","cityPinyin","china","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","orientateTimeout","TIMEOUT","UNKNOWN_ERROR","slideDown","children","length","cities","filterBusinessCity","$ul","Object","keys","$domesticFrame","$overseasFrame","citySelectorEventDelegate","modal","close","urlArray","split","join"],"mappings":"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","file":"conning-tower.min.js","sourcesContent":["/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n 1. 项目名称：悟空找房h5\r\n 2. 页面名称：components -> conning-tower(列表页司令塔，包括返回、搜索、汉堡菜单等信息)\r\n 3. 作者：zhaohuagang@lifang.com\r\n 4. 备注：\r\n    这里面定位需要用到的几个缓存key及缓存类型：\r\n    1). this.moduleType +\"VisitedCityId\" , this.moduleType +\"VisitedCityName\" , this.moduleType +\"VisitedCityPinyin\"，this.moduleType +\"VisitedCityChina\"，表示用户最后一次访问的当前moduleType的城市  使用cookie\r\n    2). this.moduleType +\"SelectedCityId\" , this.moduleType +\"SelectedCityName\" , this.moduleType +\"SelectedCityPinyin\"，this.moduleType +\"SelectedCityChina\"，表示用户选择的城市  使用cookie\r\n    2). locationCityId , locationCityName , locationCityPinyin , locationCityChina  , locationLongitude , locationLatitude，表示定位到的城市及经纬度  使用sessionStorage，因为会话\r\n        结束后这个定位信息用处就不大了    \r\n -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n class ConningTower {\r\n     constructor({ moduleType , cityClick = $.noop , searchResultItemClick = $.noop }) {\r\n         this.moduleType = moduleType ;  //模块类型，可以是：xf | esf | rent\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        几个api地址的配置\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/       \r\n         this.searchApiUrl = \"/api/common/acWord\" ;  //搜索用的接口地址\r\n         this.businessCityApiUrl = \"/api/common/businessCity\" ;  //获取业务开通城市接口地址\r\n         this.getCityLolaApiUrl = \"/api/common/getCityByLatLon\" ;  //通过经纬度反查城市接口地址 \r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        几个接口方法 \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n         this.cityClick = cityClick ;  //城市选择器中城市点击接口事件\r\n         this.searchResultItemClick = searchResultItemClick ;  //搜索结果选项点击\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        事件绑定\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n         this.addEventListener() ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        发起定位\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.location() ;        \r\n     }     \r\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    组件相关dom节点事件绑定\r\n     -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n     addEventListener() {\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击城市选择入口弹出城市选择器并根据是否有了数据来决定是否需要请求接口渲染\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".conning-tower dl dt\").click(() => {\r\n            this.popCitySelector() ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        未开通及招商场景中切换城市链接点击\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".notopen-investment .change\").click(() => {\r\n            $(\".notopen-investment\").addClass(\"hidden\").removeClass(\"visible\") ;\r\n            this.popCitySelector() ;\r\n        }) ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击汉堡菜单弹出子菜单\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".conning-tower .hamburg-menu\").click(() => {\r\n            $(document.body).css({ \"overflow-y\" : \"hidden\" }) ;  //滚动条隐藏\r\n            $(\".navigator-mask\").fadeIn(100) ;\r\n            $(\".navigator-pop\").animate( {\r\n                right : 0\r\n            } , 100 ) ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击子菜单遮罩关闭子菜单\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".navigator-mask\").click(() => {\r\n            $(document.body).css({ \"overflow-y\" : \"auto\" }) ;  //如果有滚动条就显示  \r\n            $(\".navigator-mask\").fadeOut(100) ;\r\n            $(\".navigator-pop\").animate( {\r\n                right : \"-200px\"\r\n            } , 100 ) ;              \r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击返回按钮回到假的搜索场景\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".conning-tower .back\").click(() => {\r\n            history.back() ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击假的搜索区域出现真的搜索\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".conning-tower dl dd\").click(() => {\r\n            $(\".substitute-mask\").show(50) ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        真搜索区域返回按钮事件监听\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".substitute-mask .search-substitute .back\").click(() => {\r\n            $(\".substitute-mask\").hide(50) ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        真搜索区域清除输入图标事件监听\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".substitute-mask .search-substitute .input-section .icon-close\").click(() => {\r\n            $(\".substitute-mask .search-substitute .input-section input\").val(\"\") ;\r\n            $(\".substitute-mask .list\").empty() ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        pop菜单中的下载APP菜单事件监听\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".navigator-pop .app-download\").click(() => {\r\n            nativeSchema.loadSchema({               \r\n                schema : \"external_call\"  ,  // 通过NN打开某个链接\r\n                protocal : \"wkzf\" , //schema头协议，实际情况填写\r\n                loadWaiting : \"1500\" , //发起唤醒请求后，会等待loadWaiting时间，超时则跳转到failUrl，默认3000ms                \r\n                failUrl : \"https://m.wkzf.com/download/transit?from=esfList\" ,  //唤起失败时的跳转链接，默认跳转到下载页\r\n                // apk信息,请根据实际情况填写\r\n                apkInfo : {\r\n                    PKG : \"com.wukong.ua\" ,\r\n                    CATEGORY : \"android.intent.category.DEFAULT\" ,\r\n                    ACTION : \"android.intent.action.VIEW\"\r\n                }\r\n            }) ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        真搜索区域输入监听\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        let $input = $(\".substitute-mask .search-substitute .input-section input\") ;\r\n        $input.keyup(() => {\r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            先清除结果\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            $(\".substitute-mask .list\").empty() ;\r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            根据输入的关键词来决定是否需要发请求\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            let currentValue = $input.val() ? $.trim($input.val()) : \"\" ;                    \r\n            if( ! currentValue || currentValue == $input.data(\"last\")) return ;  //说明没有输入内容或者输入内容和上次一致，都不需要发起请求\r\n            let paramsMapper = { \"xf\" : \"newhouselist\" , \"esf\" : \"oldhouselist\" , \"rent\" : \"renthouselist\" } ;            \r\n            this.request({ \r\n                apiUrl : this.searchApiUrl , \r\n                requestData : { \"key\" : currentValue , \"pageName\" :  paramsMapper[this.moduleType] , \"cityId\" : parseInt( $(\"#visitedCityId\").val() , 10 ) } , \r\n                success : (result) => {                    \r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    如果搜索无结果绘制相应节点\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                    if( result.data[\"secondHouseTotal\"] === 0 ) {\r\n                        $(\".substitute-mask .list\").append(\"<li class=\\\"no-data\\\"><dl><dt>未找到该地址，请重新搜索</dt><dd>您可以更换其他关键字再试一次</dd></dl></li>\") ;\r\n                    }\r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    有结果的绘制\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                    else {\r\n                        result.data[\"secondHouseList\"].forEach((source) => {\r\n                            let $li = $(document.createElement(\"LI\")) ;\r\n                            for(let key in source) {\r\n                                $li.attr(\"data-\" + key , source[key] ) ;\r\n                            }\r\n                            $li.append(\"<dl><dt>\" + source.estateDesc + \"</dt><dd>\" + source.address + \"</dd></dl>\") ;\r\n                            $(\".substitute-mask .list\").append($li) ;\r\n                        }) ;\r\n                    }\r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    最后进行事件绑定\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n                    $(\".substitute-mask .list li\").click((event) => {\r\n                        let $item = $(event.currentTarget) ;\r\n                        if($item.hasClass(\"no-data\")) return ;                                           \r\n                        this.searchResultItemClick($item.data()) ;\r\n                    }) ;                   \r\n                    \r\n                } \r\n            }) ; \r\n            $input.data(\"last\" , currentValue) ; //最后将当前值记录到最后一次搜索关键词里面\r\n        }) ;\r\n        \r\n     }\r\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    本组件ajax请求封装\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    request({ apiUrl , requestData , success = $.noop }) {\r\n        try {\r\n            $.ajax({\r\n                url : apiUrl ,                    \r\n                data : requestData ,\r\n                dataType : \"json\" ,                            \r\n                error : function(e) {\r\n                    $.tips( \"调用数据接口：\" + apiUrl + \" 失败！请测试您的数据接口！\" , 3 ) ;                                   \r\n                } ,\r\n                success : function(data) {                \r\n                    if (data.status.toString() === \"1\")  {\r\n                        //获取到接口数据，进行处理\r\n                        success(data) ;\r\n                    }\r\n                    else $.tips( data.message , 3 ) ;\r\n                }\r\n            }) ;\r\n        }\r\n        catch(e) {\r\n            $.tips( \"错误名称：\" + e.name + \"\\n错误描述：\" + e.message , 3 ) ;\r\n        }\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    等渲染好城市选择器后进行的事件委托\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n     citySelectorEventDelegate() {         \r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         \r\n        根据tabs-handle的显示状态决定tabs-frame的margin-top值\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        let frameMarginTop = $(\".city-selector .caption .tabs-handle\").is(\":visible\") ? \"72px\" : \"28px\" ;\r\n        $(\".city-selector .tabs-frame\").css({ \"margin-top\" : frameMarginTop }) ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         \r\n        城市选择器中根据tabs-handle里面哪个句柄被选中来确定哪个tabs-frame显示\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/        \r\n        $(\".city-selector .tabs-frame.\" + $(\".city-selector .caption .tabs-handle li.on\").eq(0).data(\"sign\")).show() ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        城市选择器中tabs-handle的点击\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        let $tabsHandles = $(\".city-selector .caption .tabs-handle li\") ;\r\n        $tabsHandles.click(function(){\r\n            $tabsHandles.removeClass(\"on\") ;\r\n            $(this).addClass(\"on\") ;\r\n            $(\".city-selector .tabs-frame\").hide() ;\r\n            $(\".city-selector .tabs-frame.\" + $(this).data(\"sign\")).show() ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        城市选择器中每个城市被点击后干什么?\r\n        1. 设置selected系列 cookie\r\n        2. 接着执行接口方法\r\n        3. 如果是当前城市就什么都不做，否则就然后直接跳转新城市\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".city-selector .tabs-frame a\").click((event) => {\r\n            $.cookie( this.moduleType + \"SelectedCityId\" , $(event.target).data(\"cityid\") ,  { \"path\" : \"/\" } ) ; \r\n            $.cookie( this.moduleType + \"SelectedCityName\" , $(event.target).text() ,  { \"path\" : \"/\" } ) ;\r\n            $.cookie( this.moduleType + \"SelectedCityPinyin\" , $(event.target).data(\"pinyin\") ,  { \"path\" : \"/\" } ) ;\r\n            $.cookie( this.moduleType + \"SelectedCityChina\" , $(event.target).data(\"china\") ,  { \"path\" : \"/\" } ) ;          \r\n            this.cityClick() ;\r\n            $(\".city-selector\").hide() ;\r\n            if(parseInt( $(event.target).data(\"cityid\") , 10 ) !== parseInt($(\"#visitedCityId\").val() , 10 )) window.location.href = this.combineUrl($(event.target).data(\"pinyin\")) ;\r\n        }) ;\r\n     }\r\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    对接口拿到的业务开通城市进行处理\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    filterBusinessCity(data) {\r\n        let typeMapper = { \"esf\" : 1 , \"rent\" : 2 , \"xf\" : 3 } ;\r\n        let typeValue = typeMapper[this.moduleType] ;\r\n        let result = { \"domestic\" : {} , \"overseas\" : {} } ;\r\n        data && data.domesticCityList && data.domesticCityList.forEach((city) => {\r\n            let has = false ;\r\n            city.businessList && city.businessList.forEach((business) => {\r\n                if(business.businessId === typeValue) has = true ;\r\n            }) ;\r\n            if(has) {\r\n                let shoupin = city.pinyin.charAt(0).toUpperCase() ;\r\n                if( ! result.domestic.hasOwnProperty(shoupin)) result.domestic[shoupin] = [] ;\r\n                result.domestic[shoupin].push({ \"cityId\" : city.cityId , \"cityName\" : city.cityName , \"pinyin\" : city.pinyin , \"cityType\" : city.cityType }) ;\r\n            }\r\n        }) ;\r\n        data && data.overseaCityList && data.overseaCityList.forEach((city) => {\r\n            let has = false ;\r\n            city.businessList && city.businessList.forEach((business) => {\r\n                if(business.businessId === typeValue) has = true ;\r\n            }) ;\r\n            if(has) {\r\n                let shoupin = city.pinyin.charAt(0).toUpperCase() ;\r\n                result.overseas[shoupin].push({ \"cityId\" : city.cityId , \"cityName\" : city.cityName , \"pinyin\" : city.pinyin , \"cityType\" : city.cityType }) ;\r\n            } \r\n        }) ;\r\n        return result ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    发起定位\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    location() {        \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        首先要去判断是否有过浏览当前moduleType的页面，如果\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        if($.cookie(this.moduleType + \"VisitedCityId\")) {\r\n            if(parseInt( $.cookie(this.moduleType + \"VisitedCityId\") , 10 ) !== parseInt( $(\"#visitedCityId\").val() , 10 )) {\r\n                //如果当前城市不是用户选择的城市才会要跳转\r\n                if( parseInt( $.cookie(this.moduleType + \"SelectedCityId\") , 10 ) !== parseInt( $(\"#visitedCityId\").val() , 10 ) ) window.location.href = this.combineUrl($.cookie(this.moduleType + \"VisitedCityPinyin\")) ;\r\n            }\r\n            else {\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                this.setVisitedCityCache() ;\r\n            }\r\n            return ;  //只要是浏览过当页，都不会再走定位\r\n        }\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        检查浏览器是否支持地理定位\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        if( ! navigator.geolocation ) {\r\n            $.tips( \"您的浏览器不支持定位地理位置\" , 3 ) ;            \r\n            return ;\r\n        }\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        定义定位选项\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        let geoOpts = {\r\n            enableHighAccuracy : false ,   //表示是否高精度可用，为Boolean类型，默认为false，如果开启，响应时间会变慢，同时，在手机设备上会用掉更多的流量，也就是money了。\r\n            maximumAge : 0 , //表示应用程序的缓存时间。单位毫秒，默认是0，意味着每次请求都是立即去获取一个全新的对象内容。\r\n            timeout : 10 * 1000  //表示等待响应的最大时间，默认是0毫秒，表示无穷时间。\r\n        } ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        开始发起定位\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        navigator.geolocation.getCurrentPosition( (position) => {\r\n            let latitude = position.coords.latitude ;\r\n            let longitude = position.coords.longitude ;            \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            往cookie里面写经纬度\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            $.cookie(\"locationLatitude\" , latitude , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n            $.cookie(\"locationLongitude\" , longitude , { path : \"/\" , expires : 365 * 24 * 60 } ) ;              \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            根据经纬度反查城市信息\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            this.request({ \r\n                apiUrl : this.getCityLolaApiUrl , \r\n                requestData : { \"latitude\" : latitude , \"longitude\" : longitude } , \r\n                success : (result) => {\r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    写入几个缓存\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                    $.cookie(\"locationCityId\" , result.data.cityId , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n                    $.cookie(\"locationCityName\" , result.data.cityName , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n                    $.cookie(\"locationCityPinyin\" , result.data.cityPinyin , { path : \"/\" , expires : 365 * 24 * 60 } ) ; \r\n                    $.cookie(\"locationCityChina\" , result.data.china , { path : \"/\" , expires : 365 * 24 * 60 } ) ;                    \r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    直接跳转到对应城市结束\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                    if( parseInt( result.data.cityId , 10 ) !== parseInt( $(\"#visitedCityId\").val() , 10 ) )  window.location.href = this.combineUrl(result.data.cityPinyin) ;\r\n                    else {\r\n                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                        为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中\r\n                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                        this.setVisitedCityCache() ;\r\n                    }                    \r\n                } \r\n            }) ;                       \r\n        } , ( error ) => {\r\n            switch(error.code) {\r\n                case error.PERMISSION_DENIED :  // 用户阻止了授权\r\n                this.popCitySelector() ;\r\n                break ;\r\n\r\n                case error.POSITION_UNAVAILABLE :  //定位信息无效\r\n                this.orientateTimeout() ;\r\n                break ;\r\n\r\n                case error.TIMEOUT :  //定位超时\r\n                this.orientateTimeout() ;\r\n                break ;\r\n\r\n                case error.UNKNOWN_ERROR :  //其他不可预知的错误\r\n                this.orientateTimeout() ;\r\n                break ;\r\n            }\r\n        } , geoOpts ) ;\r\n\r\n    }\r\n    \r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    弹出城市选择器\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    popCitySelector() {\r\n        $(\".city-selector\").slideDown(200) ;\r\n        if($(\".city-selector .tabs-frame\").children().length) return ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        请求业务城市数据并绘制，绘制完后绑定事件\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.request({ \r\n            apiUrl : this.businessCityApiUrl , \r\n            requestData : { } , \r\n            success : (result) => {                    \r\n                let cities = this.filterBusinessCity(result.data) ;  //取出所有满足条件的城市清单                    \r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                绘制tabs-handle\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                let $ul = \"<ul class=\\\"tabs-handle\\\"><li class=\\\"on\\\" data-sign=\\\"domestic\\\">国内</li><li data-sign=\\\"overseas\\\">国际</li></ul>\" ;\r\n                if( ! Object.keys(cities.domestic).length || ! Object.keys(cities.overseas).length) {                        \r\n                    if( Object.keys(cities.domestic).length ) $ul = \"<ul class=\\\"tabs-handle\\\" style=\\\"display : none\\\"><li class=\\\"on\\\" data-sign=\\\"domestic\\\">国内</li><li data-sign=\\\"overseas\\\">国际</li></ul>\" ;\r\n                    else $ul = \"<ul class=\\\"tabs-handle\\\" style=\\\"display : none\\\"><li data-sign=\\\"domestic\\\">国内</li><li class=\\\"on\\\" data-sign=\\\"overseas\\\">国际</li></ul>\" ;\r\n                }                   \r\n                $(\".city-selector .caption\").append($ul) ;\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                绘制tabs-frame\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/                    \r\n                let $domesticFrame = $(document.createElement(\"DIV\")).addClass(\"tabs-frame domestic\") ;\r\n                if($.cookie(\"locationCityName\") && $.cookie(\"locationCityChina\")) $domesticFrame.append(\"<span>定位城市</span><a data-cityid=\\\"\" + $.cookie(\"locationCityId\") + \"\\\" data-pinyin=\\\"\" + $.cookie(\"locationCityPinyin\") + \"\\\" data-china=\\\"\" + $.cookie(\"locationCityChina\") + \"\\\">\" + $.cookie(\"locationCityName\") + \"</a>\") ;\r\n                if( Object.keys(cities.domestic).length ) {\r\n                    for( let key in cities.domestic ) {\r\n                        $domesticFrame.append(\"<span>\" + key + \"</span>\") ;\r\n                        cities.domestic[key].forEach((city) => {\r\n                            $domesticFrame.append(\"<a data-cityid=\\\"\" + city.cityId + \"\\\" data-pinyin=\\\"\" + city.pinyin + \"\\\" data-china=\\\"\" + city.cityType + \"\\\">\" + city.cityName + \"</a>\") ;\r\n                        }) ;\r\n                    }\r\n                }\r\n                $(\".city-selector\").append($domesticFrame) ;\r\n\r\n                let $overseasFrame = $(document.createElement(\"DIV\")).addClass(\"tabs-frame overseas\") ;\r\n                if($.cookie(\"locationCityName\") && ! $.cookie(\"locationCityChina\")) $domesticFrame.append(\"<span>定位城市</span><a data-cityid=\\\"\" + $.cookie(\"locationCityId\") + \"\\\" data-pinyin=\\\"\" + $.cookie(\"locationCityPinyin\") + \"\\\"  data-china=\\\"\" + $.cookie(\"locationCityChina\") + \"\\\">\" + $.cookie(\"locationCityName\") + \"</a>\") ;\r\n                if( Object.keys(cities.overseas).length ) {\r\n                    for( let key in cities.overseas ) {\r\n                        $overseasFrame.append(\"<span>\" + key + \"</span>\") ;\r\n                        cities.overseas[key].forEach((city) => {\r\n                            $overseasFrame.append(\"<a data-cityid=\\\"\" + city.cityId + \"\\\" data-pinyin=\\\"\" + city.pinyin + \"\\\" data-china=\\\"\" + city.cityType + \"\\\">\" + city.cityName + \"</a>\") ;\r\n                        }) ;\r\n                    }\r\n                }\r\n                $(\".city-selector\").append($overseasFrame) ;\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                最后给dom节点绑定事件\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                this.citySelectorEventDelegate() ;\r\n            } \r\n        }) ; \r\n    }    \r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    定位信息无效，定位超时，其他不可预知的错误情况下的处理\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    orientateTimeout() {\r\n        $.modal({\r\n            \"id\" : \"orientateTimeoutDialog\" ,\r\n            \"title\" : \"\" ,      \r\n            \"content\" : \"定位失败<br>请手动选择您的城市\" ,\r\n            \"buttons\" : [\r\n                { \"text\" : \"去选择\" , \"className\" : \"goto-select-city\" , \"clickCallback\" : () => {\r\n                        $.modal.close(\"orientateTimeoutDialog\") ;\r\n                        this.popCitySelector() ;\r\n                    } \r\n                } \r\n            ]\r\n        }) ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中\r\n    这个cookie的作用是为了满足prd里面要求的：有上次浏览城市信息就不要定位了\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    setVisitedCityCache() {        \r\n        $.cookie(this.moduleType + \"VisitedCityId\" , $(\"#visitedCityId\").val() , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(this.moduleType + \"VisitedCityName\" , $(\"#visitedCityName\").val() , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(this.moduleType + \"VisitedCityPinyin\" , $(\"#visitedCityPinyin\").val() , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(this.moduleType + \"VisitedCityChina\" , $(\"#visitedCityChina\").val() , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    通过城市拼音和模块类型组织列表页面跳转地址\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    combineUrl(cityPinyin) {\r\n        let urlArray = window.location.href.split(\"/\") ;\r\n        urlArray[3] = cityPinyin ;\r\n        return urlArray.join(\"/\") ;\r\n    }\r\n    \r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    整个组件定义结束\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n }\r\n"]}