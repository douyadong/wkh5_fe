{"version":3,"sources":["components/conning-tower.min.js"],"names":["ConningTower","bigDataUtil","moduleType","cityClick","$","noop","searchResultItemClick","locationCallback","apiUrl","detectSearchResultClick","addEventListener","location","click","popCitySelector","addClass","removeClass","document","body","css","fadeIn","animate","right","fadeOut","history","back","show","trigger","hide","val","empty","window","localStorage","nativeSchema","loadSchema","schema","protocal","loadWaiting","failUrl","apkInfo","PKG","CATEGORY","ACTION","$input","on","currentValue","trim","attr","searchHistory","JSON","parse","renderSearchResult","items","paramsMapper","request","search","requestData","parseInt","success","result","data","append","submit","event","eq","preventDefault","ajax","url","dataType","error","e","tips","status","toString","message","name","frameMarginTop","is","$tabsHandles","$handler","currentTarget","cookie","text","href","combineUrl","typeMapper","typeValue","domesticCityList","forEach","city","has","businessList","business","businessId","shoupin","pinyin","charAt","toUpperCase","domestic","hasOwnProperty","push","cityId","cityName","cityType","overseaCityList","overseas","setVisitedCityCache","navigator","geolocation","geoOpts","enableHighAccuracy","maximumAge","timeout","getCurrentPosition","position","latitude","coords","longitude","path","expires","getCityByLola","cityPinyin","china","code","PERMISSION_DENIED","localtionFail","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","slideDown","bigData","children","length","businessCity","cities","filterBusinessCity","$ul","Object","keys","$domesticFrame","createElement","key","$overseasFrame","citySelectorEventDelegate","modal","close","urlArray","split","slice","join","source","$li","eventNameMapper","eventParam","estateDesc","encodeURIComponent","stringify","replace","markname","address","off","$item","hasClass","setSearchCache","decodeURIComponent","item","searchCache","noRepeatItems","each","index","cache","value","type","unshift","paramObj","ParamGenerator","queryString2Object"],"mappings":"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","file":"conning-tower.min.js","sourcesContent":["/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n 1. 项目名称：悟空找房h5\n 2. 页面名称：components -> conning-tower(列表页司令塔，包括返回、搜索、汉堡菜单等信息)\n 3. 作者：zhaohuagang@lifang.com\n 4. 备注：\n    这里面定位需要用到的几个缓存key及缓存类型：\n    1). this.moduleType +\"VisitedCityId\" , this.moduleType +\"VisitedCityName\" , this.moduleType +\"VisitedCityPinyin\"，this.moduleType +\"VisitedCityChina\"，表示用户最后一次访问的当前moduleType的城市  使用cookie\n    2). this.moduleType +\"SelectedCityId\" , this.moduleType +\"SelectedCityName\" , this.moduleType +\"SelectedCityPinyin\"，this.moduleType +\"SelectedCityChina\"，表示用户选择的城市  使用cookie\n    2). locationCityId , locationCityName , locationCityPinyin , locationCityChina  , locationLongitude , locationLatitude，表示定位到的城市及经纬度  使用sessionStorage，因为会话\n        结束后这个定位信息用处就不大了    \n5. 待完成任务：\n    1). setSearchCache方法写好了，判重还没有验证，在用户点击搜索结果项或者搜索表单提交的时候需要执行，只不过搜索表单提交相当于选择了搜索出来的第一条记录\n    2). 搜索框获得焦点或者keyup但是keywords为空的时候需要将搜索历史绘制出来\n -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n class ConningTower {\n     constructor({ bigDataUtil , moduleType , cityClick = $.noop , searchResultItemClick = $.noop , locationCallback = $.noop }) {\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        大数据埋点的工具引进来\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \n        this.bigDataUtil = bigDataUtil ;\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        模块类型，可以是：xf | esf | rent\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/  \n         this.moduleType = moduleType ; \n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        几个api地址的配置\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n         this.apiUrl = {\n             \"search\" : \"/api/common/acWord\" ,   //搜索用的接口地址\n             \"businessCity\" : \"/api/common/businessCity\" ,   //获取业务开通城市接口地址\n             \"getCityByLola\" : \"/api/common/getCityByLatLon\"  //通过经纬度反查城市接口地址\n         } ;\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        几个接口方法 \n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \n         this.cityClick = cityClick ;  //城市选择器中城市点击接口事件\n         this.searchResultItemClick = searchResultItemClick ;  //搜索结果选项点击\n         this.locationCallback = locationCallback ;\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        侦测是否有过搜索结果点击行为\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n         this.detectSearchResultClick() ;\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        事件绑定\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n         this.addEventListener() ;\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        发起定位\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        this.location() ;        \n     }     \n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    组件相关dom节点事件绑定\n     -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n     addEventListener() {\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        点击城市选择入口弹出城市选择器并根据是否有了数据来决定是否需要请求接口渲染\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".conning-tower dl dt\").click(() => {\n            this.popCitySelector() ;\n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        未开通及招商场景中切换城市链接点击\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".notopen-investment .change\").click(() => {\n            $(\".notopen-investment\").addClass(\"hidden\").removeClass(\"visible\") ;\n            this.popCitySelector() ;\n        }) ;\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        点击汉堡菜单弹出子菜单\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".conning-tower .hamburg-menu\").click(() => {\n            $(document.body).css({ \"overflow-y\" : \"hidden\" }) ;  //滚动条隐藏\n            $(\".navigator-mask\").fadeIn(100) ;\n            $(\".navigator-pop\").animate( {\n                right : 0\n            } , 100 ) ;\n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        点击子菜单遮罩关闭子菜单\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".navigator-mask\").click(() => {\n            $(document.body).css({ \"overflow-y\" : \"auto\" }) ;  //如果有滚动条就显示  \n            $(\".navigator-mask\").fadeOut(100) ;\n            $(\".navigator-pop\").animate( {\n                right : \"-200px\"\n            } , 100 ) ;              \n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        点击返回按钮回到假的搜索场景\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".conning-tower .back\").click(() => {\n            history.back() ;\n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        点击假的搜索区域出现真的搜索并将真的搜索框 focus\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".conning-tower dl dd\").click(() => {\n            $(\".substitute-mask\").show(50) ;\n            $(\".substitute-mask .input-section input\").trigger(\"focus\") ;\n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        真搜索区域返回按钮事件监听\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".substitute-mask .search-substitute .back\").click(() => {\n            $(\".substitute-mask\").hide(50) ;\n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        真搜索区域清除输入图标事件监听\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".substitute-mask .search-substitute .input-section .icon-close\").click(() => {\n            $(\".substitute-mask .search-substitute .input-section input\").val(\"\").trigger(\"focus\") ;            \n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        清除搜索历史按钮事件监听       \n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \n        $(\".substitute-mask .list-container .clear-history\").click(() => {            \n            $(\".substitute-mask .list-container .list\").empty() ;\n            $(\".substitute-mask .list-container div\").hide(100) ;\n            delete window.localStorage[this.moduleType + \"SearchHistory\" ] ;\n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        pop菜单中的下载APP菜单事件监听\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".navigator-pop .app-download\").click(() => {\n            nativeSchema.loadSchema({               \n                schema : \"external_call\"  ,  // 通过NN打开某个链接\n                protocal : \"wkzf\" , //schema头协议，实际情况填写\n                loadWaiting : \"1500\" , //发起唤醒请求后，会等待loadWaiting时间，超时则跳转到failUrl，默认3000ms                \n                failUrl : \"https://m.wkzf.com/download/transit?from=esfList\" ,  //唤起失败时的跳转链接，默认跳转到下载页\n                // apk信息,请根据实际情况填写\n                apkInfo : {\n                    PKG : \"com.wukong.ua\" ,\n                    CATEGORY : \"android.intent.category.DEFAULT\" ,\n                    ACTION : \"android.intent.action.VIEW\"\n                }\n            }) ;\n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        真搜索区域输入监听以及focus监听，如果没有输入值就应该出搜索历史\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        let $input = $(\".substitute-mask .search-substitute .input-section input\") ;\n        $input.on(\"keyup focus\" , () => {\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n            取得关键词内容\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n            let currentValue = $input.val() ? $.trim($input.val()) : \"\" ;            \n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n            如果关键词没有改变什么也不做\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n            if( currentValue && currentValue == $input.attr(\"data-last\")) return ;\n            else {\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                先清除结果\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                $(\".substitute-mask .list-container .list\").empty() ;\n                $(\".substitute-mask .list-container div\").hide() ;\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                如果关键词为空就要绘制搜索历史并直接返回\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                if( ! currentValue ) {\n                    let searchHistory = window.localStorage[this.moduleType + \"SearchHistory\" ] ;\n                    searchHistory = searchHistory ? JSON.parse(searchHistory) : [] ;\n                    searchHistory && this.renderSearchResult( { items : searchHistory , history : true }) ;\n                    $input.attr(\"data-last\" , currentValue) ; \n                    return ;\n                }\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                否则就发起请求\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/            \n                let paramsMapper = { \"xf\" : \"newhouselist\" , \"esf\" : \"oldhouselist\" , \"rent\" : \"renthouselist\" } ;            \n                this.request({ \n                    apiUrl : this.apiUrl.search , \n                    requestData : { \"key\" : currentValue , \"pageName\" :  paramsMapper[this.moduleType] , \"cityId\" : parseInt( $(\"#visitedCityId\").val() , 10 ) } , \n                    success : (result) => {                    \n                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                        如果搜索无结果绘制相应节点\n                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                        if( result.data[\"secondHouseTotal\"] === 0 ) {\n                            $(\".substitute-mask .list-container .list\").empty().append(\"<li class=\\\"no-data\\\"><dl><dt>未找到该地址，请重新搜索</dt><dd>您可以更换其他关键字再试一次</dd></dl></li>\") ;\n                        }\n                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                        有结果的绘制\n                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                        else this.renderSearchResult({ \"items\" : result.data[\"secondHouseList\"] , \"history\" : false }) ;   \n                    } \n                }) ; \n                $input.attr(\"data-last\" , currentValue) ;  //最后将当前值记录到最后一次搜索关键词里面\n            }    \n            \n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        搜索表单提交相当于点击了第一个搜索结果项并阻止默认表单提交行为\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".substitute-mask .search-substitute form\").submit((event) => {\n            $(\".substitute-mask .list-container .list li\").eq(0).trigger(\"click\") ;\n            event.preventDefault() ;\n        }) ;\n        \n     }\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    本组件ajax请求封装\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    request({ apiUrl , requestData , success = $.noop }) {\n        try {\n            $.ajax({\n                url : apiUrl ,                    \n                data : requestData ,\n                dataType : \"json\" ,                            \n                error : function(e) {\n                    $.tips( \"调用数据接口：\" + apiUrl + \" 失败！请测试您的数据接口！\" , 3 ) ;                                   \n                } ,\n                success : function(data) {                \n                    if (data.status.toString() === \"1\")  {\n                        //获取到接口数据，进行处理\n                        success(data) ;\n                    }\n                    else $.tips( data.message , 3 ) ;\n                }\n            }) ;\n        }\n        catch(e) {\n            $.tips( \"错误名称：\" + e.name + \"\\n错误描述：\" + e.message , 3 ) ;\n        }\n    }\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    等渲染好城市选择器后进行的事件委托\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n     citySelectorEventDelegate() {         \n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         \n        根据tabs-handle的显示状态决定tabs-frame的margin-top值\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        let frameMarginTop = $(\".city-selector .caption .tabs-handle\").is(\":visible\") ? \"72px\" : \"28px\" ;\n        $(\".city-selector .tabs-frame\").css({ \"margin-top\" : frameMarginTop }) ;\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         \n        城市选择器中根据tabs-handle里面哪个句柄被选中来确定哪个tabs-frame显示\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/        \n        $(\".city-selector .tabs-frame.\" + $(\".city-selector .caption .tabs-handle li.on\").eq(0).data(\"sign\")).show() ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        城市选择器中tabs-handle的点击\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \n        let $tabsHandles = $(\".city-selector .caption .tabs-handle li\") ;\n        $tabsHandles.click(function(){\n            $tabsHandles.removeClass(\"on\") ;\n            $(this).addClass(\"on\") ;\n            $(\".city-selector .tabs-frame\").hide() ;\n            $(\".city-selector .tabs-frame.\" + $(this).data(\"sign\")).show() ;\n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        城市选择器中每个城市被点击后干什么?\n        1. 设置selected系列 cookie\n        2. 接着执行接口方法\n        3. 如果是当前城市就什么都不做，否则就然后直接跳转新城市\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".city-selector .tabs-frame a\").click((event) => {\n            let $handler = $(event.currentTarget) ;\n            $.cookie( this.moduleType + \"SelectedCityId\" , $handler.data(\"cityid\") ,  { \"path\" : \"/\" } ) ; \n            $.cookie( this.moduleType + \"SelectedCityName\" , $handler.text() ,  { \"path\" : \"/\" } ) ;\n            $.cookie( this.moduleType + \"SelectedCityPinyin\" , $handler.data(\"pinyin\") ,  { \"path\" : \"/\" } ) ;\n            $.cookie( this.moduleType + \"SelectedCityChina\" , $handler.data(\"china\") ,  { \"path\" : \"/\" } ) ;          \n            this.cityClick() ;\n            $(\".city-selector\").hide() ;\n            if(parseInt( $handler.data(\"cityid\") , 10 ) !== parseInt($(\"#visitedCityId\").val() , 10 )) window.location.href = this.combineUrl( $handler.data(\"pinyin\") ) ;\n        }) ;\n     }\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    对接口拿到的业务开通城市进行处理\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    filterBusinessCity(data) {\n        let typeMapper = { \"esf\" : 1 , \"rent\" : 2 , \"xf\" : 3 } ;\n        let typeValue = typeMapper[this.moduleType] ;\n        let result = { \"domestic\" : {} , \"overseas\" : {} } ;\n        data && data.domesticCityList && data.domesticCityList.forEach((city) => {\n            let has = false ;\n            city.businessList && city.businessList.forEach((business) => {\n                if(business.businessId === typeValue) has = true ;\n            }) ;\n            if(has) {\n                let shoupin = city.pinyin.charAt(0).toUpperCase() ;\n                if( ! result.domestic.hasOwnProperty(shoupin)) result.domestic[shoupin] = [] ;\n                result.domestic[shoupin].push({ \"cityId\" : city.cityId , \"cityName\" : city.cityName , \"pinyin\" : city.pinyin , \"cityType\" : city.cityType }) ;\n            }\n        }) ;\n        data && data.overseaCityList && data.overseaCityList.forEach((city) => {\n            let has = false ;\n            city.businessList && city.businessList.forEach((business) => {\n                if(business.businessId === typeValue) has = true ;\n            }) ;\n            if(has) {\n                let shoupin = city.pinyin.charAt(0).toUpperCase() ;\n                if( ! result.overseas.hasOwnProperty(shoupin)) result.overseas[shoupin] = [] ;\n                result.overseas[shoupin].push({ \"cityId\" : city.cityId , \"cityName\" : city.cityName , \"pinyin\" : city.pinyin , \"cityType\" : city.cityType }) ;\n            } \n        }) ;\n        return result ;\n    }\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    发起定位\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    location() {        \n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        首先要去判断是否有过浏览当前moduleType的页面，如果\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        if($.cookie(this.moduleType + \"VisitedCityId\")) {\n            if(parseInt( $.cookie(this.moduleType + \"VisitedCityId\") , 10 ) !== parseInt( $(\"#visitedCityId\").val() , 10 )) {\n                //如果当前城市不是用户选择的城市才会要跳转\n                if( $.cookie(this.moduleType + \"SelectedCityId\") && parseInt( $.cookie(this.moduleType + \"SelectedCityId\") , 10 ) !== parseInt( $(\"#visitedCityId\").val() , 10 ) ) {\n                    //alert(\"之前有访问过当前列表页且不是当前城市！而是当前城市也不是用户选择过的城市，所以将要跳转到先前访问过的城市......\") ;\n                    window.location.href = this.combineUrl($.cookie(this.moduleType + \"VisitedCityPinyin\")) ;\n                }\n            }\n            else {\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                this.setVisitedCityCache() ;\n            }\n            //return ;  //现在改为始终要定位\n        }\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        检查浏览器是否支持地理定位\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        if( ! navigator.geolocation ) {\n            $.tips( \"您的浏览器不支持定位地理位置\" , 3 ) ;            \n            return ;\n        }\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        定义定位选项\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        let geoOpts = {\n            enableHighAccuracy : false ,   //表示是否高精度可用，为Boolean类型，默认为false，如果开启，响应时间会变慢，同时，在手机设备上会用掉更多的流量，也就是money了。\n            maximumAge : 0 , //表示应用程序的缓存时间。单位毫秒，默认是0，意味着每次请求都是立即去获取一个全新的对象内容。\n            timeout : 10 * 1000  //表示等待响应的最大时间，默认是0毫秒，表示无穷时间。\n        } ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        开始发起定位\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        navigator.geolocation.getCurrentPosition( (position) => {\n            let latitude = position.coords.latitude ;\n            let longitude = position.coords.longitude ; \n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n            往cookie里面写经纬度\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n            $.cookie(\"locationLatitude\" , latitude , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\n            $.cookie(\"locationLongitude\" , longitude , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n            执行定位回调\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n            this.locationCallback({ \"latitude\" : latitude , \"longitude\" : longitude }) ;      \n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n            根据经纬度反查城市信息\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n            this.request({ \n                apiUrl : this.apiUrl.getCityByLola , \n                requestData : { \"latitude\" : latitude , \"longitude\" : longitude } , \n                success : (result) => {\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                    写入几个缓存\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                    $.cookie(\"locationCityId\" , result.data.cityId , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\n                    $.cookie(\"locationCityName\" , result.data.cityName , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\n                    $.cookie(\"locationCityPinyin\" , result.data.cityPinyin , { path : \"/\" , expires : 365 * 24 * 60 } ) ; \n                    $.cookie(\"locationCityChina\" , result.data.china , { path : \"/\" , expires : 365 * 24 * 60 } ) ;                    \n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                    城市选择弹层定位城市改写\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                    $(\".city-selector .tabs-frame .location-city\").text(result.data.cityName) ;\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                    如果用户没有选择城市并且定位到的城市不是当前路由城市才会跳转到定位城市\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                    if(  ! $.cookie(this.moduleType + \"SelectedCityPinyin\") && parseInt( result.data.cityId , 10 ) !== parseInt( $(\"#visitedCityId\").val() , 10 ) ) {\n                        //alert(\"定位成功！将要直接跳转到定位城市！\") ;\n                        window.location.href = this.combineUrl(result.data.cityPinyin) ;\n                    }\n                    else {\n                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                        为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中\n                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                        this.setVisitedCityCache() ;\n                    }                \n                } \n            }) ;                       \n        } , ( error ) => {\n            switch(error.code) {\n                case error.PERMISSION_DENIED :  // 用户阻止了授权\n                this.localtionFail(false) ;               \n                break ;\n\n                case error.POSITION_UNAVAILABLE :  //定位信息无效                \n                this.localtionFail(true) ;\n                break ;\n\n                case error.TIMEOUT :  //定位超时                \n                this.localtionFail(true) ;\n                break ;\n\n                case error.UNKNOWN_ERROR :  //其他不可预知的错误                \n                this.localtionFail(true) ;\n                break ;\n            }\n        } , geoOpts ) ;\n\n    }\n    \n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    弹出城市选择器\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    popCitySelector() {        \n        $(\".city-selector\").slideDown(200) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        埋点\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        this.bigDataUtil.bigData({ \"pageName\" : \"1005\" , \"type\" : 1 }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        如果没有城市记录说明是第一次绘制，否则就不需要做什么\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        if($(\".city-selector .tabs-frame\").children().length) return ;        \n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        请求业务城市数据并绘制，绘制完后绑定事件\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        this.request({ \n            apiUrl : this.apiUrl.businessCity , \n            requestData : { } , \n            success : (result) => {                    \n                let cities = this.filterBusinessCity(result.data) ;  //取出所有满足条件的城市清单                    \n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                绘制tabs-handle\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                let $ul = \"<ul class=\\\"tabs-handle\\\"><li class=\\\"on\\\" data-sign=\\\"domestic\\\">国内</li><li data-sign=\\\"overseas\\\">国际</li></ul>\" ;\n                if( ! Object.keys(cities.domestic).length || ! Object.keys(cities.overseas).length) {                        \n                    if( Object.keys(cities.domestic).length ) $ul = \"<ul class=\\\"tabs-handle\\\" style=\\\"display : none\\\"><li class=\\\"on\\\" data-sign=\\\"domestic\\\">国内</li><li data-sign=\\\"overseas\\\">国际</li></ul>\" ;\n                    else $ul = \"<ul class=\\\"tabs-handle\\\" style=\\\"display : none\\\"><li data-sign=\\\"domestic\\\">国内</li><li class=\\\"on\\\" data-sign=\\\"overseas\\\">国际</li></ul>\" ;\n                }                   \n                $(\".city-selector .caption\").append($ul) ;\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                绘制tabs-frame\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/                    \n                let $domesticFrame = $(document.createElement(\"DIV\")).addClass(\"tabs-frame domestic\") ;\n                if($.cookie(\"locationCityName\") && $.cookie(\"locationCityChina\")) $domesticFrame.append(\"<span>定位城市</span><a class=\\\"location-city\\\" data-cityid=\\\"\" + $.cookie(\"locationCityId\") + \"\\\" data-pinyin=\\\"\" + $.cookie(\"locationCityPinyin\") + \"\\\" data-china=\\\"\" + $.cookie(\"locationCityChina\") + \"\\\">\" + $.cookie(\"locationCityName\") + \"</a>\") ;\n                if( Object.keys(cities.domestic).length ) {\n                    for( let key in cities.domestic ) {\n                        $domesticFrame.append(\"<span>\" + key + \"</span>\") ;\n                        cities.domestic[key].forEach((city) => {\n                            $domesticFrame.append(\"<a data-cityid=\\\"\" + city.cityId + \"\\\" data-pinyin=\\\"\" + city.pinyin + \"\\\" data-china=\\\"\" + city.cityType + \"\\\">\" + city.cityName + \"</a>\") ;\n                        }) ;\n                    }\n                }\n                $(\".city-selector\").append($domesticFrame) ;\n\n                let $overseasFrame = $(document.createElement(\"DIV\")).addClass(\"tabs-frame overseas\") ;\n                if($.cookie(\"locationCityName\") && ! $.cookie(\"locationCityChina\")) $domesticFrame.append(\"<span>定位城市</span><a class=\\\"location-city\\\" data-cityid=\\\"\" + $.cookie(\"locationCityId\") + \"\\\" data-pinyin=\\\"\" + $.cookie(\"locationCityPinyin\") + \"\\\"  data-china=\\\"\" + $.cookie(\"locationCityChina\") + \"\\\">\" + $.cookie(\"locationCityName\") + \"</a>\") ;\n                if( Object.keys(cities.overseas).length ) {\n                    for( let key in cities.overseas ) {\n                        $overseasFrame.append(\"<span>\" + key + \"</span>\") ;\n                        cities.overseas[key].forEach((city) => {\n                            $overseasFrame.append(\"<a data-cityid=\\\"\" + city.cityId + \"\\\" data-pinyin=\\\"\" + city.pinyin + \"\\\" data-china=\\\"\" + city.cityType + \"\\\">\" + city.cityName + \"</a>\") ;\n                        }) ;\n                    }\n                }\n                $(\".city-selector\").append($overseasFrame) ;\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n                最后给dom节点绑定事件\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n                this.citySelectorEventDelegate() ;\n            } \n        }) ; \n    }    \n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    定位失败的处理    \n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    localtionFail(tips) {\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------        \n        1. 将定位cookie系列全部置空       \n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $.cookie(\"locationLatitude\" , null , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\n        $.cookie(\"locationLongitude\" , null , { path : \"/\" , expires : 365 * 24 * 60 } ) ; \n        $.cookie(\"locationCityId\" , null , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\n        $.cookie(\"locationCityName\" , null , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\n        $.cookie(\"locationCityPinyin\" , null , { path : \"/\" , expires : 365 * 24 * 60 } ) ; \n        $.cookie(\"locationCityChina\" , null , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------        \n        2. 先执行定位回调       \n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        this.locationCallback() ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------        \n        3. 改写城市选择弹层中定位城市占位符信息   \n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $(\".city-selector .tabs-frame .location-city\").text(\"定位失败\") ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        4. 如果先前用户选择过城市就直接跳转到选择的城市，否则就根据tips来决定是否需要弹框选择\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        if( $.cookie(this.moduleType + \"SelectedCityPinyin\")) {            \n            if( $.cookie(this.moduleType + \"SelectedCityPinyin\") !== $(\"#visitedCityPinyin\").val() ) {\n                //alert(\"定位失败！而且用户选择过跟当前不同的城市，将要跳转到用户选择的城市...\") ;\n                window.location.href = this.combineUrl($.cookie(this.moduleType + \"SelectedCityPinyin\")) ;\n            }\n        }\n        else {\n            if( ! tips) this.popCitySelector() ;\n            else {\n                $.modal({\n                    \"id\" : \"localtionFailDialog\" ,\n                    \"title\" : \"\" ,      \n                    \"content\" : \"定位失败<br>请手动选择您的城市\" ,\n                    \"buttons\" : [\n                        { \"text\" : \"去选择\" , \"className\" : \"goto-select-city\" , \"clickCallback\" : () => {\n                                $.modal.close(\"localtionFailDialog\") ;\n                                this.popCitySelector() ;\n                            } \n                        } \n                    ]\n                }) ;\n            }            \n        }        \n    }\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中\n    这个cookie的作用是为了满足prd里面要求的：有上次浏览城市信息就不要定位了\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    setVisitedCityCache() {        \n        $.cookie(this.moduleType + \"VisitedCityId\" , $(\"#visitedCityId\").val() , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\n        $.cookie(this.moduleType + \"VisitedCityName\" , $(\"#visitedCityName\").val() , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\n        $.cookie(this.moduleType + \"VisitedCityPinyin\" , $(\"#visitedCityPinyin\").val() , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\n        $.cookie(this.moduleType + \"VisitedCityChina\" , $(\"#visitedCityChina\").val() , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\n    }\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    通过城市拼音和模块类型组织列表页面跳转地址\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    combineUrl(cityPinyin) {\n        let urlArray = window.location.href.split(\"/\") ;\n        urlArray[3] = cityPinyin ;\n        urlArray = urlArray.slice( 0 , 5 ) ;\n        return urlArray.join(\"/\") ;\n    }\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    绘制搜索结果或者历史，history用来标识是否搜索历史\n    如果是搜索历史的渲染，每条历史应该是已经有了埋点参数了\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    renderSearchResult( { items , history = false }) {\n        items && items.forEach((source) => {\n            let $li = $(document.createElement(\"LI\")) ;            \n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n            埋点参数\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n            let eventNameMapper = history ? { \"xf\" : \"1050010\" , \"esf\" : \"1068013\" , \"rent\" : \"\" } : { \"xf\" : \"1050011\" , \"esf\" : \"1068014\" , \"rent\" : \"\" } ;            \n            let eventParam = history ? { \"search_history\" : source.estateDesc } : { \"choice_content\" : source.estateDesc } ;\n            if(eventNameMapper[this.moduleType]) {\n                $li.attr(\"data-bigdata\" , encodeURIComponent(JSON.stringify({ \"eventName\" : eventNameMapper[this.moduleType] , \"eventParam\" : eventParam }))) ;\n            }          \n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n            其他信息全绑到节点上data-detail上\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n            $li.attr(\"data-detail\" , encodeURIComponent(JSON.stringify(source)) ) ;\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n            绘制单条搜索结果\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/                              \n            $li.append(\"<dl><dt>\" + source.estateDesc.replace( source.markname , \"<span>\" + source.markname + \"</span>\" ) + \"</dt><dd>\" + source.address.replace( source.markname , \"<span>\" + source.markname + \"</span>\" ) + \"</dd></dl>\") ;\n            $(\".substitute-mask .list-container .list\").append($li) ;\n        }) ; \n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        如果是渲染搜索历史，就要加上显示历史的按钮以及历史记录title        \n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \n        if( items && items.length && history) $(\".substitute-mask .list-container div\").show(100) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        最后进行事件绑定\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \n        $(\".substitute-mask .list li\").off().click((event) => {\n            let $item = $(event.currentTarget) ;\n            if($item.hasClass(\"no-data\")) return ;             \n            this.setSearchCache(JSON.parse(decodeURIComponent($item.attr(\"data-detail\")))) ;\n            this.searchResultItemClick(JSON.parse(decodeURIComponent($item.attr(\"data-detail\")))) ;\n        }) ;      \n\n    }\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    将指定的对象数据记录到搜索localStorage中，最多记录5条\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    setSearchCache(item) {\n        let searchCache = window.localStorage[this.moduleType + \"SearchHistory\"] ;\n        searchCache = searchCache ? JSON.parse(searchCache) : [] ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        取得和当前项目部重复的前4条记录\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        let noRepeatItems = [] ;\n        $.each( searchCache , ( index , cache ) => {\n            if( cache.value != item.value || cache.type != item.type ) noRepeatItems.push(cache) ;\n            if( noRepeatItems.length >= 4 ) return false ;\n        } ) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        再在前面追加指定的哪条\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n         noRepeatItems.unshift(item) ;\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        最后重新设置到localStorage中\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        window.localStorage[this.moduleType + \"SearchHistory\" ] = JSON.stringify(noRepeatItems) ;   \n    }\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    根据condition路由参数里面是否有：sli,sst,sdi,sto,sid ，分别对应li,st,di,to,id，为了区分这五个条件来自搜索模块，如果有就要在假的搜索区域展示this.moduleType + \"SearchHistory\"\n    这个localStorage里面缓存的搜索历史里面第一条\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    detectSearchResultClick() {\n        let urlArray = window.location.href.split(\"/\") ;        \n        let paramObj = ParamGenerator.queryString2Object(urlArray[5]) ;\n        if( paramObj.hasOwnProperty(\"sli\") || paramObj.hasOwnProperty(\"sst\") || paramObj.hasOwnProperty(\"sdi\") || paramObj.hasOwnProperty(\"sto\") || paramObj.hasOwnProperty(\"sid\")) {\n            let searchCache = window.localStorage[this.moduleType + \"SearchHistory\"] ;            \n            searchCache = searchCache ? JSON.parse(searchCache) : [] ;\n            if(searchCache.length) $(\".conning-tower dl dd span\").text(searchCache[0].estateDesc) ;\n        }       \n    }\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n    整个组件定义结束\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n }\n"]}