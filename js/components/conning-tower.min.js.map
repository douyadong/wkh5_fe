{"version":3,"sources":["components/conning-tower.min.js"],"names":["ConningTower","bigDataUtil","moduleType","cityClick","$","noop","searchResultItemClick","locationCallback","apiUrl","states","consts","val","detectSearchResultClick","addEventListener","location","$conningTowerCitySelectEntrance","click","popCitySelector","$investmentCitySwitch","$investment","addClass","removeClass","$hamburgMenu","document","body","css","$navigatorMask","fadeIn","$navigatorPop","animate","right","fadeOut","$conningTowerBack","history","back","$substituteMask","show","$searchInputBox","trigger","$searchBack","hide","$clearKeywords","$clearHistory","$searchResultList","empty","$searchResultListAssistant","window","localStorage","$appDownload","nativeSchema","loadSchema","schema","protocal","loadWaiting","failUrl","apkInfo","PKG","CATEGORY","ACTION","on","currentValue","trim","attr","searchHistory","JSON","parse","renderSearchResult","items","paramsMapper","request","search","requestData","parseInt","visitedCityId","success","result","data","append","$searchForm","submit","event","eq","preventDefault","ajax","url","dataType","error","e","tips","status","toString","message","name","frameMarginTop","is","$tabsHandles","$handler","currentTarget","cookie","text","retractCitySelector","href","combineUrl","typeMapper","typeValue","domesticCityList","forEach","city","has","businessList","business","businessId","shoupin","pinyin","charAt","toUpperCase","domestic","hasOwnProperty","push","cityId","cityName","cityType","overseaCityList","overseas","alert","setVisitedCityCache","navigator","geolocation","locationStage","locationMessage","geoOpts","enableHighAccuracy","maximumAge","timeout","getCurrentPosition","position","latitude","coords","longitude","path","expires","getCityByLola","locationCityId","locationCityName","locationCityPinyin","cityPinyin","locationCityChina","china","replaceWith","code","PERMISSION_DENIED","locationFailCause","localtionFail","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","$citySelector","slideDown","bigData","children","length","businessCity","cities","filterBusinessCity","$ul","isEmptyObject","$status","$domesticFrame","createElement","key","$overseasFrame","citySelectorEventDelegate","visitedCityPinyin","modal","close","visitedCityName","visitedCityChina","urlArray","split","slice","join","source","$li","eventNameMapper","eventParam","estateDesc","encodeURIComponent","stringify","replace","markname","address","off","$item","hasClass","setSearchCache","decodeURIComponent","item","searchCache","noRepeatItems","each","index","cache","value","type","unshift","paramObj","ParamGenerator","queryString2Object"],"mappings":"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","file":"conning-tower.min.js","sourcesContent":["/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n 1. 项目名称：悟空找房h5\r\n 2. 页面名称：components -> conning-tower(列表页司令塔，包括返回、搜索、汉堡菜单等信息)\r\n 3. 作者：zhaohuagang@lifang.com\r\n 4. 备注：\r\n    这里面定位需要用到的几个缓存key及缓存类型：\r\n    1). \"visitedCityId\" , \"visitedCityName\" , \"visitedCityPinyin\"，\"visitedCityChina\"，表示用户最后一次访问的当前moduleType的城市  使用cookie\r\n    2). \"selectedCityId\" , \"selectedCityName\" , \"selectedCityPinyin\"，\"selectedCityChina\"，表示用户选择的城市  使用cookie\r\n    3). locationLongitude , locationLatitude 定位的经纬度，这个一定要用cookie，因为埋点里面传递的值是从这里取的      \r\n5. 待完成任务：\r\n    1). setSearchCache方法写好了，判重还没有验证，在用户点击搜索结果项或者搜索表单提交的时候需要执行，只不过搜索表单提交相当于选择了搜索出来的第一条记录\r\n    2). 搜索框获得焦点或者keyup但是keywords为空的时候需要将搜索历史绘制出来\r\n -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n class ConningTower {\r\n     constructor({ bigDataUtil , moduleType , cityClick = $.noop , searchResultItemClick = $.noop , locationCallback = $.noop }) {\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        大数据埋点的工具引进来\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        this.bigDataUtil = bigDataUtil ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        模块类型，可以是：xf | esf | rent\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/  \r\n         this.moduleType = moduleType ; \r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        几个api地址的配置\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n         this.apiUrl = {\r\n             \"search\" : \"/api/common/acWord\" ,   //搜索用的接口地址\r\n             \"businessCity\" : \"/api/common/businessCity\" ,   //获取业务开通城市接口地址\r\n             \"getCityByLola\" : \"/api/common/getCityByLatLon\"  //通过经纬度反查城市接口地址\r\n         } ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        几个接口方法 \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n         this.cityClick = cityClick ;  //城市选择器中城市点击接口事件\r\n         this.searchResultItemClick = searchResultItemClick ;  //搜索结果选项点击\r\n         this.locationCallback = locationCallback ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        几个状态值\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.states = {\r\n            \"locationStage\" : 0 ,  //定位阶段： 0:还没有发起定位 | 1:开始定位 | 2:定位结束\r\n            \"locationMessage\" : null ,  //定位提示语，{城市}/正在定位中.../定位失败/定位服务暂未开启\r\n            \"locationFailCause\" : null , //定位失败原因\r\n            \"locationCityId\" : null ,\r\n            \"locationCityName\" : null ,\r\n            \"locationCityPinyin\" : null ,\r\n            \"locationCityChina\" : null\r\n        } ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        页面常量\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts = {\r\n            \"visitedCityId\" : $(\"#visitedCityId\").val() ,\r\n            \"visitedCityName\" : $(\"#visitedCityName\").val() ,\r\n            \"visitedCityPinyin\" : $(\"#visitedCityPinyin\").val() ,\r\n            \"visitedCityChina\" : $(\"#visitedCityChina\").val() ,\r\n\r\n            \"$conningTowerCitySelectEntrance\" : $(\".conning-tower dl dt\") ,  //点击城市选择入口\r\n            \"$investment\" : $(\".notopen-investment\") ,  //未开通及招商弹层\r\n            \"$investmentCitySwitch\" : $(\".notopen-investment .change\") ,  //未开通及招商场景中切换城市链接\r\n            \"$hamburgMenu\" : $(\".conning-tower .hamburg-menu\") ,  //汉堡菜单\r\n            \"$appDownload\" : $(\".navigator-pop .app-download\") ,   //点击汉堡菜单弹出的菜单中app下载按钮\r\n            \"$navigatorMask\" : $(\".navigator-mask\") ,  //pop菜单遮罩\r\n            \"$navigatorPop\" : $(\".navigator-pop\") ,  //点击汉堡菜单弹出的菜单\r\n            \"$conningTowerBack\" : $(\".conning-tower .back\") ,  //司令塔假的搜索区域返回按钮\r\n            \"$substituteMask\" : $(\".substitute-mask\") ,  //搜索替身遮罩\r\n            \"$searchInputBox\" : $(\".substitute-mask .search-substitute .input-section input\") ,  //真搜索区域的搜索框\r\n            \"$searchBack\" : $(\".substitute-mask .search-substitute .back\") ,  //真搜索区域返回按钮\r\n            \"$clearKeywords\" : $(\".substitute-mask .search-substitute .input-section .icon-close\") , //清除搜索关键词\r\n            \"$clearHistory\" : $(\".substitute-mask .list-container .clear-history\") ,  //清除搜索历史按钮\r\n            \"$searchResultList\" : $(\".substitute-mask .list-container .list\") ,  //搜索结果列表\r\n            \"$searchResultListAssistant\" : $(\".substitute-mask .list-container div\") ,  //搜索结果列表助手，包括上面的\"搜索历史\"title和下面的清除历史按钮\r\n            \"$searchForm\" : $(\".substitute-mask .search-substitute form\") ,  //搜索表单\r\n            \"$citySelector\" : $(\".city-selector\")  //城市选择弹层\r\n        } ;\r\n\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        侦测是否有过搜索结果点击行为\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n         this.detectSearchResultClick() ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        事件绑定\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n         this.addEventListener() ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        发起定位\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.location() ;        \r\n     }     \r\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    组件相关dom节点事件绑定\r\n     -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n     addEventListener() {\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击城市选择入口弹出城市选择器并根据是否有了数据来决定是否需要请求接口渲染\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$conningTowerCitySelectEntrance.click(() => {\r\n            this.popCitySelector() ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        未开通及招商场景中切换城市链接点击\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$investmentCitySwitch.click(() => {\r\n            this.consts.$investment.addClass(\"hidden\").removeClass(\"visible\") ;\r\n            this.popCitySelector() ;\r\n        }) ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击汉堡菜单弹出子菜单\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$hamburgMenu.click(() => {\r\n            $(document.body).css({ \"overflow-y\" : \"hidden\" }) ;  //滚动条隐藏\r\n            this.consts.$navigatorMask.fadeIn(100) ;\r\n            this.consts.$navigatorPop.animate( {\r\n                right : 0\r\n            } , 100 ) ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击子菜单遮罩关闭子菜单\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$navigatorMask.click(() => {\r\n            $(document.body).css({ \"overflow-y\" : \"auto\" }) ;  //如果有滚动条就显示  \r\n            this.consts.$navigatorMask.fadeOut(100) ;\r\n            this.consts.$navigatorPop.animate( {\r\n                right : \"-200px\"\r\n            } , 100 ) ;              \r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击司令塔家搜索返回按钮回退\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$conningTowerBack.click(() => {\r\n            history.back() ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击假的搜索区域出现真的搜索并将真的搜索框 focus\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".conning-tower dl dd\").click(() => {\r\n            this.consts.$substituteMask.show(50) ;\r\n            this.consts.$searchInputBox.trigger(\"focus\") ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        真搜索区域返回按钮事件监听\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$searchBack.click(() => {\r\n            this.consts.$substituteMask.hide(50) ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        真搜索区域清除输入图标事件监听\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$clearKeywords.click(() => {\r\n            this.consts.$searchInputBox.val(\"\").trigger(\"focus\") ;            \r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        清除搜索历史按钮事件监听       \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        this.consts.$clearHistory.click(() => {            \r\n            this.consts.$searchResultList.empty() ;\r\n            this.consts.$searchResultListAssistant.hide(100) ;\r\n            delete window.localStorage[this.moduleType + \"SearchHistory\" ] ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        pop菜单中的下载APP菜单事件监听\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$appDownload.click(() => {\r\n            nativeSchema.loadSchema({               \r\n                schema : \"external_call\"  ,  // 通过NN打开某个链接\r\n                protocal : \"wkzf\" , //schema头协议，实际情况填写\r\n                loadWaiting : \"1500\" , //发起唤醒请求后，会等待loadWaiting时间，超时则跳转到failUrl，默认3000ms                \r\n                failUrl : \"https://m.wkzf.com/download/transit?from=esfList\" ,  //唤起失败时的跳转链接，默认跳转到下载页\r\n                // apk信息,请根据实际情况填写\r\n                apkInfo : {\r\n                    PKG : \"com.wukong.ua\" ,\r\n                    CATEGORY : \"android.intent.category.DEFAULT\" ,\r\n                    ACTION : \"android.intent.action.VIEW\"\r\n                }\r\n            }) ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        真搜索区域输入监听以及focus监听，如果没有输入值就应该出搜索历史\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/        \r\n        this.consts.$searchInputBox.on(\"keyup focus\" , () => {\r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            取得关键词内容\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            let currentValue = this.consts.$searchInputBox.val() ? $.trim(this.consts.$searchInputBox.val()) : \"\" ;            \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            如果关键词没有改变什么也不做\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            if( currentValue && currentValue == this.consts.$searchInputBox.attr(\"data-last\")) return ;\r\n            else {\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                先清除结果\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                this.consts.$searchResultList.empty() ;\r\n                this.consts.$searchResultListAssistant.hide(100) ;\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                如果关键词为空就要绘制搜索历史并直接返回\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                if( ! currentValue ) {\r\n                    let searchHistory = window.localStorage[this.moduleType + \"SearchHistory\" ] ;\r\n                    searchHistory = searchHistory ? JSON.parse(searchHistory) : [] ;\r\n                    searchHistory && this.renderSearchResult( { items : searchHistory , history : true }) ;\r\n                    this.consts.$searchInputBox.attr(\"data-last\" , currentValue) ; \r\n                    return ;\r\n                }\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                否则就发起请求\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/            \r\n                let paramsMapper = { \"xf\" : \"newhouselist\" , \"esf\" : \"oldhouselist\" , \"rent\" : \"renthouselist\" } ;            \r\n                this.request({ \r\n                    apiUrl : this.apiUrl.search , \r\n                    requestData : { \"key\" : currentValue , \"pageName\" :  paramsMapper[this.moduleType] , \"cityId\" : parseInt( this.consts.visitedCityId , 10 ) } , \r\n                    success : (result) => {                    \r\n                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                        如果搜索无结果绘制相应节点\r\n                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                        if( result.data[\"secondHouseTotal\"] === 0 ) {\r\n                            $(\".substitute-mask .list-container .list\").empty().append(\"<li class=\\\"no-data\\\"><dl><dt>未找到该地址，请重新搜索</dt><dd>您可以更换其他关键字再试一次</dd></dl></li>\") ;\r\n                        }\r\n                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                        有结果的绘制\r\n                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                        else this.renderSearchResult({ \"items\" : result.data[\"secondHouseList\"] , \"history\" : false }) ;   \r\n                    } \r\n                }) ; \r\n                this.consts.$searchInputBox.attr(\"data-last\" , currentValue) ;  //最后将当前值记录到最后一次搜索关键词里面\r\n            }    \r\n            \r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        搜索表单提交相当于点击了第一个搜索结果项并阻止默认表单提交行为\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$searchForm.submit((event) => {\r\n            $(\".substitute-mask .list-container .list li\").eq(0).trigger(\"click\") ;\r\n            event.preventDefault() ;\r\n        }) ;\r\n        \r\n     }\r\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    本组件ajax请求封装\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    request({ apiUrl , requestData , success = $.noop }) {\r\n        try {\r\n            $.ajax({\r\n                url : apiUrl ,                    \r\n                data : requestData ,\r\n                dataType : \"json\" ,                            \r\n                error : function(e) {\r\n                    $.tips( \"调用数据接口：\" + apiUrl + \" 失败！请测试您的数据接口！\" , 3 ) ;                                   \r\n                } ,\r\n                success : function(data) {                \r\n                    if (data.status.toString() === \"1\")  {\r\n                        //获取到接口数据，进行处理\r\n                        success(data) ;\r\n                    }\r\n                    else $.tips( data.message , 3 ) ;\r\n                }\r\n            }) ;\r\n        }\r\n        catch(e) {\r\n            $.tips( \"错误名称：\" + e.name + \"\\n错误描述：\" + e.message , 3 ) ;\r\n        }\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    等渲染好城市选择器后进行的事件委托\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n     citySelectorEventDelegate() {         \r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         \r\n        根据tabs-handle的显示状态决定tabs-frame的margin-top值\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        let frameMarginTop = $(\".city-selector .caption .tabs-handle\").is(\":visible\") ? \"72px\" : \"28px\" ;\r\n        $(\".city-selector .tabs-frame\").css({ \"margin-top\" : frameMarginTop }) ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         \r\n        城市选择器中根据tabs-handle里面哪个句柄被选中来确定哪个tabs-frame显示\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/        \r\n        $(\".city-selector .tabs-frame.\" + $(\".city-selector .caption .tabs-handle li.on\").eq(0).data(\"sign\")).show() ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        城市选择器中tabs-handle的点击\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        let $tabsHandles = $(\".city-selector .caption .tabs-handle li\") ;\r\n        $tabsHandles.click(function(){\r\n            $tabsHandles.removeClass(\"on\") ;\r\n            $(this).addClass(\"on\") ;\r\n            $(\".city-selector .tabs-frame\").hide() ;\r\n            $(\".city-selector .tabs-frame.\" + $(this).data(\"sign\")).show() ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        城市选择器中每个城市被点击后干什么?\r\n        1. 设置selected系列 cookie\r\n        2. 接着执行接口方法\r\n        3. 如果是当前城市就什么都不做，否则就然后直接跳转新城市\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".city-selector .tabs-frame a\").click((event) => {\r\n            let $handler = $(event.currentTarget) ;\r\n            if( ! $handler.attr(\"data-cityid\")) return ;\r\n            $.cookie( \"selectedCityId\" , $handler.data(\"cityid\") ,  { \"path\" : \"/\" } ) ; \r\n            $.cookie( \"selectedCityName\" , $handler.text() ,  { \"path\" : \"/\" } ) ;\r\n            $.cookie( \"selectedCityPinyin\" , $handler.data(\"pinyin\") ,  { \"path\" : \"/\" } ) ;\r\n            $.cookie( \"selectedCityChina\" , $handler.data(\"china\") ,  { \"path\" : \"/\" } ) ;          \r\n            this.cityClick() ;\r\n            this.retractCitySelector() ;\r\n            if( $handler.data(\"cityid\") != this.consts.visitedCityId ) window.location.href = this.combineUrl( $handler.data(\"pinyin\") ) ;\r\n        }) ;\r\n     }\r\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    对接口拿到的业务开通城市进行处理\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    filterBusinessCity(data) {\r\n        let typeMapper = { \"esf\" : 1 , \"rent\" : 2 , \"xf\" : 3 } ;\r\n        let typeValue = typeMapper[this.moduleType] ;\r\n        let result = { \"domestic\" : {} , \"overseas\" : {} } ;\r\n        data && data.domesticCityList && data.domesticCityList.forEach((city) => {\r\n            let has = false ;\r\n            city.businessList && city.businessList.forEach((business) => {\r\n                if(business.businessId === typeValue) has = true ;\r\n            }) ;\r\n            if(has) {\r\n                let shoupin = city.pinyin.charAt(0).toUpperCase() ;\r\n                if( ! result.domestic.hasOwnProperty(shoupin)) result.domestic[shoupin] = [] ;\r\n                result.domestic[shoupin].push({ \"cityId\" : city.cityId , \"cityName\" : city.cityName , \"pinyin\" : city.pinyin , \"cityType\" : city.cityType }) ;\r\n            }\r\n        }) ;\r\n        data && data.overseaCityList && data.overseaCityList.forEach((city) => {\r\n            let has = false ;\r\n            city.businessList && city.businessList.forEach((business) => {\r\n                if(business.businessId === typeValue) has = true ;\r\n            }) ;\r\n            if(has) {\r\n                let shoupin = city.pinyin.charAt(0).toUpperCase() ;\r\n                if( ! result.overseas.hasOwnProperty(shoupin)) result.overseas[shoupin] = [] ;\r\n                result.overseas[shoupin].push({ \"cityId\" : city.cityId , \"cityName\" : city.cityName , \"pinyin\" : city.pinyin , \"cityType\" : city.cityType }) ;\r\n            } \r\n        }) ;\r\n        return result ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    发起定位\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    location() {              \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        首先要去判断是否有过浏览H5的页面，如果\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        if( $.cookie(\"visitedCityId\") && $.cookie(\"visitedCityId\") != this.consts.visitedCityId && $.cookie(\"selectedCityId\") && $.cookie(\"selectedCityId\") != this.consts.visitedCityId ) {\r\n            alert(\"先前访问过H5城市，并且选择过城市，这两个城市值都不等于路由城市，所以跳转到先前访问城市\") ;           \r\n            window.location.href = this.combineUrl($.cookie(\"visitedCityPinyin\")) ;\r\n            return ;\r\n        }\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.setVisitedCityCache() ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        检查浏览器是否支持地理定位\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        if( ! navigator.geolocation ) {\r\n            $.tips( \"您的浏览器不支持定位地理位置\" , 3 ) ;            \r\n            return ;\r\n        }\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        改写状态\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.states.locationStage = 1 ;\r\n        this.states.locationMessage = \"正在定位中...\" ;        \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        定义定位选项\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        let geoOpts = {\r\n            enableHighAccuracy : false ,   //表示是否高精度可用，为Boolean类型，默认为false，如果开启，响应时间会变慢，同时，在手机设备上会用掉更多的流量，也就是money了。\r\n            maximumAge : 0 , //表示应用程序的缓存时间。单位毫秒，默认是0，意味着每次请求都是立即去获取一个全新的对象内容。\r\n            timeout : 10 * 1000  //表示等待响应的最大时间，默认是0毫秒，表示无穷时间。\r\n        } ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        开始发起定位\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        navigator.geolocation.getCurrentPosition( (position) => {\r\n            let latitude = position.coords.latitude ;\r\n            let longitude = position.coords.longitude ; \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            改写状态\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            this.states.locationStage = 2 ;\r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            往cookie里面写经纬度\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            $.cookie(\"locationLatitude\" , latitude , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n            $.cookie(\"locationLongitude\" , longitude , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            执行定位回调\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            this.locationCallback({ \"latitude\" : latitude , \"longitude\" : longitude }) ;              \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            根据经纬度反查城市信息\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            this.request({ \r\n                apiUrl : this.apiUrl.getCityByLola , \r\n                requestData : { \"latitude\" : latitude , \"longitude\" : longitude } , \r\n                success : (result) => {\r\n                    this.states.locationMessage = result.data.cityName ;\r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    写入几个状态值\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                    this.states.locationCityId = result.data.cityId ;\r\n                    this.states.locationCityName = result.data.cityName ;\r\n                    this.states.locationCityPinyin = result.data.cityPinyin ;\r\n                    this.states.locationCityChina = result.data.china ;                                 \r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    城市选择弹层定位城市改写\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                    $(\".city-selector .tabs-frame .location-city\").replaceWith(\"<a class=\\\"location-city\\\" data-cityid=\\\"\" + this.states.locationCityId + \"\\\" data-pinyin=\\\"\" + this.states.locationCityPinyin + \"\\\" data-china=\\\"\" + this.states.locationCityChina + \"\\\">\" + this.states.locationCityName + \"</a>\") ;\r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    如果用户没有选择城市并且定位到的城市不是当前路由城市才会跳转到定位城市\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                    if(  ! $.cookie(\"selectedCityPinyin\") && result.data.cityId != this.consts.visitedCityId ) {\r\n                        alert(\"定位成功！没有用户选择的城市，而且定位城市不同于路由城市，将要直接跳转到定位城市！\") ;\r\n                        window.location.href = this.combineUrl(result.data.cityPinyin) ;\r\n                    }                                  \r\n                } \r\n            }) ;                       \r\n        } , ( error ) => {\r\n            this.states.locationStage = 2 ;  //标识定位已结束            \r\n            switch(error.code) {\r\n                case error.PERMISSION_DENIED :  // 用户阻止了授权                \r\n                this.states.locationMessage = \"定位服务暂未开启\" ;\r\n                this.states.locationFailCause = \"PERMISSION_DENIED\" ;                \r\n                this.localtionFail(false) ;               \r\n                break ;\r\n\r\n                case error.POSITION_UNAVAILABLE :  //定位信息无效\r\n                this.states.locationMessage = \"定位失败\" ;\r\n                this.states.locationFailCause = \"POSITION_UNAVAILABLE\" ;                   \r\n                this.localtionFail(true) ;\r\n                break ;\r\n\r\n                case error.TIMEOUT :  //定位超时\r\n                this.states.locationMessage = \"定位失败\" ;\r\n                this.states.locationFailCause = \"TIMEOUT\" ;                \r\n                this.localtionFail(true) ;\r\n                break ;\r\n\r\n                case error.UNKNOWN_ERROR :  //其他不可预知的错误  \r\n                this.states.locationMessage = \"定位失败\" ;\r\n                this.states.locationFailCause = \"UNKNOWN_ERROR\" ;                          \r\n                this.localtionFail(true) ;\r\n                break ;\r\n            }\r\n        } , geoOpts ) ;\r\n\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    收起城市选择器\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    retractCitySelector() {\r\n        this.consts.$citySelector.hide() ;\r\n        $(\"body>.container\").show() ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    弹出城市选择器\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    popCitySelector() {        \r\n        this.consts.$citySelector.slideDown(200) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        房源容器隐藏，否则快速上拉滚动条的时候下面房源会冒出来\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\"body>.container\").hide() ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        埋点\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.bigDataUtil.bigData({ \"pageName\" : \"1005\" , \"type\" : 1 }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        如果没有城市记录说明是第一次绘制，否则就不需要做什么\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        if($(\".city-selector .tabs-frame\").children().length) return ;        \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        请求业务城市数据并绘制，绘制完后绑定事件\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.request({ \r\n            apiUrl : this.apiUrl.businessCity , \r\n            requestData : { } , \r\n            success : (result) => {                    \r\n                let cities = this.filterBusinessCity(result.data) ;  //取出所有满足条件的城市清单   \r\n                //console.log(cities) ;                 \r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                绘制tabs-handle\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                let $ul = \"<ul class=\\\"tabs-handle\\\"><li class=\\\"on\\\" data-sign=\\\"domestic\\\">国内</li><li data-sign=\\\"overseas\\\">国际</li></ul>\" ;\r\n                if( $.isEmptyObject(cities.domestic) || $.isEmptyObject(cities.overseas) ) {\r\n                    if( ! $.isEmptyObject(cities.domestic) ) $ul = \"<ul class=\\\"tabs-handle\\\" style=\\\"display : none\\\"><li class=\\\"on\\\" data-sign=\\\"domestic\\\">国内</li><li data-sign=\\\"overseas\\\">国际</li></ul>\" ;\r\n                    else $ul = \"<ul class=\\\"tabs-handle\\\" style=\\\"display : none\\\"><li data-sign=\\\"domestic\\\">国内</li><li class=\\\"on\\\" data-sign=\\\"overseas\\\">国际</li></ul>\" ;\r\n                }                                \r\n                $(\".city-selector .caption\").append($ul) ;\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                绘制tabs-frame\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n                let $status = ( this.states.locationStage == 2 && ! this.states.locationFailCause && this.states.locationCityName ) ? \"<a class=\\\"location-city\\\" data-cityid=\\\"\" + this.states.locationCityId + \"\\\" data-pinyin=\\\"\" + this.states.locationCityPinyin + \"\\\" data-china=\\\"\" + this.states.locationCityChina + \"\\\">\" + this.states.locationCityName + \"</a>\" : \"<a class=\\\"location-city\\\">\" + this.states.locationMessage + \"</a>\" ;\r\n\r\n                let $domesticFrame = $(document.createElement(\"DIV\")).addClass(\"tabs-frame domestic\") ;                \r\n                $domesticFrame.append( \"<span>定位城市</span>\" + $status ) ;\r\n                if(  ! $.isEmptyObject(cities.domestic) ) {\r\n                    for( let key in cities.domestic ) {\r\n                        $domesticFrame.append(\"<span>\" + key + \"</span>\") ;\r\n                        cities.domestic[key].forEach((city) => {\r\n                            $domesticFrame.append(\"<a data-cityid=\\\"\" + city.cityId + \"\\\" data-pinyin=\\\"\" + city.pinyin + \"\\\" data-china=\\\"\" + city.cityType + \"\\\">\" + city.cityName + \"</a>\") ;\r\n                        }) ;\r\n                    }\r\n                }\r\n                this.consts.$citySelector.append($domesticFrame) ;\r\n\r\n                let $overseasFrame = $(document.createElement(\"DIV\")).addClass(\"tabs-frame overseas\") ;\r\n                $overseasFrame.append( \"<span>定位城市</span>\" + $status ) ;\r\n                if(  ! $.isEmptyObject(cities.overseas) ) {\r\n                    for( let key in cities.overseas ) {\r\n                        $overseasFrame.append(\"<span>\" + key + \"</span>\") ;\r\n                        cities.overseas[key].forEach((city) => {\r\n                            $overseasFrame.append(\"<a data-cityid=\\\"\" + city.cityId + \"\\\" data-pinyin=\\\"\" + city.pinyin + \"\\\" data-china=\\\"\" + city.cityType + \"\\\">\" + city.cityName + \"</a>\") ;\r\n                        }) ;\r\n                    }\r\n                }\r\n                this.consts.$citySelector.append($overseasFrame) ;                \r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                最后给dom节点绑定事件\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                this.citySelectorEventDelegate() ;\r\n            } \r\n        }) ; \r\n    }    \r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    定位失败的处理    \r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    localtionFail(tips) {\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------        \r\n        1. 将定位cookie系列全部置空       \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.states.locationCityId = null ;\r\n        this.states.locationCityName = null ;\r\n        this.states.locationCityPinyin = null ;\r\n        this.states.locationCityChina = null ;\r\n        $.cookie(\"locationLatitude\" , null , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(\"locationLongitude\" , null , { path : \"/\" , expires : 365 * 24 * 60 } ) ;         \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------        \r\n        2. 先执行定位回调       \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.locationCallback() ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------        \r\n        3. 改写城市选择弹层中定位城市占位符信息   \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/        \r\n        $(\".city-selector .tabs-frame .location-city\").replaceWith(\"<a class=\\\"location-city\\\">\" + this.states.locationMessage + \"</a>\") ;        \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        4. 如果先前用户选择过城市就直接跳转到选择的城市，否则就根据tips来决定是否需要弹框选择\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        if( $.cookie(\"selectedCityPinyin\")) {            \r\n            if( $.cookie(\"selectedCityPinyin\") != this.consts.visitedCityPinyin ) {\r\n                alert(\"定位失败！而且用户选择过跟当前不同的城市，将要跳转到用户选择的城市...\") ;\r\n                window.location.href = this.combineUrl($.cookie(\"selectedCityPinyin\")) ;\r\n            }\r\n        }\r\n        else {\r\n            if( ! tips) this.popCitySelector() ;\r\n            else {\r\n                $.modal({\r\n                    \"id\" : \"orientateTimeoutDialog\" ,\r\n                    \"title\" : \"\" ,      \r\n                    \"content\" : \"定位失败<br>请手动选择您的城市\" ,\r\n                    \"buttons\" : [\r\n                        { \"text\" : \"去选择\" , \"className\" : \"goto-select-city\" , \"clickCallback\" : () => {\r\n                                $.modal.close(\"orientateTimeoutDialog\") ;\r\n                                this.popCitySelector() ;\r\n                            } \r\n                        } \r\n                    ]\r\n                }) ;\r\n            }            \r\n        }        \r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中\r\n    这个cookie的作用是为了满足prd里面要求的：有上次浏览城市信息就不要定位了\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    setVisitedCityCache() {        \r\n        $.cookie(\"visitedCityId\" , this.consts.visitedCityId , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(\"visitedCityName\" , this.consts.visitedCityName , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(\"visitedCityPinyin\" , this.consts.visitedCityPinyin , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(\"visitedCityChina\" , this.consts.visitedCityChina , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    通过城市拼音和模块类型组织列表页面跳转地址\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    combineUrl(cityPinyin) {\r\n        let urlArray = window.location.href.split(\"/\") ;\r\n        urlArray[3] = cityPinyin ;\r\n        urlArray = urlArray.slice( 0 , 5 ) ;\r\n        return urlArray.join(\"/\") ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    绘制搜索结果或者历史，history用来标识是否搜索历史\r\n    如果是搜索历史的渲染，每条历史应该是已经有了埋点参数了\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    renderSearchResult( { items , history = false }) {\r\n        items && items.forEach((source) => {\r\n            let $li = $(document.createElement(\"LI\")) ;            \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            埋点参数\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            let eventNameMapper = history ? { \"xf\" : \"1050010\" , \"esf\" : \"1068013\" , \"rent\" : \"\" } : { \"xf\" : \"1050011\" , \"esf\" : \"1068014\" , \"rent\" : \"\" } ;            \r\n            let eventParam = history ? { \"search_history\" : source.estateDesc } : { \"choice_content\" : source.estateDesc } ;\r\n            if(eventNameMapper[this.moduleType]) {\r\n                $li.attr(\"data-bigdata\" , encodeURIComponent(JSON.stringify({ \"eventName\" : eventNameMapper[this.moduleType] , \"eventParam\" : eventParam }))) ;\r\n            }          \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            其他信息全绑到节点上data-detail上\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            $li.attr(\"data-detail\" , encodeURIComponent(JSON.stringify(source)) ) ;\r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            绘制单条搜索结果\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/                              \r\n            $li.append(\"<dl><dt>\" + source.estateDesc.replace( source.markname , \"<span>\" + source.markname + \"</span>\" ) + \"</dt><dd>\" + source.address.replace( source.markname , \"<span>\" + source.markname + \"</span>\" ) + \"</dd></dl>\") ;\r\n            this.consts.$searchResultList.append($li) ;\r\n        }) ; \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        如果是渲染搜索历史，就要加上显示历史的按钮以及历史记录title        \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        if( items && items.length && history) $(\".substitute-mask .list-container div\").show(100) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        最后进行事件绑定\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        $(\".substitute-mask .list li\").off().click((event) => {\r\n            let $item = $(event.currentTarget) ;\r\n            if($item.hasClass(\"no-data\")) return ;             \r\n            this.setSearchCache(JSON.parse(decodeURIComponent($item.attr(\"data-detail\")))) ;\r\n            this.searchResultItemClick(JSON.parse(decodeURIComponent($item.attr(\"data-detail\")))) ;\r\n        }) ;      \r\n\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    将指定的对象数据记录到搜索localStorage中，最多记录5条\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    setSearchCache(item) {\r\n        let searchCache = window.localStorage[this.moduleType + \"SearchHistory\"] ;\r\n        searchCache = searchCache ? JSON.parse(searchCache) : [] ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        取得和当前项目部重复的前4条记录\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        let noRepeatItems = [] ;\r\n        $.each( searchCache , ( index , cache ) => {\r\n            if( cache.value != item.value || cache.type != item.type ) noRepeatItems.push(cache) ;\r\n            if( noRepeatItems.length >= 4 ) return false ;\r\n        } ) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        再在前面追加指定的哪条\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n         noRepeatItems.unshift(item) ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        最后重新设置到localStorage中\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        window.localStorage[this.moduleType + \"SearchHistory\" ] = JSON.stringify(noRepeatItems) ;   \r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    根据condition路由参数里面是否有：sli,sst,sdi,sto,sid ，分别对应li,st,di,to,id，为了区分这五个条件来自搜索模块，如果有就要在假的搜索区域展示this.moduleType + \"SearchHistory\"\r\n    这个localStorage里面缓存的搜索历史里面第一条\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    detectSearchResultClick() {\r\n        let urlArray = window.location.href.split(\"/\") ;        \r\n        let paramObj = ParamGenerator.queryString2Object(urlArray[5]) ;\r\n        if( paramObj.hasOwnProperty(\"sli\") || paramObj.hasOwnProperty(\"sst\") || paramObj.hasOwnProperty(\"sdi\") || paramObj.hasOwnProperty(\"sto\") || paramObj.hasOwnProperty(\"sid\")) {\r\n            let searchCache = window.localStorage[this.moduleType + \"SearchHistory\"] ;            \r\n            searchCache = searchCache ? JSON.parse(searchCache) : [] ;\r\n            if(searchCache.length) $(\".conning-tower dl dd span\").text(searchCache[0].estateDesc) ;\r\n        }       \r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    整个组件定义结束\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n }\r\n"]}