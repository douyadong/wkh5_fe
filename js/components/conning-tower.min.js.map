{"version":3,"sources":["components/conning-tower.min.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","ConningTower","_ref","bigDataUtil","moduleType","_ref$cityClick","cityClick","undefined","$","noop","_ref$searchResultItem","searchResultItemClick","_ref$locationCallback","locationCallback","this","apiUrl","search","businessCity","getCityByLola","states","locationStage","locationMessage","locationFailCause","locationCityId","locationCityName","locationCityPinyin","locationCityChina","consts","visitedCityId","val","visitedCityName","visitedCityPinyin","visitedCityChina","$conningTowerCitySelectEntrance","$investment","$investmentCitySwitch","$hamburgMenu","$appDownload","$navigatorMask","$navigatorPop","$conningTowerBack","$substituteMask","$searchInputBox","$searchBack","$clearKeywords","$clearHistory","$searchResultList","$searchResultListAssistant","$searchForm","$citySelector","detectSearchResultClick","addEventListener","location","value","_this","click","popCitySelector","addClass","removeClass","document","body","css","overflow-y","fadeIn","animate","right","fadeOut","history","back","show","trigger","hide","empty","window","localStorage","nativeSchema","loadSchema","schema","protocal","loadWaiting","failUrl","apkInfo","PKG","CATEGORY","ACTION","on","currentValue","trim","attr","searchHistory","JSON","parse","renderSearchResult","items","paramsMapper","xf","esf","rent","request","requestData","pageName","cityId","parseInt","success","result","data","append","submit","event","eq","preventDefault","_ref2","_ref2$success","ajax","url","dataType","error","e","tips","status","toString","message","name","_this2","frameMarginTop","is","margin-top","$tabsHandles","$handler","currentTarget","cookie","path","text","retractCitySelector","href","combineUrl","typeMapper","typeValue","domestic","overseas","domesticCityList","forEach","city","has","businessList","business","businessId","shoupin","pinyin","charAt","toUpperCase","hasOwnProperty","push","cityName","cityType","overseaCityList","_this3","setVisitedCityCache","navigator","geolocation","geoOpts","enableHighAccuracy","maximumAge","timeout","getCurrentPosition","position","latitude","coords","longitude","expires","cityPinyin","china","replaceWith","code","PERMISSION_DENIED","localtionFail","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","_this4","slideDown","bigData","type","children","cities","filterBusinessCity","$ul","isEmptyObject","$status","$domesticFrame","createElement","$overseasFrame","citySelectorEventDelegate","_this5","modal","id","title","content","buttons","className","clickCallback","close","urlArray","split","slice","join","_ref3","_this6","_ref3$history","source","$li","eventNameMapper","eventParam","search_history","estateDesc","choice_content","encodeURIComponent","stringify","eventName","replace","markname","address","off","$item","hasClass","setSearchCache","decodeURIComponent","item","searchCache","noRepeatItems","each","index","cache","unshift","paramObj","ParamGenerator","queryString2Object"],"mappings":"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","file":"conning-tower.min.js","sourcesContent":["/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n 1. 项目名称：悟空找房h5\r\n 2. 页面名称：components -> conning-tower(列表页司令塔，包括返回、搜索、汉堡菜单等信息)\r\n 3. 作者：zhaohuagang@lifang.com\r\n 4. 备注：\r\n    这里面定位需要用到的几个缓存key及缓存类型：\r\n    1). \"visitedCityId\" , \"visitedCityName\" , \"visitedCityPinyin\"，\"visitedCityChina\"，表示用户最后一次访问的当前moduleType的城市  使用cookie\r\n    2). \"selectedCityId\" , \"selectedCityName\" , \"selectedCityPinyin\"，\"selectedCityChina\"，表示用户选择的城市  使用cookie\r\n    3). locationLongitude , locationLatitude 定位的经纬度，这个一定要用cookie，因为埋点里面传递的值是从这里取的      \r\n5. 待完成任务：\r\n    1). setSearchCache方法写好了，判重还没有验证，在用户点击搜索结果项或者搜索表单提交的时候需要执行，只不过搜索表单提交相当于选择了搜索出来的第一条记录\r\n    2). 搜索框获得焦点或者keyup但是keywords为空的时候需要将搜索历史绘制出来\r\n -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n class ConningTower {\r\n     constructor({ bigDataUtil , moduleType , cityClick = $.noop , searchResultItemClick = $.noop , locationCallback = $.noop }) {\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        大数据埋点的工具引进来\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        this.bigDataUtil = bigDataUtil ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        模块类型，可以是：xf | esf | rent\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/  \r\n         this.moduleType = moduleType ; \r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        几个api地址的配置\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n         this.apiUrl = {\r\n             \"search\" : \"/api/common/acWord\" ,   //搜索用的接口地址\r\n             \"businessCity\" : \"/api/common/businessCity\" ,   //获取业务开通城市接口地址\r\n             \"getCityByLola\" : \"/api/common/getCityByLatLon\"  //通过经纬度反查城市接口地址\r\n         } ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        几个接口方法 \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n         this.cityClick = cityClick ;  //城市选择器中城市点击接口事件\r\n         this.searchResultItemClick = searchResultItemClick ;  //搜索结果选项点击\r\n         this.locationCallback = locationCallback ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        几个状态值\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.states = {\r\n            \"locationStage\" : 0 ,  //定位阶段： 0:还没有发起定位 | 1:开始定位 | 2:定位结束\r\n            \"locationMessage\" : null ,  //定位提示语，{城市}/正在定位中.../定位失败/定位服务暂未开启\r\n            \"locationFailCause\" : null , //定位失败原因\r\n            \"locationCityId\" : null ,\r\n            \"locationCityName\" : null ,\r\n            \"locationCityPinyin\" : null ,\r\n            \"locationCityChina\" : null\r\n        } ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        页面常量\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts = {\r\n            \"visitedCityId\" : $(\"#visitedCityId\").val() ,\r\n            \"visitedCityName\" : $(\"#visitedCityName\").val() ,\r\n            \"visitedCityPinyin\" : $(\"#visitedCityPinyin\").val() ,\r\n            \"visitedCityChina\" : $(\"#visitedCityChina\").val() ,\r\n\r\n            \"$conningTowerCitySelectEntrance\" : $(\".conning-tower dl dt\") ,  //点击城市选择入口\r\n            \"$investment\" : $(\".notopen-investment\") ,  //未开通及招商弹层\r\n            \"$investmentCitySwitch\" : $(\".notopen-investment .change\") ,  //未开通及招商场景中切换城市链接\r\n            \"$hamburgMenu\" : $(\".conning-tower .hamburg-menu\") ,  //汉堡菜单\r\n            \"$appDownload\" : $(\".navigator-pop .app-download\") ,   //点击汉堡菜单弹出的菜单中app下载按钮\r\n            \"$navigatorMask\" : $(\".navigator-mask\") ,  //pop菜单遮罩\r\n            \"$navigatorPop\" : $(\".navigator-pop\") ,  //点击汉堡菜单弹出的菜单\r\n            \"$conningTowerBack\" : $(\".conning-tower .back\") ,  //司令塔假的搜索区域返回按钮\r\n            \"$substituteMask\" : $(\".substitute-mask\") ,  //搜索替身遮罩\r\n            \"$searchInputBox\" : $(\".substitute-mask .search-substitute .input-section input\") ,  //真搜索区域的搜索框\r\n            \"$searchBack\" : $(\".substitute-mask .search-substitute .back\") ,  //真搜索区域返回按钮\r\n            \"$clearKeywords\" : $(\".substitute-mask .search-substitute .input-section .icon-close\") , //清除搜索关键词\r\n            \"$clearHistory\" : $(\".substitute-mask .list-container .clear-history\") ,  //清除搜索历史按钮\r\n            \"$searchResultList\" : $(\".substitute-mask .list-container .list\") ,  //搜索结果列表\r\n            \"$searchResultListAssistant\" : $(\".substitute-mask .list-container div\") ,  //搜索结果列表助手，包括上面的\"搜索历史\"title和下面的清除历史按钮\r\n            \"$searchForm\" : $(\".substitute-mask .search-substitute form\") ,  //搜索表单\r\n            \"$citySelector\" : $(\".city-selector\")  //城市选择弹层\r\n        } ;\r\n\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        侦测是否有过搜索结果点击行为\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n         this.detectSearchResultClick() ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        事件绑定\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n         this.addEventListener() ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        发起定位\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.location() ;        \r\n     }     \r\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    组件相关dom节点事件绑定\r\n     -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n     addEventListener() {\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击城市选择入口弹出城市选择器并根据是否有了数据来决定是否需要请求接口渲染\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$conningTowerCitySelectEntrance.click(() => {\r\n            this.popCitySelector() ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        未开通及招商场景中切换城市链接点击\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$investmentCitySwitch.click(() => {\r\n            this.consts.$investment.addClass(\"hidden\").removeClass(\"visible\") ;\r\n            this.popCitySelector() ;\r\n        }) ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击汉堡菜单弹出子菜单\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$hamburgMenu.click(() => {\r\n            $(document.body).css({ \"overflow-y\" : \"hidden\" }) ;  //滚动条隐藏\r\n            this.consts.$navigatorMask.fadeIn(100) ;\r\n            this.consts.$navigatorPop.animate( {\r\n                right : 0\r\n            } , 100 ) ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击子菜单遮罩关闭子菜单\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$navigatorMask.click(() => {\r\n            $(document.body).css({ \"overflow-y\" : \"auto\" }) ;  //如果有滚动条就显示  \r\n            this.consts.$navigatorMask.fadeOut(100) ;\r\n            this.consts.$navigatorPop.animate( {\r\n                right : \"-200px\"\r\n            } , 100 ) ;              \r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击司令塔家搜索返回按钮回退\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$conningTowerBack.click(() => {\r\n            history.back() ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        点击假的搜索区域出现真的搜索并将真的搜索框 focus\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".conning-tower dl dd\").click(() => {\r\n            this.consts.$substituteMask.show(50) ;\r\n            this.consts.$searchInputBox.trigger(\"focus\") ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        真搜索区域返回按钮事件监听\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$searchBack.click(() => {\r\n            this.consts.$substituteMask.hide(50) ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        真搜索区域清除输入图标事件监听\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$clearKeywords.click(() => {\r\n            this.consts.$searchInputBox.val(\"\").trigger(\"focus\") ;            \r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        清除搜索历史按钮事件监听       \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        this.consts.$clearHistory.click(() => {            \r\n            this.consts.$searchResultList.empty() ;\r\n            this.consts.$searchResultListAssistant.hide(100) ;\r\n            delete window.localStorage[this.moduleType + \"SearchHistory\" ] ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        pop菜单中的下载APP菜单事件监听\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$appDownload.click(() => {\r\n            nativeSchema.loadSchema({               \r\n                schema : \"external_call\"  ,  // 通过NN打开某个链接\r\n                protocal : \"wkzf\" , //schema头协议，实际情况填写\r\n                loadWaiting : \"1500\" , //发起唤醒请求后，会等待loadWaiting时间，超时则跳转到failUrl，默认3000ms                \r\n                failUrl : \"https://m.wkzf.com/download/transit?from=esfList\" ,  //唤起失败时的跳转链接，默认跳转到下载页\r\n                // apk信息,请根据实际情况填写\r\n                apkInfo : {\r\n                    PKG : \"com.wukong.ua\" ,\r\n                    CATEGORY : \"android.intent.category.DEFAULT\" ,\r\n                    ACTION : \"android.intent.action.VIEW\"\r\n                }\r\n            }) ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        真搜索区域输入监听以及focus监听，如果没有输入值就应该出搜索历史\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/        \r\n        this.consts.$searchInputBox.on(\"keyup focus\" , () => {\r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            取得关键词内容\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            let currentValue = this.consts.$searchInputBox.val() ? $.trim(this.consts.$searchInputBox.val()) : \"\" ;            \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            如果关键词没有改变什么也不做\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            if( currentValue && currentValue == this.consts.$searchInputBox.attr(\"data-last\")) return ;\r\n            else {\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                先清除结果\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                this.consts.$searchResultList.empty() ;\r\n                this.consts.$searchResultListAssistant.hide(100) ;\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                如果关键词为空就要绘制搜索历史并直接返回\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                if( ! currentValue ) {\r\n                    let searchHistory = window.localStorage[this.moduleType + \"SearchHistory\" ] ;\r\n                    searchHistory = searchHistory ? JSON.parse(searchHistory) : [] ;\r\n                    searchHistory && this.renderSearchResult( { items : searchHistory , history : true }) ;\r\n                    this.consts.$searchInputBox.attr(\"data-last\" , currentValue) ; \r\n                    return ;\r\n                }\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                否则就发起请求\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/            \r\n                let paramsMapper = { \"xf\" : \"newhouselist\" , \"esf\" : \"oldhouselist\" , \"rent\" : \"renthouselist\" } ;            \r\n                this.request({ \r\n                    apiUrl : this.apiUrl.search , \r\n                    requestData : { \"key\" : currentValue , \"pageName\" :  paramsMapper[this.moduleType] , \"cityId\" : parseInt( this.consts.visitedCityId , 10 ) } , \r\n                    success : (result) => {                    \r\n                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                        如果搜索无结果绘制相应节点\r\n                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                        if( result.data[\"secondHouseTotal\"] === 0 ) {\r\n                            $(\".substitute-mask .list-container .list\").empty().append(\"<li class=\\\"no-data\\\"><dl><dt>未找到该地址，请重新搜索</dt><dd>您可以更换其他关键字再试一次</dd></dl></li>\") ;\r\n                        }\r\n                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                        有结果的绘制\r\n                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                        else this.renderSearchResult({ \"items\" : result.data[\"secondHouseList\"] , \"history\" : false }) ;   \r\n                    } \r\n                }) ; \r\n                this.consts.$searchInputBox.attr(\"data-last\" , currentValue) ;  //最后将当前值记录到最后一次搜索关键词里面\r\n            }    \r\n            \r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        搜索表单提交相当于点击了第一个搜索结果项并阻止默认表单提交行为\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.consts.$searchForm.submit((event) => {\r\n            $(\".substitute-mask .list-container .list li\").eq(0).trigger(\"click\") ;\r\n            event.preventDefault() ;\r\n        }) ;\r\n        \r\n     }\r\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    本组件ajax请求封装\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    request({ apiUrl , requestData , success = $.noop }) {\r\n        try {\r\n            $.ajax({\r\n                url : apiUrl ,                    \r\n                data : requestData ,\r\n                dataType : \"json\" ,                            \r\n                error : function(e) {\r\n                    $.tips( \"调用数据接口：\" + apiUrl + \" 失败！请测试您的数据接口！\" , 3 ) ;                                   \r\n                } ,\r\n                success : function(data) {                \r\n                    if (data.status.toString() === \"1\")  {\r\n                        //获取到接口数据，进行处理\r\n                        success(data) ;\r\n                    }\r\n                    else $.tips( data.message , 3 ) ;\r\n                }\r\n            }) ;\r\n        }\r\n        catch(e) {\r\n            $.tips( \"错误名称：\" + e.name + \"\\n错误描述：\" + e.message , 3 ) ;\r\n        }\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    等渲染好城市选择器后进行的事件委托\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n     citySelectorEventDelegate() {         \r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         \r\n        根据tabs-handle的显示状态决定tabs-frame的margin-top值\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        let frameMarginTop = $(\".city-selector .caption .tabs-handle\").is(\":visible\") ? \"72px\" : \"28px\" ;\r\n        $(\".city-selector .tabs-frame\").css({ \"margin-top\" : frameMarginTop }) ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         \r\n        城市选择器中根据tabs-handle里面哪个句柄被选中来确定哪个tabs-frame显示\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/        \r\n        $(\".city-selector .tabs-frame.\" + $(\".city-selector .caption .tabs-handle li.on\").eq(0).data(\"sign\")).show() ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        城市选择器中tabs-handle的点击\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        let $tabsHandles = $(\".city-selector .caption .tabs-handle li\") ;\r\n        $tabsHandles.click(function(){\r\n            $tabsHandles.removeClass(\"on\") ;\r\n            $(this).addClass(\"on\") ;\r\n            $(\".city-selector .tabs-frame\").hide() ;\r\n            $(\".city-selector .tabs-frame.\" + $(this).data(\"sign\")).show() ;\r\n        }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        城市选择器中每个城市被点击后干什么?\r\n        1. 设置selected系列 cookie\r\n        2. 接着执行接口方法\r\n        3. 如果是当前城市就什么都不做，否则就然后直接跳转新城市\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(\".city-selector .tabs-frame a\").click((event) => {\r\n            let $handler = $(event.currentTarget) ;\r\n            if( ! $handler.attr(\"data-cityid\")) return ;\r\n            $.cookie( \"selectedCityId\" , $handler.data(\"cityid\") ,  { \"path\" : \"/\" } ) ; \r\n            $.cookie( \"selectedCityName\" , $handler.text() ,  { \"path\" : \"/\" } ) ;\r\n            $.cookie( \"selectedCityPinyin\" , $handler.data(\"pinyin\") ,  { \"path\" : \"/\" } ) ;\r\n            $.cookie( \"selectedCityChina\" , $handler.data(\"china\") ,  { \"path\" : \"/\" } ) ;          \r\n            this.cityClick() ;\r\n            this.retractCitySelector() ;\r\n            if( $handler.data(\"cityid\") != this.consts.visitedCityId ) window.location.href = this.combineUrl( $handler.data(\"pinyin\") ) ;\r\n        }) ;\r\n     }\r\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    对接口拿到的业务开通城市进行处理\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    filterBusinessCity(data) {\r\n        let typeMapper = { \"esf\" : 1 , \"rent\" : 2 , \"xf\" : 3 } ;\r\n        let typeValue = typeMapper[this.moduleType] ;\r\n        let result = { \"domestic\" : {} , \"overseas\" : {} } ;\r\n        data && data.domesticCityList && data.domesticCityList.forEach((city) => {\r\n            let has = false ;\r\n            city.businessList && city.businessList.forEach((business) => {\r\n                if(business.businessId === typeValue) has = true ;\r\n            }) ;\r\n            if(has) {\r\n                let shoupin = city.pinyin.charAt(0).toUpperCase() ;\r\n                if( ! result.domestic.hasOwnProperty(shoupin)) result.domestic[shoupin] = [] ;\r\n                result.domestic[shoupin].push({ \"cityId\" : city.cityId , \"cityName\" : city.cityName , \"pinyin\" : city.pinyin , \"cityType\" : city.cityType }) ;\r\n            }\r\n        }) ;\r\n        data && data.overseaCityList && data.overseaCityList.forEach((city) => {\r\n            let has = false ;\r\n            city.businessList && city.businessList.forEach((business) => {\r\n                if(business.businessId === typeValue) has = true ;\r\n            }) ;\r\n            if(has) {\r\n                let shoupin = city.pinyin.charAt(0).toUpperCase() ;\r\n                if( ! result.overseas.hasOwnProperty(shoupin)) result.overseas[shoupin] = [] ;\r\n                result.overseas[shoupin].push({ \"cityId\" : city.cityId , \"cityName\" : city.cityName , \"pinyin\" : city.pinyin , \"cityType\" : city.cityType }) ;\r\n            } \r\n        }) ;\r\n        return result ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    发起定位\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    location() {              \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        首先要去判断是否有过浏览H5的页面，如果\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        if( $.cookie(\"visitedCityId\") && $.cookie(\"visitedCityId\") != this.consts.visitedCityId && $.cookie(\"selectedCityId\") && $.cookie(\"selectedCityId\") != this.consts.visitedCityId ) {\r\n            //alert(\"先前访问过H5城市，并且选择过城市，这两个城市值都不等于路由城市，所以跳转到先前访问城市\") ;           \r\n            window.location.href = this.combineUrl($.cookie(\"visitedCityPinyin\")) ;\r\n            return ;\r\n        }\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.setVisitedCityCache() ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        检查浏览器是否支持地理定位\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        if( ! navigator.geolocation ) {\r\n            $.tips( \"您的浏览器不支持定位地理位置\" , 3 ) ;            \r\n            return ;\r\n        }\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        改写状态\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.states.locationStage = 1 ;\r\n        this.states.locationMessage = \"正在定位中...\" ;        \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        定义定位选项\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        let geoOpts = {\r\n            enableHighAccuracy : false ,   //表示是否高精度可用，为Boolean类型，默认为false，如果开启，响应时间会变慢，同时，在手机设备上会用掉更多的流量，也就是money了。\r\n            maximumAge : 0 , //表示应用程序的缓存时间。单位毫秒，默认是0，意味着每次请求都是立即去获取一个全新的对象内容。\r\n            timeout : 10 * 1000  //表示等待响应的最大时间，默认是0毫秒，表示无穷时间。\r\n        } ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        开始发起定位\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        navigator.geolocation.getCurrentPosition( (position) => {\r\n            let latitude = position.coords.latitude ;\r\n            let longitude = position.coords.longitude ; \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            改写状态\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            this.states.locationStage = 2 ;\r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            往cookie里面写经纬度\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            $.cookie(\"locationLatitude\" , latitude , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n            $.cookie(\"locationLongitude\" , longitude , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            执行定位回调\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            this.locationCallback({ \"latitude\" : latitude , \"longitude\" : longitude }) ;              \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            根据经纬度反查城市信息\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            this.request({ \r\n                apiUrl : this.apiUrl.getCityByLola , \r\n                requestData : { \"latitude\" : latitude , \"longitude\" : longitude } , \r\n                success : (result) => {\r\n                    this.states.locationMessage = result.data.cityName ;\r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    写入几个状态值\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                    this.states.locationCityId = result.data.cityId ;\r\n                    this.states.locationCityName = result.data.cityName ;\r\n                    this.states.locationCityPinyin = result.data.cityPinyin ;\r\n                    this.states.locationCityChina = result.data.china ;                                 \r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    城市选择弹层定位城市改写\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                    $(\".city-selector .tabs-frame .location-city\").replaceWith(\"<a class=\\\"location-city\\\" data-cityid=\\\"\" + this.states.locationCityId + \"\\\" data-pinyin=\\\"\" + this.states.locationCityPinyin + \"\\\" data-china=\\\"\" + this.states.locationCityChina + \"\\\">\" + this.states.locationCityName + \"</a>\") ;\r\n                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                    如果用户没有选择城市并且定位到的城市不是当前路由城市才会跳转到定位城市\r\n                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                    if(  ! $.cookie(\"selectedCityPinyin\") && result.data.cityId != this.consts.visitedCityId ) {\r\n                        //alert(\"定位成功！没有用户选择的城市，而且定位城市不同于路由城市，将要直接跳转到定位城市！\") ;\r\n                        window.location.href = this.combineUrl(result.data.cityPinyin) ;\r\n                    }                                  \r\n                } \r\n            }) ;                       \r\n        } , ( error ) => {\r\n            this.states.locationStage = 2 ;  //标识定位已结束            \r\n            switch(error.code) {\r\n                case error.PERMISSION_DENIED :  // 用户阻止了授权                \r\n                this.states.locationMessage = \"定位服务暂未开启\" ;\r\n                this.states.locationFailCause = \"PERMISSION_DENIED\" ;                \r\n                this.localtionFail(false) ;               \r\n                break ;\r\n\r\n                case error.POSITION_UNAVAILABLE :  //定位信息无效\r\n                this.states.locationMessage = \"定位失败\" ;\r\n                this.states.locationFailCause = \"POSITION_UNAVAILABLE\" ;                   \r\n                this.localtionFail(true) ;\r\n                break ;\r\n\r\n                case error.TIMEOUT :  //定位超时\r\n                this.states.locationMessage = \"定位失败\" ;\r\n                this.states.locationFailCause = \"TIMEOUT\" ;                \r\n                this.localtionFail(true) ;\r\n                break ;\r\n\r\n                case error.UNKNOWN_ERROR :  //其他不可预知的错误  \r\n                this.states.locationMessage = \"定位失败\" ;\r\n                this.states.locationFailCause = \"UNKNOWN_ERROR\" ;                          \r\n                this.localtionFail(true) ;\r\n                break ;\r\n            }\r\n        } , geoOpts ) ;\r\n\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    收起城市选择器\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    retractCitySelector() {\r\n        this.consts.$citySelector.hide() ;\r\n        $(document.body).css({ \"overflow-y\" : \"auto\" }) ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    弹出城市选择器\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    popCitySelector() {        \r\n        this.consts.$citySelector.slideDown(200) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        禁掉body的滚动条\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        $(document.body).css({ \"overflow-y\" : \"hidden\" }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        埋点\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.bigDataUtil.bigData({ \"pageName\" : \"1005\" , \"type\" : 1 }) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        如果没有城市记录说明是第一次绘制，否则就不需要做什么\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        if($(\".city-selector .tabs-frame\").children().length) return ;        \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        请求业务城市数据并绘制，绘制完后绑定事件\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.request({ \r\n            apiUrl : this.apiUrl.businessCity , \r\n            requestData : { } , \r\n            success : (result) => {                    \r\n                let cities = this.filterBusinessCity(result.data) ;  //取出所有满足条件的城市清单   \r\n                //console.log(cities) ;                 \r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                绘制tabs-handle\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                let $ul = \"<ul class=\\\"tabs-handle\\\"><li class=\\\"on\\\" data-sign=\\\"domestic\\\">国内</li><li data-sign=\\\"overseas\\\">国际</li></ul>\" ;\r\n                if( $.isEmptyObject(cities.domestic) || $.isEmptyObject(cities.overseas) ) {\r\n                    if( ! $.isEmptyObject(cities.domestic) ) $ul = \"<ul class=\\\"tabs-handle\\\" style=\\\"display : none\\\"><li class=\\\"on\\\" data-sign=\\\"domestic\\\">国内</li><li data-sign=\\\"overseas\\\">国际</li></ul>\" ;\r\n                    else $ul = \"<ul class=\\\"tabs-handle\\\" style=\\\"display : none\\\"><li data-sign=\\\"domestic\\\">国内</li><li class=\\\"on\\\" data-sign=\\\"overseas\\\">国际</li></ul>\" ;\r\n                }                                \r\n                $(\".city-selector .caption\").append($ul) ;\r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                绘制tabs-frame\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n                let $status = ( this.states.locationStage == 2 && ! this.states.locationFailCause && this.states.locationCityName ) ? \"<a class=\\\"location-city\\\" data-cityid=\\\"\" + this.states.locationCityId + \"\\\" data-pinyin=\\\"\" + this.states.locationCityPinyin + \"\\\" data-china=\\\"\" + this.states.locationCityChina + \"\\\">\" + this.states.locationCityName + \"</a>\" : \"<a class=\\\"location-city\\\">\" + this.states.locationMessage + \"</a>\" ;\r\n\r\n                let $domesticFrame = $(document.createElement(\"DIV\")).addClass(\"tabs-frame domestic\") ;                \r\n                $domesticFrame.append( \"<span>定位城市</span>\" + $status ) ;\r\n                if(  ! $.isEmptyObject(cities.domestic) ) {\r\n                    for( let key in cities.domestic ) {\r\n                        $domesticFrame.append(\"<span>\" + key + \"</span>\") ;\r\n                        cities.domestic[key].forEach((city) => {\r\n                            $domesticFrame.append(\"<a data-cityid=\\\"\" + city.cityId + \"\\\" data-pinyin=\\\"\" + city.pinyin + \"\\\" data-china=\\\"\" + city.cityType + \"\\\">\" + city.cityName + \"</a>\") ;\r\n                        }) ;\r\n                    }\r\n                }\r\n                this.consts.$citySelector.append($domesticFrame) ;\r\n\r\n                let $overseasFrame = $(document.createElement(\"DIV\")).addClass(\"tabs-frame overseas\") ;\r\n                $overseasFrame.append( \"<span>定位城市</span>\" + $status ) ;\r\n                if(  ! $.isEmptyObject(cities.overseas) ) {\r\n                    for( let key in cities.overseas ) {\r\n                        $overseasFrame.append(\"<span>\" + key + \"</span>\") ;\r\n                        cities.overseas[key].forEach((city) => {\r\n                            $overseasFrame.append(\"<a data-cityid=\\\"\" + city.cityId + \"\\\" data-pinyin=\\\"\" + city.pinyin + \"\\\" data-china=\\\"\" + city.cityType + \"\\\">\" + city.cityName + \"</a>\") ;\r\n                        }) ;\r\n                    }\r\n                }\r\n                this.consts.$citySelector.append($overseasFrame) ;                \r\n                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                最后给dom节点绑定事件\r\n                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n                this.citySelectorEventDelegate() ;\r\n            } \r\n        }) ; \r\n    }    \r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    定位失败的处理    \r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    localtionFail(tips) {\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------        \r\n        1. 将定位cookie系列全部置空       \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.states.locationCityId = null ;\r\n        this.states.locationCityName = null ;\r\n        this.states.locationCityPinyin = null ;\r\n        this.states.locationCityChina = null ;\r\n        $.cookie(\"locationLatitude\" , null , { path : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(\"locationLongitude\" , null , { path : \"/\" , expires : 365 * 24 * 60 } ) ;         \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------        \r\n        2. 先执行定位回调       \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        this.locationCallback() ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------        \r\n        3. 改写城市选择弹层中定位城市占位符信息   \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/        \r\n        $(\".city-selector .tabs-frame .location-city\").replaceWith(\"<a class=\\\"location-city\\\">\" + this.states.locationMessage + \"</a>\") ;        \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        4. 如果先前用户选择过城市就直接跳转到选择的城市，否则就根据tips来决定是否需要弹框选择\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        if( $.cookie(\"selectedCityPinyin\")) {            \r\n            if( $.cookie(\"selectedCityPinyin\") != this.consts.visitedCityPinyin ) {\r\n                //alert(\"定位失败！而且用户选择过跟当前不同的城市，将要跳转到用户选择的城市...\") ;\r\n                window.location.href = this.combineUrl($.cookie(\"selectedCityPinyin\")) ;\r\n            }\r\n        }\r\n        else {\r\n            if( ! tips) this.popCitySelector() ;\r\n            else {\r\n                $.modal({\r\n                    \"id\" : \"orientateTimeoutDialog\" ,\r\n                    \"title\" : \"\" ,      \r\n                    \"content\" : \"定位失败<br>请手动选择您的城市\" ,\r\n                    \"buttons\" : [\r\n                        { \"text\" : \"去选择\" , \"className\" : \"goto-select-city\" , \"clickCallback\" : () => {\r\n                                $.modal.close(\"orientateTimeoutDialog\") ;\r\n                                this.popCitySelector() ;\r\n                            } \r\n                        } \r\n                    ]\r\n                }) ;\r\n            }            \r\n        }        \r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中\r\n    这个cookie的作用是为了满足prd里面要求的：有上次浏览城市信息就不要定位了\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    setVisitedCityCache() {        \r\n        $.cookie(\"visitedCityId\" , this.consts.visitedCityId , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(\"visitedCityName\" , this.consts.visitedCityName , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(\"visitedCityPinyin\" , this.consts.visitedCityPinyin , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n        $.cookie(\"visitedCityChina\" , this.consts.visitedCityChina , { \"path\" : \"/\" , expires : 365 * 24 * 60 } ) ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    通过城市拼音和模块类型组织列表页面跳转地址\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    combineUrl(cityPinyin) {\r\n        let urlArray = window.location.href.split(\"/\") ;\r\n        urlArray[3] = cityPinyin ;\r\n        urlArray = urlArray.slice( 0 , 5 ) ;\r\n        return urlArray.join(\"/\") ;\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    绘制搜索结果或者历史，history用来标识是否搜索历史\r\n    如果是搜索历史的渲染，每条历史应该是已经有了埋点参数了\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    renderSearchResult( { items , history = false }) {\r\n        items && items.forEach((source) => {\r\n            let $li = $(document.createElement(\"LI\")) ;            \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            埋点参数\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            let eventNameMapper = history ? { \"xf\" : \"1050010\" , \"esf\" : \"1068013\" , \"rent\" : \"\" } : { \"xf\" : \"1050011\" , \"esf\" : \"1068014\" , \"rent\" : \"\" } ;            \r\n            let eventParam = history ? { \"search_history\" : source.estateDesc } : { \"choice_content\" : source.estateDesc } ;\r\n            if(eventNameMapper[this.moduleType]) {\r\n                $li.attr(\"data-bigdata\" , encodeURIComponent(JSON.stringify({ \"eventName\" : eventNameMapper[this.moduleType] , \"eventParam\" : eventParam }))) ;\r\n            }          \r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            其他信息全绑到节点上data-detail上\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n            $li.attr(\"data-detail\" , encodeURIComponent(JSON.stringify(source)) ) ;\r\n            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n            绘制单条搜索结果\r\n            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/                              \r\n            $li.append(\"<dl><dt>\" + source.estateDesc.replace( source.markname , \"<span>\" + source.markname + \"</span>\" ) + \"</dt><dd>\" + source.address.replace( source.markname , \"<span>\" + source.markname + \"</span>\" ) + \"</dd></dl>\") ;\r\n            this.consts.$searchResultList.append($li) ;\r\n        }) ; \r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        如果是渲染搜索历史，就要加上显示历史的按钮以及历史记录title        \r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        if( items && items.length && history) $(\".substitute-mask .list-container div\").show(100) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        最后进行事件绑定\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/ \r\n        $(\".substitute-mask .list li\").off().click((event) => {\r\n            let $item = $(event.currentTarget) ;\r\n            if($item.hasClass(\"no-data\")) return ;             \r\n            this.setSearchCache(JSON.parse(decodeURIComponent($item.attr(\"data-detail\")))) ;\r\n            this.searchResultItemClick(JSON.parse(decodeURIComponent($item.attr(\"data-detail\")))) ;\r\n        }) ;      \r\n\r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    将指定的对象数据记录到搜索localStorage中，最多记录5条\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    setSearchCache(item) {\r\n        let searchCache = window.localStorage[this.moduleType + \"SearchHistory\"] ;\r\n        searchCache = searchCache ? JSON.parse(searchCache) : [] ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        取得和当前项目部重复的前4条记录\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        let noRepeatItems = [] ;\r\n        $.each( searchCache , ( index , cache ) => {\r\n            if( cache.value != item.value || cache.type != item.type ) noRepeatItems.push(cache) ;\r\n            if( noRepeatItems.length >= 4 ) return false ;\r\n        } ) ;\r\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        再在前面追加指定的哪条\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n         noRepeatItems.unshift(item) ;\r\n         /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        最后重新设置到localStorage中\r\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n        window.localStorage[this.moduleType + \"SearchHistory\" ] = JSON.stringify(noRepeatItems) ;   \r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    根据condition路由参数里面是否有：sli,sst,sdi,sto,sid ，分别对应li,st,di,to,id，为了区分这五个条件来自搜索模块，如果有就要在假的搜索区域展示this.moduleType + \"SearchHistory\"\r\n    这个localStorage里面缓存的搜索历史里面第一条\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n    detectSearchResultClick() {\r\n        let urlArray = window.location.href.split(\"/\") ;        \r\n        let paramObj = ParamGenerator.queryString2Object(urlArray[5]) ;\r\n        if( paramObj.hasOwnProperty(\"sli\") || paramObj.hasOwnProperty(\"sst\") || paramObj.hasOwnProperty(\"sdi\") || paramObj.hasOwnProperty(\"sto\") || paramObj.hasOwnProperty(\"sid\")) {\r\n            let searchCache = window.localStorage[this.moduleType + \"SearchHistory\"] ;            \r\n            searchCache = searchCache ? JSON.parse(searchCache) : [] ;\r\n            if(searchCache.length) $(\".conning-tower dl dd span\").text(searchCache[0].estateDesc) ;\r\n        }       \r\n    }\r\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    整个组件定义结束\r\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n }\r\n"]}