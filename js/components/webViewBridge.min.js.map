{"version":3,"sources":["components/webViewBridge.min.js"],"names":["define","webViewJavascriptBridge","init","params","connectWebViewJavascriptBridge","bridge","handlers","isArray","i","length","tmpHandler","registerHandler","name","data","responseCallback","errorResponseCallback","exception","alert","message","exec","service","action","Error","requestData","undefined","WebViewJavascriptBridge","console","log","o","Object","prototype","toString","call","callback","window","document","addEventListener"],"mappings":"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","file":"webViewBridge.min.js","sourcesContent":["/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n 1. 项目名称：App内嵌h5\n 2. 页面名称：common->webViewJavascriptBridge.js(js与native 交互的js)\n 3. 作者：yuxiaochen@lifang.com\n -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\ndefine(function() {\n\n    /*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     定义native 交互交互对象\n     --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    var webViewJavascriptBridge = {\n        init: function(params) {\n            connectWebViewJavascriptBridge(function(bridge) {\n                try {\n                    //定义默认的native message hanlder\n\n                    //由于ios没有注册初始message handler 所以此处无法init \n                    // bridge.init(function(message, responseCallback, errorResponseCallback) {\n                    //     console.log(\"native data: \" + message);\n                    // });\n\n                    //定义 js handlers\n                    if (params.handlers) {\n                        if (isArray(params.handlers)) {\n                            for (var i = 0; i < params.handlers.length; i++) {\n                                var tmpHandler = params.handlers[i];\n                                bridge.registerHandler(tmpHandler.name, function(data, responseCallback, errorResponseCallback) {\n                                    if (tmpHandler.responseCallback) {\n                                        tmpHandler.responseCallback(data);\n                                    }\n\n                                    if (tmpHandler.errorResponseCallback) {\n                                        tmpHandler.errorResponseCallback(data);\n                                    }\n                                });\n                            }\n                        } else {\n                            bridge.registerHandler(params.handlers.name, function(data, responseCallback, errorResponseCallback) {\n                                if (params.handlers.responseCallback) {\n                                    params.handlers.responseCallback(data);\n                                }\n\n                                if (params.handlers.errorResponseCallback) {\n                                    params.handlers.errorResponseCallback(data);\n                                }\n                            });\n                        }\n                    }\n                } catch (exception) {\n                    alert(exception.message);\n                }\n            });\n\n        },\n        exec: function(params) {\n            try {\n\n                //判断必传参数定义是否合法          \n                if (!params.service || !params.action) {\n                    throw new Error(\"service or action invalid.\");\n\n                }\n\n                //定义参数\n                var service = params.service;\n                var action = params.action;\n                var requestData = params.data == undefined ? {} : params.data;\n                var responseCallback = params.responseCallback;\n                var errorResponseCallback = params.errorResponseCallback;\n\n                //调用native 方法\n                WebViewJavascriptBridge.exec(service, action, requestData, responseCallback, errorResponseCallback);\n\n\n            } catch (exception) {\n\n                if (typeof console != 'undefined') {\n\n                    console.log(\"WebViewJavascriptBridge: WARNING: javascript handler threw.\", exception.message, exception);\n                     throw exception;\n\n                }\n\n            }\n\n        },\n        connectWebViewJavascriptBridge: connectWebViewJavascriptBridge\n    };\n\n    /*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     判断是否是一个数组，使用下面的方法也是完全可行的\n     --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    function isArray(o) {\n        return Object.prototype.toString.call(o) === '[object Array]';\n        //return (typeof o == 'object' && o.constructor == Array) ;\n    }\n\n    /*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     创建connectWebViewJavascriptBridge 方法\n     --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n    function connectWebViewJavascriptBridge(callback) {\n        if (window.WebViewJavascriptBridge) {\n            callback(WebViewJavascriptBridge)\n        } else {\n            document.addEventListener(\n                'WebViewJavascriptBridgeReady',\n                function() {\n                    callback(WebViewJavascriptBridge)\n                },\n                false\n            );\n        }\n    }\n\n    return webViewJavascriptBridge;\n})\n"]}