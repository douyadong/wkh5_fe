"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：悟空找房h5
 2. 页面名称：components -> conning-tower(列表页司令塔，包括返回、搜索、汉堡菜单等信息)
 3. 作者：zhaohuagang@lifang.com
 4. 备注：
    这里面定位需要用到的几个缓存key及缓存类型：
    1). selectedCityId , selectedCityName , selectedCityPinyin，表示用户选择的城市  使用cookie，司令塔上搜索框旁边的位置显示的就是这个缓存，最终列表数据呈现
        也是用这套值
    2). locationCityId , locationCityName , locationCityPinyin , locationLongitude , locationLatitude，表示定位到的城市及经纬度  使用localStorage，因为会话
        结束后这个定位信息用处就不大了
    3). deniedPermission : 用户是否阻止过定位授权
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
var ConningTower = function () {
    function ConningTower(_ref) {
        var moduleType = _ref.moduleType,
            _ref$cityClick = _ref.cityClick,
            cityClick = _ref$cityClick === undefined ? $.noop : _ref$cityClick;

        _classCallCheck(this, ConningTower);

        this.moduleType = moduleType; //模块类型，可以是：xf | esf | rent
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        几个api地址的配置
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.searchApiUrl = "/api/common/acWord"; //搜索用的接口地址
        this.businessCityApiUrl = "/api/common/businessCity"; //获取业务开通城市接口地址
        this.getCityLolaApiUrl = "/api/common/getCityByLatLon"; //通过经纬度反查城市接口地址         
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        几个接口方法 
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.cityClick = cityClick; //城市选择器中城市点击接口事件
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.setCityCache();
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        事件绑定
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.addEventListener();
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        发起定位
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.location();
    }
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    组件相关dom节点事件绑定
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


    _createClass(ConningTower, [{
        key: "addEventListener",
        value: function addEventListener() {
            var _this = this;

            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            点击城市选择入口弹出城市选择器并根据是否有了数据来决定是否需要请求接口渲染
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".conning-tower dl dt").click(function () {
                $(".city-selector").slideDown(200);
                if ($(".city-selector .tabs-frame").children().length) return;
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                请求业务城市数据并绘制，绘制完后绑定事件
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                _this.request({
                    apiUrl: _this.businessCityApiUrl,
                    requestData: {},
                    success: function success(result) {
                        var cities = _this.filterBusinessCity(result.data); //取出所有满足条件的城市清单                    
                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                        绘制tabs-handle
                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                        var $ul = "<ul class=\"tabs-handle\"><li class=\"on\" data-sign=\"domestic\">国内</li><li data-sign=\"overseas\">国际</li></ul>";
                        if (!Object.keys(cities.domestic).length || !Object.keys(cities.overseas).length) {
                            if (Object.keys(cities.domestic).length) $ul = "<ul class=\"tabs-handle\" style=\"display : none\"><li class=\"on\" data-sign=\"domestic\">国内</li><li data-sign=\"overseas\">国际</li></ul>";else $ul = "<ul class=\"tabs-handle\" style=\"display : none\"><li data-sign=\"domestic\">国内</li><li class=\"on\" data-sign=\"overseas\">国际</li></ul>";
                        }
                        $(".city-selector .caption").append($ul);
                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                        绘制tabs-frame
                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                        var $domesticFrame = $(document.createElement("DIV")).addClass("tabs-frame domestic");
                        if (Object.keys(cities.domestic).length) {
                            for (var key in cities.domestic) {
                                $domesticFrame.append("<span>" + key + "</span>");
                                cities.domestic[key].forEach(function (city) {
                                    $domesticFrame.append("<a data-cityid=\"" + city.cityId + "\" data-pinyin=\"" + city.pinyin + "\" data-cityType=\"" + city.cityType + "\">" + city.cityName + "</a>");
                                });
                            }
                        }
                        $(".city-selector").append($domesticFrame);

                        var $overseasFrame = $(document.createElement("DIV")).addClass("tabs-frame overseas");
                        if (Object.keys(cities.overseas).length) {
                            for (var _key in cities.overseas) {
                                $overseasFrame.append("<span>" + _key + "</span>");
                                cities.overseas[_key].forEach(function (city) {
                                    $overseasFrame.append("<a data-cityid=\"" + city.cityId + "\" data-pinyin=\"" + city.pinyin + "\" data-cityType=\"" + city.cityType + "\">" + city.cityName + "</a>");
                                });
                            }
                        }
                        $(".city-selector").append($overseasFrame);
                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                        最后给dom节点绑定事件
                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                        _this.citySelectorEventDelegate();
                    }
                });
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            点击汉堡菜单弹出子菜单
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".conning-tower .hamburg-menu").click(function () {
                $(document.body).css({ "overflow-y": "hidden" }); //滚动条隐藏
                $(".navigator-mask").fadeIn(100);
                $(".navigator-pop").animate({
                    right: 0
                }, 100);
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            点击子菜单遮罩关闭子菜单
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".navigator-mask").click(function () {
                $(document.body).css({ "overflow-y": "auto" }); //如果有滚动条就显示  
                $(".navigator-mask").fadeOut(100);
                $(".navigator-pop").animate({
                    right: "-200px"
                }, 100);
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            点击返回按钮回到假的搜索场景
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".conning-tower .back").click(function () {
                history.back();
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            点击假的搜索区域出现真的搜索
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".conning-tower dl dd").click(function () {
                $(".substitute-mask").show(50);
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            真搜索区域返回按钮事件监听
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".substitute-mask .search-substitute .back").click(function () {
                $(".substitute-mask").hide(50);
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            真搜索区域清除输入图标事件监听
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".substitute-mask .search-substitute .input-section .icon-close").click(function () {
                $(".substitute-mask .search-substitute .input-section input").val("");
                $(".substitute-mask .list").empty();
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            pop菜单中的下载APP菜单事件监听
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".navigator-pop .app-download").click(function () {
                nativeSchema.loadSchema({
                    schema: "external_call", // 通过NN打开某个链接
                    protocal: "wkzf", //schema头协议，实际情况填写
                    loadWaiting: "1500", //发起唤醒请求后，会等待loadWaiting时间，超时则跳转到failUrl，默认3000ms                
                    failUrl: "https://m.wkzf.com/download/transit?from=esfList", //唤起失败时的跳转链接，默认跳转到下载页
                    // apk信息,请根据实际情况填写
                    apkInfo: {
                        PKG: "com.wukong.ua",
                        CATEGORY: "android.intent.category.DEFAULT",
                        ACTION: "android.intent.action.VIEW"
                    }
                });
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            真搜索区域输入监听
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            var $input = $(".substitute-mask .search-substitute .input-section input");
            $input.keyup(function () {
                _this.request({
                    apiUrl: _this.searchApiUrl,
                    requestData: { "keyword": $.trim($input.val()) },
                    success: function success() {
                        //对获取到的搜索结果列表进行绘制
                    }
                });
            });
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        本组件ajax请求封装
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "request",
        value: function request(_ref2) {
            var apiUrl = _ref2.apiUrl,
                requestData = _ref2.requestData,
                _ref2$success = _ref2.success,
                _success = _ref2$success === undefined ? $.noop : _ref2$success;

            try {
                $.ajax({
                    url: apiUrl,
                    data: requestData,
                    dataType: "json",
                    error: function error(e) {
                        $.tips("调用数据接口：" + apiUrl + " 失败！请测试您的数据接口！", 3);
                    },
                    success: function success(data) {
                        if (data.status.toString() === "1") {
                            //获取到接口数据，进行处理
                            _success(data);
                        } else $.tips(data.message, 3);
                    }
                });
            } catch (e) {
                $.tips("错误名称：" + e.name + "\n错误描述：" + e.message, 3);
            }
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        等渲染好城市选择器后进行的事件委托
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "citySelectorEventDelegate",
        value: function citySelectorEventDelegate() {
            var self = this;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         
            根据tabs-handle的显示状态决定tabs-frame的margin-top值
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            var frameMarginTop = $(".city-selector .caption .tabs-handle").is(":visible") ? "72px" : "28px";
            $(".city-selector .tabs-frame").css({ "margin-top": frameMarginTop });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         
            城市选择器中根据tabs-handle里面哪个句柄被选中来确定哪个tabs-frame显示
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".city-selector .tabs-frame." + $(".city-selector .caption .tabs-handle li.on").eq(0).data("sign")).show();
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            城市选择器中tabs-handle的点击
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            var $tabsHandles = $(".city-selector .caption .tabs-handle li");
            $tabsHandles.click(function () {
                $tabsHandles.removeClass("on");
                $(this).addClass("on");
                $(".city-selector .tabs-frame").hide();
                $(".city-selector .tabs-frame." + $(this).data("sign")).show();
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            城市选择器中每个城市被点击后干什么
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".city-selector .tabs-frame a").click(function () {
                $(".conning-tower dl dt span").text($(this).text());
                $(".city-selector").slideUp(200);
                self.cityClick();
            });
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        对接口拿到的业务开通城市进行处理
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "filterBusinessCity",
        value: function filterBusinessCity(data) {
            var typeMapper = { "esf": 1, "rent": 2, "xf": 3 };
            var typeValue = typeMapper[this.moduleType];
            var result = { "domestic": {}, "overseas": {} };
            data && data.domesticCityList && data.domesticCityList.forEach(function (city) {
                var has = false;
                city.businessList && city.businessList.forEach(function (business) {
                    if (business.businessId === typeValue) has = true;
                });
                if (has) {
                    var shoupin = city.pinyin.charAt(0).toUpperCase();
                    if (!result.domestic.hasOwnProperty(shoupin)) result.domestic[shoupin] = [];
                    result.domestic[shoupin].push({ "cityId": city.cityId, "cityName": city.cityName, "pinyin": city.pinyin, "cityType": city.cityType });
                }
            });
            data && data.overseaCityList && data.overseaCityList.forEach(function (city) {
                var has = false;
                city.businessList && city.businessList.forEach(function (business) {
                    if (business.businessId === typeValue) has = true;
                });
                if (has) {
                    var shoupin = city.pinyin.charAt(0).toUpperCase();
                    result.overseas[shoupin].push({ "cityId": city.cityId, "cityName": city.cityName, "pinyin": city.pinyin, "cityType": city.cityType });
                }
            });
            return result;
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        发起定位
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "location",
        value: function location() {
            var _this2 = this;

            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            检查浏览器是否支持地理定位
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            if (!navigator.geolocation) {
                $.tips("您的浏览器不支持定位地理位置", 3);
                return;
            }
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            定义定位选项
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            var geoOpts = {
                enableHighAccuracy: false, //表示是否高精度可用，为Boolean类型，默认为false，如果开启，响应时间会变慢，同时，在手机设备上会用掉更多的流量，也就是money了。
                maximumAge: 0, //表示应用程序的缓存时间。单位毫秒，默认是0，意味着每次请求都是立即去获取一个全新的对象内容。
                timeout: 10 * 1000 //表示等待响应的最大时间，默认是0毫秒，表示无穷时间。
            };
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            开始发起定位
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            navigator.geolocation.getCurrentPosition(function (position) {
                var latitude = position.coords.latitude;
                var longitude = position.coords.longitude;
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                往cookie里面写经纬度
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                $.cookie("locationLatitude", latitude, { path: "/" });
                $.cookie("locationLongitude", longitude, { path: "/" });
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                根据经纬度反查城市信息
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                _this2.request({
                    apiUrl: _this2.getCityLolaApiUrl,
                    requestData: { "latitude": latitude, "longitude": longitude },
                    success: function success() {}
                });
            }, function (error) {
                switch (error.code) {
                    case error.PERMISSION_DENIED:
                        // 用户阻止了授权
                        _this2.locationFail();
                        break;

                    case error.POSITION_UNAVAILABLE:
                        //定位信息无效
                        _this2.locationTimeout();
                        break;

                    case error.TIMEOUT:
                        //定位超时
                        _this2.locationTimeout();
                        break;

                    case error.UNKNOWN_ERROR:
                        //其他不可预知的错误
                        _this2.locationTimeout();
                        break;
                }
            }, geoOpts);
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "setCityCache",
        value: function setCityCache() {
            $.cookie("selectedCityId", $("#selectedCityId").val(), { "path": "/" });
            $.cookie("selectedCityName", $("#selectedCityName").val(), { "path": "/" });
            $.cookie("selectedCityPinyin", $("#selectedCityPinyin").val(), { "path": "/" });
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        整个组件定义结束
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }]);

    return ConningTower;
}();
//# sourceMappingURL=conning-tower.min.js.map
