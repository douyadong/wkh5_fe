"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：悟空找房h5
 2. 页面名称：components -> conning-tower(列表页司令塔，包括返回、搜索、汉堡菜单等信息)
 3. 作者：zhaohuagang@lifang.com
 4. 备注：
    这里面定位需要用到的几个缓存key及缓存类型：
    1). this.moduleType +"VisitedCityId" , this.moduleType +"VisitedCityName" , this.moduleType +"VisitedCityPinyin"，this.moduleType +"VisitedCityChina"，表示用户最后一次访问的当前moduleType的城市  使用cookie
    2). this.moduleType +"SelectedCityId" , this.moduleType +"SelectedCityName" , this.moduleType +"SelectedCityPinyin"，this.moduleType +"SelectedCityChina"，表示用户选择的城市  使用cookie
    2). locationCityId , locationCityName , locationCityPinyin , locationCityChina  , locationLongitude , locationLatitude，表示定位到的城市及经纬度  使用sessionStorage，因为会话
        结束后这个定位信息用处就不大了    
5. 待完成任务：
    1). setSearchCache方法写好了，判重还没有验证，在用户点击搜索结果项或者搜索表单提交的时候需要执行，只不过搜索表单提交相当于选择了搜索出来的第一条记录
    2). 搜索框获得焦点或者keyup但是keywords为空的时候需要将搜索历史绘制出来
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
var ConningTower = function () {
    function ConningTower(_ref) {
        var bigDataUtil = _ref.bigDataUtil,
            moduleType = _ref.moduleType,
            _ref$cityClick = _ref.cityClick,
            cityClick = _ref$cityClick === undefined ? $.noop : _ref$cityClick,
            _ref$searchResultItem = _ref.searchResultItemClick,
            searchResultItemClick = _ref$searchResultItem === undefined ? $.noop : _ref$searchResultItem;

        _classCallCheck(this, ConningTower);

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        大数据埋点的工具引进来
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.bigDataUtil = bigDataUtil;
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        模块类型，可以是：xf | esf | rent
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.moduleType = moduleType;
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        几个api地址的配置
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.apiUrl = {
            "search": "/api/common/acWord", //搜索用的接口地址
            "businessCity": "/api/common/businessCity", //获取业务开通城市接口地址
            "getCityByLola": "/api/common/getCityByLatLon" //通过经纬度反查城市接口地址
        };
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        几个接口方法 
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.cityClick = cityClick; //城市选择器中城市点击接口事件
        this.searchResultItemClick = searchResultItemClick; //搜索结果选项点击
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        事件绑定
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.addEventListener();
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        发起定位
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.location();
    }
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    组件相关dom节点事件绑定
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


    _createClass(ConningTower, [{
        key: "addEventListener",
        value: function addEventListener() {
            var _this = this;

            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            点击城市选择入口弹出城市选择器并根据是否有了数据来决定是否需要请求接口渲染
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".conning-tower dl dt").click(function () {
                _this.popCitySelector();
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            未开通及招商场景中切换城市链接点击
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".notopen-investment .change").click(function () {
                $(".notopen-investment").addClass("hidden").removeClass("visible");
                _this.popCitySelector();
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            点击汉堡菜单弹出子菜单
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".conning-tower .hamburg-menu").click(function () {
                $(document.body).css({ "overflow-y": "hidden" }); //滚动条隐藏
                $(".navigator-mask").fadeIn(100);
                $(".navigator-pop").animate({
                    right: 0
                }, 100);
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            点击子菜单遮罩关闭子菜单
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".navigator-mask").click(function () {
                $(document.body).css({ "overflow-y": "auto" }); //如果有滚动条就显示  
                $(".navigator-mask").fadeOut(100);
                $(".navigator-pop").animate({
                    right: "-200px"
                }, 100);
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            点击返回按钮回到假的搜索场景
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".conning-tower .back").click(function () {
                history.back();
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            点击假的搜索区域出现真的搜索并将真的搜索框 focus
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".conning-tower dl dd").click(function () {
                $(".substitute-mask").show(50);
                $(".substitute-mask .input-section input").trigger("focus");
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            真搜索区域返回按钮事件监听
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".substitute-mask .search-substitute .back").click(function () {
                $(".substitute-mask").hide(50);
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            真搜索区域清除输入图标事件监听
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".substitute-mask .search-substitute .input-section .icon-close").click(function () {
                $(".substitute-mask .search-substitute .input-section input").val("").trigger("focus");
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            清除搜索历史按钮事件监听       
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".substitute-mask .list-container .clear-history").click(function () {
                $(".substitute-mask .list-container .list").empty();
                $(".substitute-mask .list-container div").hide(100);
                delete window.localStorage[_this.moduleType + "SearchHistory"];
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            pop菜单中的下载APP菜单事件监听
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".navigator-pop .app-download").click(function () {
                nativeSchema.loadSchema({
                    schema: "external_call", // 通过NN打开某个链接
                    protocal: "wkzf", //schema头协议，实际情况填写
                    loadWaiting: "1500", //发起唤醒请求后，会等待loadWaiting时间，超时则跳转到failUrl，默认3000ms                
                    failUrl: "https://m.wkzf.com/download/transit?from=esfList", //唤起失败时的跳转链接，默认跳转到下载页
                    // apk信息,请根据实际情况填写
                    apkInfo: {
                        PKG: "com.wukong.ua",
                        CATEGORY: "android.intent.category.DEFAULT",
                        ACTION: "android.intent.action.VIEW"
                    }
                });
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            真搜索区域输入监听以及focus监听，如果没有输入值就应该出搜索历史
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            var $input = $(".substitute-mask .search-substitute .input-section input");
            $input.on("keyup focus", function () {
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                取得关键词内容
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                var currentValue = $input.val() ? $.trim($input.val()) : "";
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                如果关键词没有改变什么也不做
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                if (currentValue && currentValue == $input.attr("data-last")) return;else {
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    先清除结果
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    $(".substitute-mask .list-container .list").empty();
                    $(".substitute-mask .list-container div").hide();
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    如果关键词为空就要绘制搜索历史并直接返回
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    if (!currentValue) {
                        var searchHistory = window.localStorage[_this.moduleType + "SearchHistory"];
                        searchHistory = searchHistory ? JSON.parse(searchHistory) : [];
                        searchHistory && _this.renderSearchResult({ items: searchHistory, history: true });
                        $input.attr("data-last", currentValue);
                        return;
                    }
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    否则就发起请求
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    var paramsMapper = { "xf": "newhouselist", "esf": "oldhouselist", "rent": "renthouselist" };
                    _this.request({
                        apiUrl: _this.apiUrl.search,
                        requestData: { "key": currentValue, "pageName": paramsMapper[_this.moduleType], "cityId": parseInt($("#visitedCityId").val(), 10) },
                        success: function success(result) {
                            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            如果搜索无结果绘制相应节点
                            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                            if (result.data["secondHouseTotal"] === 0) {
                                $(".substitute-mask .list-container .list").empty().append("<li class=\"no-data\"><dl><dt>未找到该地址，请重新搜索</dt><dd>您可以更换其他关键字再试一次</dd></dl></li>");
                            }
                            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            有结果的绘制
                            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                            else _this.renderSearchResult({ "items": result.data["secondHouseList"], "history": false });
                        }
                    });
                    $input.attr("data-last", currentValue); //最后将当前值记录到最后一次搜索关键词里面
                }
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            搜索表单提交相当于点击了第一个搜索结果项并阻止默认表单提交行为
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".substitute-mask .search-substitute form").submit(function (event) {
                $(".substitute-mask .list-container .list li").eq(0).trigger("click");
                event.preventDefault();
            });
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        本组件ajax请求封装
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "request",
        value: function request(_ref2) {
            var apiUrl = _ref2.apiUrl,
                requestData = _ref2.requestData,
                _ref2$success = _ref2.success,
                _success = _ref2$success === undefined ? $.noop : _ref2$success;

            try {
                $.ajax({
                    url: apiUrl,
                    data: requestData,
                    dataType: "json",
                    error: function error(e) {
                        $.tips("调用数据接口：" + apiUrl + " 失败！请测试您的数据接口！", 3);
                    },
                    success: function success(data) {
                        if (data.status.toString() === "1") {
                            //获取到接口数据，进行处理
                            _success(data);
                        } else $.tips(data.message, 3);
                    }
                });
            } catch (e) {
                $.tips("错误名称：" + e.name + "\n错误描述：" + e.message, 3);
            }
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        等渲染好城市选择器后进行的事件委托
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "citySelectorEventDelegate",
        value: function citySelectorEventDelegate() {
            var _this2 = this;

            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         
            根据tabs-handle的显示状态决定tabs-frame的margin-top值
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            var frameMarginTop = $(".city-selector .caption .tabs-handle").is(":visible") ? "72px" : "28px";
            $(".city-selector .tabs-frame").css({ "margin-top": frameMarginTop });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------         
            城市选择器中根据tabs-handle里面哪个句柄被选中来确定哪个tabs-frame显示
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".city-selector .tabs-frame." + $(".city-selector .caption .tabs-handle li.on").eq(0).data("sign")).show();
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            城市选择器中tabs-handle的点击
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            var $tabsHandles = $(".city-selector .caption .tabs-handle li");
            $tabsHandles.click(function () {
                $tabsHandles.removeClass("on");
                $(this).addClass("on");
                $(".city-selector .tabs-frame").hide();
                $(".city-selector .tabs-frame." + $(this).data("sign")).show();
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            城市选择器中每个城市被点击后干什么?
            1. 设置selected系列 cookie
            2. 接着执行接口方法
            3. 如果是当前城市就什么都不做，否则就然后直接跳转新城市
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".city-selector .tabs-frame a").click(function (event) {
                var $handler = $(event.currentTarget);
                $.cookie(_this2.moduleType + "SelectedCityId", $handler.data("cityid"), { "path": "/" });
                $.cookie(_this2.moduleType + "SelectedCityName", $handler.text(), { "path": "/" });
                $.cookie(_this2.moduleType + "SelectedCityPinyin", $handler.data("pinyin"), { "path": "/" });
                $.cookie(_this2.moduleType + "SelectedCityChina", $handler.data("china"), { "path": "/" });
                _this2.cityClick();
                $(".city-selector").hide();
                if (parseInt($handler.data("cityid"), 10) !== parseInt($("#visitedCityId").val(), 10)) window.location.href = _this2.combineUrl($handler.data("pinyin"));
            });
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        对接口拿到的业务开通城市进行处理
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "filterBusinessCity",
        value: function filterBusinessCity(data) {
            var typeMapper = { "esf": 1, "rent": 2, "xf": 3 };
            var typeValue = typeMapper[this.moduleType];
            var result = { "domestic": {}, "overseas": {} };
            data && data.domesticCityList && data.domesticCityList.forEach(function (city) {
                var has = false;
                city.businessList && city.businessList.forEach(function (business) {
                    if (business.businessId === typeValue) has = true;
                });
                if (has) {
                    var shoupin = city.pinyin.charAt(0).toUpperCase();
                    if (!result.domestic.hasOwnProperty(shoupin)) result.domestic[shoupin] = [];
                    result.domestic[shoupin].push({ "cityId": city.cityId, "cityName": city.cityName, "pinyin": city.pinyin, "cityType": city.cityType });
                }
            });
            data && data.overseaCityList && data.overseaCityList.forEach(function (city) {
                var has = false;
                city.businessList && city.businessList.forEach(function (business) {
                    if (business.businessId === typeValue) has = true;
                });
                if (has) {
                    var shoupin = city.pinyin.charAt(0).toUpperCase();
                    if (!result.overseas.hasOwnProperty(shoupin)) result.overseas[shoupin] = [];
                    result.overseas[shoupin].push({ "cityId": city.cityId, "cityName": city.cityName, "pinyin": city.pinyin, "cityType": city.cityType });
                }
            });
            return result;
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        发起定位
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "location",
        value: function location() {
            var _this3 = this;

            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            首先要去判断是否有过浏览当前moduleType的页面，如果
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            if ($.cookie(this.moduleType + "VisitedCityId")) {
                if (parseInt($.cookie(this.moduleType + "VisitedCityId"), 10) !== parseInt($("#visitedCityId").val(), 10)) {
                    //如果当前城市不是用户选择的城市才会要跳转
                    if (parseInt($.cookie(this.moduleType + "SelectedCityId"), 10) !== parseInt($("#visitedCityId").val(), 10)) window.location.href = this.combineUrl($.cookie(this.moduleType + "VisitedCityPinyin"));
                } else {
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    this.setVisitedCityCache();
                }
                return; //只要是浏览过当页，都不会再走定位
            }
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            检查浏览器是否支持地理定位
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            if (!navigator.geolocation) {
                $.tips("您的浏览器不支持定位地理位置", 3);
                return;
            }
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            定义定位选项
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            var geoOpts = {
                enableHighAccuracy: false, //表示是否高精度可用，为Boolean类型，默认为false，如果开启，响应时间会变慢，同时，在手机设备上会用掉更多的流量，也就是money了。
                maximumAge: 0, //表示应用程序的缓存时间。单位毫秒，默认是0，意味着每次请求都是立即去获取一个全新的对象内容。
                timeout: 10 * 1000 //表示等待响应的最大时间，默认是0毫秒，表示无穷时间。
            };
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            开始发起定位
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            navigator.geolocation.getCurrentPosition(function (position) {
                var latitude = position.coords.latitude;
                var longitude = position.coords.longitude;
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                往cookie里面写经纬度
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                $.cookie("locationLatitude", latitude, { path: "/", expires: 365 * 24 * 60 });
                $.cookie("locationLongitude", longitude, { path: "/", expires: 365 * 24 * 60 });
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                根据经纬度反查城市信息
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                _this3.request({
                    apiUrl: _this3.apiUrl.getCityByLola,
                    requestData: { "latitude": latitude, "longitude": longitude },
                    success: function success(result) {
                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                        写入几个缓存
                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                        $.cookie("locationCityId", result.data.cityId, { path: "/", expires: 365 * 24 * 60 });
                        $.cookie("locationCityName", result.data.cityName, { path: "/", expires: 365 * 24 * 60 });
                        $.cookie("locationCityPinyin", result.data.cityPinyin, { path: "/", expires: 365 * 24 * 60 });
                        $.cookie("locationCityChina", result.data.china, { path: "/", expires: 365 * 24 * 60 });
                        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                        直接跳转到对应城市结束
                        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                        if (parseInt(result.data.cityId, 10) !== parseInt($("#visitedCityId").val(), 10)) window.location.href = _this3.combineUrl(result.data.cityPinyin);else {
                            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中
                            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                            _this3.setVisitedCityCache();
                        }
                    }
                });
            }, function (error) {
                switch (error.code) {
                    case error.PERMISSION_DENIED:
                        // 用户阻止了授权
                        _this3.popCitySelector();
                        break;

                    case error.POSITION_UNAVAILABLE:
                        //定位信息无效
                        _this3.orientateTimeout();
                        break;

                    case error.TIMEOUT:
                        //定位超时
                        _this3.orientateTimeout();
                        break;

                    case error.UNKNOWN_ERROR:
                        //其他不可预知的错误
                        _this3.orientateTimeout();
                        break;
                }
            }, geoOpts);
        }

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        弹出城市选择器
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "popCitySelector",
        value: function popCitySelector() {
            var _this4 = this;

            $(".city-selector").slideDown(200);
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            埋点
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            this.bigDataUtil.bigData({ "pageName": "1005", "type": 1 });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            如果没有城市记录说明是第一次绘制，否则就不需要做什么
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            if ($(".city-selector .tabs-frame").children().length) return;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            请求业务城市数据并绘制，绘制完后绑定事件
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            this.request({
                apiUrl: this.apiUrl.businessCity,
                requestData: {},
                success: function success(result) {
                    var cities = _this4.filterBusinessCity(result.data); //取出所有满足条件的城市清单                    
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    绘制tabs-handle
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    var $ul = "<ul class=\"tabs-handle\"><li class=\"on\" data-sign=\"domestic\">国内</li><li data-sign=\"overseas\">国际</li></ul>";
                    if (!Object.keys(cities.domestic).length || !Object.keys(cities.overseas).length) {
                        if (Object.keys(cities.domestic).length) $ul = "<ul class=\"tabs-handle\" style=\"display : none\"><li class=\"on\" data-sign=\"domestic\">国内</li><li data-sign=\"overseas\">国际</li></ul>";else $ul = "<ul class=\"tabs-handle\" style=\"display : none\"><li data-sign=\"domestic\">国内</li><li class=\"on\" data-sign=\"overseas\">国际</li></ul>";
                    }
                    $(".city-selector .caption").append($ul);
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    绘制tabs-frame
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    var $domesticFrame = $(document.createElement("DIV")).addClass("tabs-frame domestic");
                    if ($.cookie("locationCityName") && $.cookie("locationCityChina")) $domesticFrame.append("<span>定位城市</span><a data-cityid=\"" + $.cookie("locationCityId") + "\" data-pinyin=\"" + $.cookie("locationCityPinyin") + "\" data-china=\"" + $.cookie("locationCityChina") + "\">" + $.cookie("locationCityName") + "</a>");
                    if (Object.keys(cities.domestic).length) {
                        for (var key in cities.domestic) {
                            $domesticFrame.append("<span>" + key + "</span>");
                            cities.domestic[key].forEach(function (city) {
                                $domesticFrame.append("<a data-cityid=\"" + city.cityId + "\" data-pinyin=\"" + city.pinyin + "\" data-china=\"" + city.cityType + "\">" + city.cityName + "</a>");
                            });
                        }
                    }
                    $(".city-selector").append($domesticFrame);

                    var $overseasFrame = $(document.createElement("DIV")).addClass("tabs-frame overseas");
                    if ($.cookie("locationCityName") && !$.cookie("locationCityChina")) $domesticFrame.append("<span>定位城市</span><a data-cityid=\"" + $.cookie("locationCityId") + "\" data-pinyin=\"" + $.cookie("locationCityPinyin") + "\"  data-china=\"" + $.cookie("locationCityChina") + "\">" + $.cookie("locationCityName") + "</a>");
                    if (Object.keys(cities.overseas).length) {
                        for (var _key in cities.overseas) {
                            $overseasFrame.append("<span>" + _key + "</span>");
                            cities.overseas[_key].forEach(function (city) {
                                $overseasFrame.append("<a data-cityid=\"" + city.cityId + "\" data-pinyin=\"" + city.pinyin + "\" data-china=\"" + city.cityType + "\">" + city.cityName + "</a>");
                            });
                        }
                    }
                    $(".city-selector").append($overseasFrame);
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    最后给dom节点绑定事件
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    _this4.citySelectorEventDelegate();
                }
            });
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        定位信息无效，定位超时，其他不可预知的错误情况下的处理
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "orientateTimeout",
        value: function orientateTimeout() {
            var _this5 = this;

            $.modal({
                "id": "orientateTimeoutDialog",
                "title": "",
                "content": "定位失败<br>请手动选择您的城市",
                "buttons": [{ "text": "去选择", "className": "goto-select-city", "clickCallback": function clickCallback() {
                        $.modal.close("orientateTimeoutDialog");
                        _this5.popCitySelector();
                    }
                }]
            });
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        为了保证cookie的统一写入口，页面同步渲染的时候将城市信息放到页面隐藏域中，然后由FE来写到 cookie中
        这个cookie的作用是为了满足prd里面要求的：有上次浏览城市信息就不要定位了
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "setVisitedCityCache",
        value: function setVisitedCityCache() {
            $.cookie(this.moduleType + "VisitedCityId", $("#visitedCityId").val(), { "path": "/", expires: 365 * 24 * 60 });
            $.cookie(this.moduleType + "VisitedCityName", $("#visitedCityName").val(), { "path": "/", expires: 365 * 24 * 60 });
            $.cookie(this.moduleType + "VisitedCityPinyin", $("#visitedCityPinyin").val(), { "path": "/", expires: 365 * 24 * 60 });
            $.cookie(this.moduleType + "VisitedCityChina", $("#visitedCityChina").val(), { "path": "/", expires: 365 * 24 * 60 });
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        通过城市拼音和模块类型组织列表页面跳转地址
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "combineUrl",
        value: function combineUrl(cityPinyin) {
            var urlArray = window.location.href.split("/");
            urlArray[3] = cityPinyin;
            urlArray = urlArray.slice(0, 5);
            return urlArray.join("/");
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        绘制搜索结果或者历史，history用来标识是否搜索历史
        如果是搜索历史的渲染，每条历史应该是已经有了埋点参数了
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "renderSearchResult",
        value: function renderSearchResult(_ref3) {
            var _this6 = this;

            var items = _ref3.items,
                _ref3$history = _ref3.history,
                history = _ref3$history === undefined ? false : _ref3$history;

            items && items.forEach(function (source) {
                var $li = $(document.createElement("LI"));
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                埋点参数
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                var eventNameMapper = history ? { "xf": "1050010", "esf": "1068013", "rent": "" } : { "xf": "1050011", "esf": "1068014", "rent": "" };
                var eventParam = history ? { "search_history": source.estateDesc } : { "choice_content": source.estateDesc };
                if (eventNameMapper[_this6.moduleType]) {
                    $li.attr("data-bigdata", encodeURIComponent(JSON.stringify({ "eventName": eventNameMapper[_this6.moduleType], "eventParam": eventParam })));
                }
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                其他信息全绑到节点上data-detail上
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                $li.attr("data-detail", encodeURIComponent(JSON.stringify(source)));
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                绘制单条搜索结果
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                $li.append("<dl><dt>" + source.estateDesc.replace(source.markname, "<span>" + source.markname + "</span>") + "</dt><dd>" + source.address.replace(source.markname, "<span>" + source.markname + "</span>") + "</dd></dl>");
                $(".substitute-mask .list-container .list").append($li);
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            如果是渲染搜索历史，就要加上显示历史的按钮以及历史记录title        
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            if (items && items.length && history) $(".substitute-mask .list-container div").show(100);
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            最后进行事件绑定
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".substitute-mask .list li").off().click(function (event) {
                var $item = $(event.currentTarget);
                if ($item.hasClass("no-data")) return;
                _this6.setSearchCache(JSON.parse(decodeURIComponent($item.attr("data-detail"))));
                _this6.searchResultItemClick(JSON.parse(decodeURIComponent($item.attr("data-detail"))));
            });
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        将指定的对象数据记录到搜索localStorage中，最多记录5条
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }, {
        key: "setSearchCache",
        value: function setSearchCache(item) {
            var searchCache = window.localStorage[this.moduleType + "SearchHistory"];
            searchCache = searchCache ? JSON.parse(searchCache) : [];
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            取得和当前项目部重复的前4条记录
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            var noRepeatItems = [];
            $.each(searchCache, function (index, cache) {
                if (cache.value != item.value || cache.type != item.type) noRepeatItems.push(cache);
                if (noRepeatItems.length >= 4) return false;
            });
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            再在前面追加指定的哪条
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            noRepeatItems.unshift(item);
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            最后重新设置到localStorage中
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            window.localStorage[this.moduleType + "SearchHistory"] = JSON.stringify(noRepeatItems);
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        整个组件定义结束
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    }]);

    return ConningTower;
}();
//# sourceMappingURL=conning-tower.min.js.map
