{"version":3,"sources":["community/detail.min.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","DetailController","_Controller","this","_this","getPrototypeOf","$","on","window","history","go","require","Album","PreviewImage","that","encryptsubestateid","attr","request","apiUrl","community","chart","subEstateId","successCallback","data","status","dataRes","echartData","recombineM","echartFun","sortArray","seriesData","sort","a","b","parseFloat","maxPrice","Math","ceil","myChart","echarts","init","document","getElementById","width","houseId","subestateid","echartBigData","eventName","eventParam","house_id","estate_id","type","option","tooltip","trigger","triggerOn","position","backgroundColor","padding","textStyle","color","fontSize","formatter","params","ticket","callback","paramsValue","common","bigData","grid","bottom","left","right","containLabel","xAxis","monthList","splitLine","show","axisTick","boundaryGap","axisLine","lineStyle","axisLabel","interval","rotate","fontFamily","yAxis","inside","index","min","max","splitNumber","series","name","normal","itemStyle","emphasis","borderColor","borderWidth","connectNulls","setOption","forEach","item","month","date","split","indexOf","push","charAt","unitPrice","Controller","ready"],"mappings":"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","file":"detail.min.js","sourcesContent":["/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n 1. 项目名称：悟空找房h5\n 2. 页面名称：subestate/detail(小区-详情)\n 3. 作者：tangxuyang@lifang.com\n -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n class DetailController extends Controller {\n    constructor() {\n        super() ;             \n        let self = this ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        页面顶部的返回按钮\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        $('.icon-back').on('click',function(){\n            window.history.go(-1) ;\n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        相册集图片预览功能\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        require(['../components/album.min','../components/preview-image.min'],function(Album, PreviewImage){\n            PreviewImage('.subestate-comments');\n        }) ;\n        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n        请求接口 获取折线图参数\n        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n        let that = this;\n        // 获取小区加密Id\n        let  encryptsubestateid = $('#estateName').attr('data-encryptsubestateid');\n        this.request(this.apiUrl.community.chart,{subEstateId:encryptsubestateid},{successCallback(data){\n                if (data.status == 1){\n                    let dataRes = data;\n                    let echartData =  that.recombineM(dataRes.data);\n                    that.echartFun(echartData) ;\n                }\n            }});\n    };\n\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     折线图函数异步操作\n     -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n     echartFun(echartData){\n         let sortArray = echartData.seriesData.sort(function(a, b) {\n             return parseFloat(a) - parseFloat(b);\n         });\n         let maxPrice = Math.ceil((sortArray[sortArray.length - 1] / 10000) + 1) * 10000;\n         let myChart = echarts.init(document.getElementById('main'),{ width: '88%' });\n         let that = this;\n         // 给折线图dome增加埋点\n         let houseId =  $('#estateName').attr('data-houseid');\n         let subestateid =  $('#estateName').attr('data-subestateid') ;\n         let echartBigData = {\n             \"eventName\": \"1067014\",\n             \"eventParam\": { \"house_id\" : houseId , \"estate_id\": subestateid },\n             \"type\": 2\n         };\n         // 指定图表的配置项和数据\n         let option = {\n             tooltip: {      // 提示框\n                 trigger: 'item',\n                 triggerOn: 'click',\n                 position: 'top',\n                 backgroundColor: '#92A7C3',\n                 padding: 4,\n                 textStyle: {\n                     color: '#fff',\n                     fontSize: '12'\n                 },\n                 formatter:function (params, ticket, callback) {\n                     let paramsValue =  params.value + \"元\";\n                     that.request(that.apiUrl.common.bigData , echartBigData ,function () {\n\n                     });\n                     return paramsValue;\n                 }\n             },\n             grid: {\n                 bottom: 20,\n                 left: '3%',\n                 right: '10%',\n                 containLabel: true,\n             },\n             xAxis: {\n                 data: echartData.monthList ,  // X坐标数据\n                 splitLine: {show: false}, // 控制网格线是否显示\n                 axisTick: {show: false},  // 去除x轴上的刻度线\n                 position: 'bottom',\n                 type: 'category',\n                 boundaryGap: false,\n                 axisLine: {\n                     lineStyle: {\n                         color: '#979797', // x轴颜色\n                     }\n                 },\n                 axisLabel: {\n                     interval: 0,\n                     rotate: 0, //60度角倾斜显示\n                     textStyle: {\n                         color: '#999',\n                         fontSize: 12,\n                         fontFamily: '微软雅黑'\n                     }\n                 },\n             },\n             yAxis: {\n                 axisLine: {show: false},   // y轴是否显示\n                 splitLine: {\n                     show: true,  // 控制网格线是否显示\n                     lineStyle: {\n                         color: ['#979797'] // y刻度颜色\n                     }\n                 },\n                 axisTick: {show: false},// 去除y轴上的刻度线\n                 axisLabel:{\n                     inside: false,\n                     textStyle: {\n                         color: '#999',\n                     },\n                     formatter: function(value, index) {\n                         if (value == 0) {\n                             return \"\";\n                         } else {\n                             return value / 10000 + '万';\n                         }\n                     }\n                 },\n                 min:0,\n                 max:maxPrice,\n                 splitNumber: 6,\n                 interval: maxPrice / 4\n             },\n             series: [{\n                 name: '销量',\n                 type: 'line',\n                 lineStyle:{\n                     normal:{\n                         color:'#92A7C3', // 折线条颜色\n                     }\n\n                 },\n                 itemStyle:{\n                     normal:{\n                         color: \"#92A7C3\" //图标颜色\n                     },\n                     emphasis: { //重点，强调时候的样式，即当鼠标悬停或点击上去的时候的拐点的样式\n                         borderColor: '#92A7C3',\n                         borderWidth: 2,\n                         color: '#92A7C3'\n                     }\n                 },\n                 connectNulls:true,\n                 data: echartData.seriesData,\n             }],\n         };\n         myChart.setOption(option);\n     };\n     /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     处理得到的数据的函数  处理月份和数据\n     -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n     recombineM(data) {\n         let echartData = {\n             monthList: [],\n             seriesData: []\n         };\n         if (data) {\n             data.forEach((item) => {\n                 let month = item.date.split('-')[1];\n                 if (month.indexOf('0') == 0) {\n                     echartData.monthList.push(month.charAt(1)+'月')\n                 } else {\n                     echartData.monthList.push(month+'月')\n                 }\n                 echartData.seriesData.push(item.unitPrice)\n             });\n         }\n         return echartData ;\n     }\n}\n/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n类的初始化\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\n$(document).ready(function() {\n    new DetailController;\n}) ;\n"]}