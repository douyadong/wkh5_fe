"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：悟空找房数据决策
 2. 页面名称：seo/error(错误页面)
 3. 作者：zhaohuagang@lifang.com
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
var ErrorController = function (_Controller) {
    _inherits(ErrorController, _Controller);

    function ErrorController() {
        _classCallCheck(this, ErrorController);

        var _this = _possibleConstructorReturn(this, (ErrorController.__proto__ || Object.getPrototypeOf(ErrorController)).call(this));

        _this.remainer = 3; //还剩多少秒
        _this.countdown();
        return _this;
    }

    _createClass(ErrorController, [{
        key: "countdown",

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        倒计时并跳转
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        value: function countdown() {
            var _this2 = this;

            $(".container .countdown").text(this.remainer);
            window.setInterval(function () {
                if (_this2.remainer) _this2.remainer--;
                $(".container .countdown").text(_this2.remainer);
                if (_this2.remainer === 0) window.location.href = "/";
            }, 1000);
        }
    }]);

    return ErrorController;
}(Controller);
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
类的初始化
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


$(document).ready(function () {
    new ErrorController();
});
//# sourceMappingURL=error.min.js.map
