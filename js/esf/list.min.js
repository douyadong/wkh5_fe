"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：悟空找房h5
 2. 页面名称：esf/list(二手房列表)
 3. 作者：zhaohuagang@lifang.com
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
var ListController = function (_Controller) {
    _inherits(ListController, _Controller);

    function ListController() {
        _classCallCheck(this, ListController);

        var _this = _possibleConstructorReturn(this, (ListController.__proto__ || Object.getPrototypeOf(ListController)).call(this));
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        类的初始化，继承控制器基类
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


        var self = _this;
        _this.paramGenerator = new ParamGenerator();
        $('.total').slideUp(1000); // 隐藏查询总条数   

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        图片懒加载实例化
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $(".lazy").lazyload({
            "placeholder": _this.staticDomain + "/wkh5_fe/images/common/loading.jpg"
        });

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        加载相关页面组件逻辑
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        require(["../components/bigdata.min", "../components/filter.min", "../components/conning-tower.min"], function (BigData, Filter) {
            BigData.init(_this);
            self.filter = new Filter($.extend({}, Filter.ESFDEFAULT, {
                el: ".filter",
                cityId: $('#visitedCityId').val(),
                BigData: BigData,
                controller: self,
                near: true,
                filterChanged: function filterChanged(result) {
                    var param = self.paramGenerator.generateParamObj(result);
                    if (param.di || param.to || param.li || param.st) {
                        // do nothing
                    } else {
                        // 判断是否有sid,sli,sst,sdi,sto
                        var mapping = ["sdi", "sto", "sli", "sst", "sid"];
                        mapping.forEach(function (item) {
                            if (self.param[item]) {
                                param[item] = self.param[item];
                            }
                        });
                    }

                    self.param = param;
                    // 跳转
                    self.goto();
                }
            }));
            new ConningTower({
                "bigDataUtil": BigData,
                "moduleType": "esf",
                "cityClick": function cityClick() {},
                "searchResultItemClick": function searchResultItemClick(data) {
                    // 与filter中的区域地铁互斥
                    delete self.param.di; // 区域id
                    delete self.param.to; // 板块id
                    delete self.param.li; // 地铁线id
                    delete self.param.st; // 地铁站id
                    delete self.param.id; // 小区id
                    delete self.param.sdi; // 区域id
                    delete self.param.sto; // 板块id
                    delete self.param.sli; // 地铁线id
                    delete self.param.sst; // 地铁站id
                    delete self.param.sid; // 小区id
                    var mapping = ["", "sdi", "sto", "sli", "sst", "sid"];
                    var key = mapping[data.type];
                    if (key) {
                        self.param[key] = data.value;
                        self.goto();
                    }
                },
                "locationCallback": function locationCallback(data) {
                    self.filter.setLocationInfo(data);
                }
            });

            window.filter = self.filter;
            self.BigData = BigData;
            BigData.bigData({
                "pageName": "1068",
                "type": 1
            });
        });

        // 从url中解析参数
        //var pageUrl = location.href;
        var pageUrl = location.origin + location.pathname;
        pageUrl = pageUrl.replace('//', '');
        var tmpArr = pageUrl.split('/');
        self.param = {};
        if (tmpArr[3]) {
            // 有查询条件
            var obj = ParamGenerator.queryString2Object(tmpArr[3]);
            if (obj) {
                self.param = obj;
            }
        }

        _this.bindEvent();
        _this.pullload();
        _this.insertTrendAndOldHouse();
        return _this;
    }

    // 根据查询条件进行相应的跳转


    _createClass(ListController, [{
        key: "goto",
        value: function goto() {
            var cityPinyin = $('#visitedCityPinyin').val();
            var url = location.origin + "/" + cityPinyin + "/esf/" + ParamGenerator.object2QueryString(this.param);
            //var url = location.href;
            // if(url.indexOf('esf/')>0){            
            //     url += ParamGenerator.object2QueryString(this.param);                    
            //     //location.href = "./" + ParamGenerator.object2QueryString(this.param);                    
            // }else{
            //     //location.href += "/" + ParamGenerator.object2QueryString(this.param);  
            //     url += '/' + ParamGenerator.object2QueryString(this.param);                     
            // }         

            location.href = url + location.search;
        }
    }, {
        key: "bindEvent",
        value: function bindEvent() {
            var self = this;
            // 清空查询条件
            $('.no-data button').click(function () {
                // 跳转            
                location.href = "./";
            });
        }
    }, {
        key: "createHouseItems",
        value: function createHouseItems(data) {
            var str = "";
            var cityPinyin = $('#visitedCityPinyin').val();
            var channel = $('#channel').val();
            data.forEach(function (item) {
                str += '<a href="/' + cityPinyin + '/esf/' + item.encryptHouseId + '.html' + (channel ? '?channel=' + channel : '') + '" class="esf-item" data-bigdata="' + encodeURIComponent('{"eventName": "1068028", "eventParam": { "house_id": "' + item.houseId + '" }}') + '">\
            <dl>\
                <dt><img src="' + item.houseImgUrl + '?x-oss-process=image/resize,w_150" alt="' + item.estateName + '" class="lazy"></dt>\
                <dd class="title">' + item.houseTitle + '</dd>\
                <dd>' + item.houseChild + " " + item.areaStr + ' | ' + item.district + " " + item.town + ' </dd>\
                <dd class="tags">' + (!item.tagList ? "" : item.tagList.map(function (tag) {
                    switch (tag) {
                        case "降价":
                            return '<div class="promotion"><span>降价</span></div>';
                        case "新上":
                            return '<div class="new"><span>新上</span></div>';
                        case "满二":
                            return '<div class="over"><span>满二</span></div>';
                        case "满五唯一":
                            return '<div class="over"><span>满五唯一</span></div>';
                        default:

                            return '<div><span>' + tag + '</span></div>';
                    }
                }).join('')) + '</dd>\
                <dd>\
                     <span class="money">' + item.totalPrice + '万</span>\
                     <span class="price">' + item.unitPrice + ' 元/㎡</span>\
                </dd>\
            </dl>\
        </a>';
            });

            return str;
        }
    }, {
        key: "createHouseList",
        value: function createHouseList(data, count) {
            // 生成房源列表
            this.hideNoData();
            if (data && data.length) {
                $('.no-data').hide();
                var str = this.createHouseItems(data);

                $('#list').html(str);
                $('.total .count').text(count);
                $('.total').slideDown();
                setTimeout(function () {
                    $('.total').slideUp();
                }, 1500);

                this.insertTrendAndOldHouse();
            } else {
                // 没数据
                this.showNoData();
            }
        }
    }, {
        key: "appendHouseList",
        value: function appendHouseList(data) {
            // 上拉滚动时加载数据
            if (data && data.length) {
                var str = this.createHouseItems(data);
                $('#list').append(str);
                this.insertTrendAndOldHouse();
            } else {// 没有更多数据了
                //this.showNoMore();
            }
        }
    }, {
        key: "showNoData",
        value: function showNoData() {
            // 显示没有数据，并显示新房楼盘推荐
            $('.no-data').show();
            $('.total + div').html('');
            $('.recommendation').show(); // TODO:显示推荐楼盘
        }
    }, {
        key: "hideNoData",
        value: function hideNoData() {
            $('.no-data').hide();
        }
    }, {
        key: "hideNoMore",
        value: function hideNoMore() {
            $('.reach-bottom').hide();
        }
    }, {
        key: "insertTrendAndOldHouse",
        value: function insertTrendAndOldHouse() {
            // 场景连篇       
            var cityName = $('#visitedCityName').val();
            var cityPinyin = $('#visitedCityPinyin').val();
            var channel = $('#channel').val();
            var $list = $('#list .esf-item');
            if ($('#list .scene.house-price').length == 0 && $list.length > 9) {
                $('<a href="/' + cityPinyin + '/trend/esf' + (channel ? "?channel=" + channel : "") + '" class="scene house-price">\
                <div class="img"></div>\
                <div class="info">\
                    <h3>' + cityName + '房价涨了还是跌了？</h3>\
                    <span class="detail">去看看</span>\
                </div>\
            </a>').insertAfter($($list[9]));
            }
            if ($('#list .scene.house').length == 0 && $list.length > 19) {
                $('<a href="/' + cityPinyin + '/xflist/' + (channel ? "?channel=" + channel : "") + '" class="scene house">\
                <div class="img"></div>\
                <div class="info">\
                    <h3>火爆高性价比新房</h3>\
                    <span class="detail">去看看</span>\
                </div>\
            </a>').insertAfter($list[19]);
            }
        }
    }, {
        key: "showError",
        value: function showError() {} // 接口报错，分为两种，1. 筛选条件变更刷新 2. 上拉加载

        // 上拉加载

    }, {
        key: "pullload",
        value: function pullload() {
            var self = this;
            var cityId = $.cookie("xfSelectedCityId");
            var cityPinyin = $.cookie("xfSelectedCityPinyin");
            var cityName = $.cookie("xfSelectedCityName");

            //二手房
            $("#list").pullload({
                apiUrl: self.apiUrl.esf.list.houselist,
                queryStringObject: function queryStringObject() {
                    self.param && delete self.param.pa;
                    if (!self.param) {
                        self.param = {};
                    }
                    return $.extend({}, self.param, { cityId: $('#visitedCityId').val() });
                },
                requestType: "POST",
                threshold: 50,
                pageSize: 10,
                pageIndexKey: "of",
                pageSizeKey: "ps",
                callback: function callback(data) {

                    if (!data.data || !data.data.houseList || !data.data.houseList.length) {
                        data.count = 1;
                        return;
                    }

                    self.appendHouseList(data.data.houseList);
                }
            });
        }
    }]);

    return ListController;
}(Controller);
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
类的初始化
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


$(document).ready(function () {
    new ListController();
});
//# sourceMappingURL=list.min.js.map
