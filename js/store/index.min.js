"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：悟空找房h5
 2. 页面名称：store -> index(门店扫码)
 3. 作者：douyadong@lifang.com
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
var IndexController = function (_Controller) {
    _inherits(IndexController, _Controller);

    function IndexController() {
        _classCallCheck(this, IndexController);

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        给第一个tabs-handle选项添加on样式
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        var _this = _possibleConstructorReturn(this, (IndexController.__proto__ || Object.getPrototypeOf(IndexController)).call(this));

        $(".wk-tabs .tabs-handle li").first().addClass("on");
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        载入组件逻辑
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        require(["../components/bigdata.min", "../components/tabs.min"], function (BigData) {
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            tabs实例化
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(".wk-tabs").tabs({
                "fixedWhenScroll": false,
                "effect": "fadeIn",
                "duration": 200
            });
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        给dom节点绑定事件
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        _this.addEventListener();
        return _this;
    }
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    给dom节点绑定事件
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


    _createClass(IndexController, [{
        key: "addEventListener",
        value: function addEventListener() {
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            页面滚动的时候banner条的变动
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(window).on("scroll", function () {
                var $header = $("header");
                var $storeName = $("header .banner .store-name");
                if ($(window).scrollTop() >= 20) {
                    if (!$header.hasClass("fixed")) $header.addClass("fixed");
                    $storeName.hide();
                } else if ($(window).scrollTop() < 20) {
                    if ($header.hasClass("fixed")) $header.removeClass("fixed");
                    $storeName.show();
                }
            });
        }
    }, {
        key: "createEsf",

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        绘制单条房源dom节点的方法，请参照ejs模板内容
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        value: function createEsf(esf) {
            var aNode = $(document.createElement("A")).attr("href", esf.url).attr("data-bigdata", esf.bigDataParams).addClass("esf-item");
            var dlNode = $(document.createElement("DL"));
            dlNode.append("<dt><img src=\"" + esf.houseImgUrl + "?x-oss-process=image/resize,w_150\" alt=\"" + esf.estateName + "\" class=\"lazy\"></dt>");
            dlNode.append("<dd class=\"title\">" + esf.houseTitle + "</dd>");
            dlNode.append("<dd><span class=\"layout\">" + esf.houseChild + " " + esf.areaStr + "</span><span class=\"money\">" + esf.totalPrice + " 万</span></dd>");
            dlNode.append("<dd><span class=\"location\">" + esf.district + " " + esf.town + "</span><span class=\"price\">" + esf.unitPrice + " 元/㎡</span></dd>");
            var tagNode = $(document.createElement("DD"));
            if (esf.isTopHouse > 1) tagNode.append("<span class=\"selected\">精选</span>");else if (esf.isStorePush === 1) tagNode.append("<span>店长推荐</span>");else if (esf.commAgent > 0) tagNode.append("<span>急售</span>");
            if (esf.fullYears >= 5 && esf.onlyOne == 1) tagNode.append("<span>满五唯一</span>");
            if (esf.fullYears >= 2) tagNode.append("<span>满二</span>");
            if (esf.isSubwayHouse === 1) tagNode.append("<span>地铁</span>");
            if (esf.isSchoolHouse === 1) tagNode.append("<span>近学校</span>");
            if (esf.isNewOnStore === 1) tagNode.append("<span>新上</span>");
            if (esf.orientation === 9) tagNode.append("<span>南北通透</span>");
            dlNode.append(tagNode);
            aNode.append(dlNode);
            return aNode;
        }
    }, {
        key: "createAgent",

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        绘制单条经纪人dom节点的方法，请参照ejs模板内容
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        value: function createAgent(agent) {
            var dlNode = $(document.createElement("DL")).addClass("agent");
            var telNode = $(document.createElement("DD")).addClass("tel").append("<span><i class=\"iconfont icon-tel\"></i></span><span class=\"memo\">电话咨询</span>");
            var wechatNode = $(document.createElement("DD")).addClass("wechat").append("<span><i class=\"iconfont icon-wechat\"></i></span><span class=\"memo\">添加微信</span>");
            var dtNode = $(document.createElement("DT")).append("<a href=\"#\"><img src=\"" + agent.agentHeadImgUrl + "?x-oss-process=image/resize,w_120\" class=\"lazy\"><div class=\"summary\"><p class=\"name\">" + agent.agentName + "</p><p class=\"seniority\">加入悟空：" + agent.serviceYears + "</p></div></a>");
            dlNode.append(telNode).append(wechatNode).append(dtNode);
            return dlNode;
        }
    }]);

    return IndexController;
}(Controller);
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
类的初始化
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


$(document).ready(function () {
    new IndexController();
});
//# sourceMappingURL=index.min.js.map
