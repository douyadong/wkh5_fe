'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：悟空找房h5
 2. 页面名称：trend/esf/district(二手房价格行情 区域)
 3. 作者：liyang@lifang.com
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
var districtController = function (_Controller) {
    _inherits(districtController, _Controller);

    function districtController() {
        _classCallCheck(this, districtController);

        var _this = _possibleConstructorReturn(this, (districtController.__proto__ || Object.getPrototypeOf(districtController)).call(this));

        var echartsData = $('.echart').attr('data-echart');
        if (echartsData) {
            _this.echartFun(_this.recombineM(JSON.parse(echartsData)));
        }
        var that = _this;
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        区域的加载更多和收起
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $('#districtMore').click(function () {
            if ($(this).html() == "加载全部") {
                $('.flag > ul >li:gt(10)').show();
                $(this).html("收起");
            } else {
                $(this).html("加载全部");
                $('.flag > ul >li:gt(10)').hide();
            }
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        搜索框的点击：
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        require(['../../components/trend-search.min'], function (listSearch) {
            listSearch.init(that);
            listSearch.selectFun("icon-search");
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        定位的一个实例
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        new Location({
            businessType: "esfTrend",
            cityApiUrl: _this.apiUrl.common.getCityByLatLon,
            identical: function identical(position) {}
        });
        return _this;
    }
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    折线图函数异步操作
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


    _createClass(districtController, [{
        key: 'echartFun',
        value: function echartFun(echartData) {
            var seriesData = [];
            var countNum = 0;
            var echartShow = true;
            echartData.seriesData.forEach(function (item, index) {
                if (item == 0) {
                    seriesData.push(null);
                    countNum += 1;
                    if (countNum == 11 && index == 10) {
                        echartShow = false;
                    }
                } else {
                    seriesData.push(parseFloat(item));
                }
            });
            if (!echartShow) {
                $('#estateEchart').hide();
                return;
            }
            var sortArray = echartData.seriesData.sort(function (a, b) {
                return parseFloat(a) - parseFloat(b);
            });
            var maxPrice = Math.ceil(sortArray[sortArray.length - 1] / 1000) * 1000;
            var minPrice = Math.ceil(sortArray[0] / 1000 - 1) * 1000;
            var avgPrice = 1000;
            if (maxPrice == minPrice) {
                minPrice = maxPrice - 2000;
                avgPrice = 1000;
            } else {
                avgPrice = (maxPrice - minPrice) / 4 < 1000 ? 1000 : Math.ceil((maxPrice - minPrice) / 4000) * 1000;
            }
            minPrice = minPrice < 0 ? 0 : minPrice;
            var myChart = echarts.init(document.getElementById('main'), { width: '92%' });
            var that = this;
            // 指定图表的配置项和数据
            var option = {
                tooltip: { // 提示框
                    trigger: 'item',
                    triggerOn: 'click',
                    position: 'top',
                    backgroundColor: '#4081D6',
                    padding: 4,
                    textStyle: {
                        color: '#fff',
                        fontSize: '12'
                    },
                    formatter: function formatter(params, ticket, callback) {
                        var paramsValue = params.value + "元";
                        return paramsValue;
                    }
                },
                grid: {
                    bottom: 20,
                    left: '3%',
                    right: '10%',
                    containLabel: true
                },
                xAxis: {
                    name: "(月)",
                    nameGap: 15,
                    nameTextStyle: {
                        position: 'relative',
                        top: 20
                    },
                    data: echartData.monthList, // X坐标数据
                    splitLine: { show: false }, // 控制网格线是否显示
                    axisTick: { show: false }, // 去除x轴上的刻度线
                    position: 'bottom',
                    type: 'category',
                    boundaryGap: false,
                    axisLine: {
                        lineStyle: {
                            color: '#fff' // x轴颜色
                        }
                    },
                    axisLabel: {
                        interval: 0,
                        rotate: 0, //60度角倾斜显示
                        textStyle: {
                            color: '#999',
                            fontSize: 12,
                            fontFamily: '微软雅黑'
                        }
                    }
                },
                yAxis: {
                    axisLine: { show: false }, // y轴是否显示
                    splitLine: {
                        show: true, // 控制网格线是否显示
                        lineStyle: {
                            color: ['#979797'], // y刻度颜色
                            type: 'dotted'
                        }
                    },
                    axisTick: { show: false }, // 去除y轴上的刻度线
                    axisLabel: {
                        inside: false,
                        textStyle: {
                            color: '#999'
                        },
                        formatter: function formatter(value, index) {
                            if (value == 0) {
                                return "";
                            } else {
                                return value / 10000 + ' 万';
                            }
                        }
                    },
                    position: 'right',
                    min: minPrice,
                    max: avgPrice * 5,
                    interval: avgPrice
                },
                series: [{
                    name: '销量',
                    type: 'line',
                    lineStyle: {
                        normal: {
                            color: '#4081D6', // 折线条颜色
                            width: 3
                        }

                    },
                    itemStyle: {
                        normal: {
                            color: "#4081D6", //图标颜色
                            borderWidth: 2
                        },
                        emphasis: { //重点，强调时候的样式，即当鼠标悬停或点击上去的时候的拐点的样式
                            borderColor: '#4081D6',
                            borderWidth: 2,
                            color: '#4081D6'
                        }
                    },
                    areaStyle: { //区域填充样式
                        normal: {
                            //线性渐变
                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                offset: 1, color: 'rgba(64,129,214,0.15)' // 0% 处的颜色'#b1e3fe'
                            }, {
                                offset: 1, color: '#fff' // 100% 处的颜色
                            }], false)
                        }
                    },
                    symbolSize: 10,
                    connectNulls: true,
                    data: seriesData
                }]
            };
            myChart.setOption(option);
        }
    }, {
        key: 'recombineM',

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        处理得到的数据的函数  处理月份和数据
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        value: function recombineM(data) {
            var echartData = {
                monthList: [],
                seriesData: []
            };
            if (data) {
                data.forEach(function (item, index) {
                    var month = item.date.split('-')[1];
                    if (month.indexOf('0') == 0) {
                        echartData.monthList.push(month.charAt(1));
                    } else {
                        echartData.monthList.push(month);
                    }
                    echartData.seriesData.push(item.unitPrice);
                });
            }
            echartData.monthList[11] = "     " + echartData.monthList[11] + "   (月)";
            return echartData;
        }
    }]);

    return districtController;
}(Controller);
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
类的初始化
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


$(document).ready(function () {
    new districtController();
});
//# sourceMappingURL=district.min.js.map
